[1,0,0,[["cc.TextAsset",["_name","text"],1]],[[0,0,1,3]],[[0,"README","# __PrefabPool__  预制体对象池\n* get - 从对象池中获取对象\n     * @param prefab cc.Prefab 需给此对象设置属性poolKey，创建时会赋值\n     * @param poolKey string \n     * @param poolHandlerComp Function 缓冲池处理组件，用于节点的回收和复用逻辑，这个参数可以是组件类名或组件的构造函数\n     * @returns cc.Node\n\n```javascript\n    PrefabPool.get(this.gridPrefab, \"L2_W7_D4_G1_Grid\", L2_W7_D4_G1_Grid);\n```\n\n* put - 回收对象\n     * @param node cc.Node - 需给此对象设置属性poolKey，否则回收失效\n     * @param poolKey string\n     * @param poolHandlerComp Function 缓冲池处理组件，用于节点的回收和复用逻辑，这个参数可以是组件类名或组件的构造函数\n     * @returns void\n\n```javascript\n    PrefabPool.put(node, node[\"poolKey\"], L2_W7_D4_G1_Grid);\n```\n\n* clear - 清理某个对象池\n     * @param poolKey \n\n```javascript\n    PrefabPool.clear(\"L2_W7_D4_G1_Grid\");\n```\n\n* clearAll - 清理所有对象池\n\n```javascript\n    PrefabPool.clearAll();\n```\n\n* size - 获取某个对象池长度\n     * @param poolKey \n\n     * @returns number\n\n```javascript\n    PrefabPool.size(\"L2_W7_D4_G1_Grid\");\n```\n\n# __IPoolHandlerComp -对象池获取回收接口__\n* reuse - 复用处理\n\n* unuse - 回收处理\n"]],0,0,[],[],[]]
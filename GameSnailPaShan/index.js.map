{"version":3,"sources":["assets/GameSnailPaShan/scripts/GameSnailPaShan.ts","assets/GameSnailPaShan/res/hand/script/HandCtr.ts","assets/GameSnailPaShan/scripts/ItemSnailPaShanQ.ts"],"names":["ItemSnailPaShanQ_1","require","HandCtr_1","_a","cc","_decorator","ccclass","property","GameSnailPaShan","_super","__extends","_this","apply","this","arguments","arrAudio","arrQues","arrAnswer","btnNext","skeletonRole","isLock","isFinish","quesIndex","selectItems","pageNum","arrNodeForRolePos","event_game_next","event_game_touch","event_game_end","reDebug","isTeacher","tiptimeCount","tipTimeMax","tipState","dataQues","options","answers","soundId","dataSpine","prototype","onDisable","kit","AudioPlayer","stopAll","onDestroy","call","sendMessage","start","setIsLock","initData","resetData","updateUI","nextQuestion","update","dt","tipShow","nodeRole","node","parent","getArrByNode","_data","content","actionData","cmd","info","page","refreshDataForMsg","result","updateDataForMsg","window","sessionStorage","removeItem","updateUIForRole","updateUIForQues","updateUIForAnswer","updateUIForBtn","itemRole","selectNum","length","snail2","position","angle","playAnimation","index","element","active","indexOf","optionOne","script","getComponent","default","updateUIForLabel","isContain","every","val","includes","tipStateSet","state","_loop_1","this_1","hand","getChildByName","script_1","count_1","number_1","funcHand_1","Click","tipHide","_loop_2","this_2","opacity","tween","to","timeDelay","timeShow","itmeLabel","delay","itemA","nodeLabel","arrLabel","scheduleOnce","eventNext","msgResultNext","timeHide","itemB","scriptB","nodeLabelB","eventTouch","_event","itemId","target","answerId","checkId","msgResultTouch","callBack","playAniWin","playAniSuccess","bind","playAniWrong","itemQ","nodeSnail","timeThrow","funcThrow","playEffect","itemCM","posGoal","itemIcon","getLocalPos","scale","initOptForItemCM","p1","v2","x","y","p2","pTo","tn","parallel","bezierTo","arrSpine","playAniArray","timedrop","funcDrop","initOptForItemQ","funcShow","label","timeSnail","findAnimation","duration","timeMove","funcSnail","setToSetupPose","clearTracks","entry","setAnimation","addAnimation","setTrackEventListener","trackIndex","event","data","name","snailRole","initAngle","push","object","handleData","key","Object","hasOwnProperty","tempData","receiveMessage","postMessage","JSON","stringify","skeleton","aniName","isLoop","timeScale","setCompleteListener","string","child","children","arrObj","strlen","sort","a","b","indexA","Number","slice","indexB","concat","nodecur","nodeGoal","pointWorld","convertToWorldSpaceAR","convertToNodeSpaceAR","setParams","log","setContent","__decorate","AudioClip","Node","sp","Skeleton","Component","exports","HandSpineAnimationName","ApertureAnimationName","HandCtr","skAperture","skHand","arrow","arrowWidth","onEnable","stopAllActions","width","unscheduleAllCallbacks","Press","callback","playSpine","danji","dianji","Lift","taishou","ClickCycle","schedule","macro","REPEAT_FOREVER","ClickCycleByScale","mScale","speed","TouchAnimation","starPos","endPos","time","setPosition","v3","MoveWithPosList","nxetPosList","allMove","v","move","Promise","resolve","reject","pos","_i","nxetPosList_1","queue","arr","sequence","forEach","item","then","res","TouchCycle","waitTime","runTime","Math","abs","arrowHeight","dir","sub","signAngle","degree","PI","sqrt","stopCycleAllAction","Tween","stopAllByTarget","wipeCycle","len","mag","repeatForever","spNode","spName","loop","track","trackEntry","loopCount","animation","type","displayName","ItemSnailPaShanQ","idQ"],"mappings":"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","sourcesContent":["import GameItem from './ItemSnailPaShanQ';\nimport HandCtr from '../res/hand/script/HandCtr';\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class GameSnailPaShan extends cc.Component implements center.ISubGame {\n\n    @property([cc.AudioClip])\n    arrAudio: cc.AudioClip[] = [];// 音频：0:drop 1:error 2:throw 3:walk 4:win\n\n    @property([cc.Node])\n    arrQues: cc.Node[] = [];// 操作项\n\n    @property([cc.Node])\n    arrAnswer: cc.Node[] = [];// 目标项\n\n    @property(cc.Node)\n    btnNext: cc.Node = null;// 按钮：下一题\n\n    @property(sp.Skeleton)\n    skeletonRole: sp.Skeleton = null;// 角色spine\n\n    isLock: boolean = false;// 锁定状态标识：锁定时，不能进行操作\n    isFinish: boolean = false;// 游戏结束标识\n    quesIndex: number = 0;// 题目\n    selectItems: number[] = [];// 答题状况\n    pageNum: number = 0;// 游戏在课件内的页数\n    arrNodeForRolePos: cc.Node[] = [];\n\n    /** 事件 */\n    event_game_next: string = 'EVENT_GAME_NEXT';\n    event_game_touch: string = 'EVENT_GAME_TOUDH';\n    event_game_end: string = 'EVENT_GAME_END';\n\n    /** 大厅相关 */\n    reDebug: boolean = false;\n    bundleName: string;\n    content: center.IContent;\n    isTeacher: boolean = this.reDebug ? true : false;\n\n    /** 提示 */\n    tiptimeCount: number = 0;\n    tipTimeMax: number = 10;\n    tipState: number = 0; // 0:计时状态  1:播放状态\n\n    /** 游戏数据 */\n    dataQues = {\n        options: [\n            { answers: [3, 0], soundId: 0 },\n            { answers: [1], soundId: 0 },\n            { answers: [5], soundId: 0 },\n            { answers: [2, 4], soundId: 0 },\n        ],\n        dataSpine: [\n            'idle', 'chi', 'zou', 'kaixin'\n        ],\n    };\n\n    onDisable(): void {\n        kit.AudioPlayer.stopAll();\n    }\n\n    onDestroy(): void {\n        super.onDestroy();\n        this.sendMessage(this.event_game_end, {});\n    }\n\n    start(): void {\n        this.setIsLock(true);\n        // 初始化数据\n        this.initData();\n        // 重置数据\n        this.resetData();\n        // 刷新ui\n        this.updateUI();\n        // 进入下一题\n        this.nextQuestion();\n    }\n\n    update(dt): void {\n        if (this.tipState === 0) {\n            this.tiptimeCount += dt;\n            if (this.tiptimeCount >= this.tipTimeMax) {\n                this.tiptimeCount = 0;\n                this.tipState = 1;\n                this.tipShow();\n            }\n        }\n    }\n\n    /** 初始化数据 */\n    initData(): void {\n        let nodeRole = this.skeletonRole.node.parent;\n        this.arrNodeForRolePos = this.getArrByNode(nodeRole, 'pos');\n    }\n\n    /** 重置数据 */\n    resetData(): void {\n        var _data = this.content && this.content['getSnapshot'] ? this.content['getSnapshot']() : {};\n        if (_data) {\n            _data = _data.actionData;\n        }\n        // 断线重连测试\n        // let msg = [\n        //     {\"cmd\":\"EVENT_GAME_TOUDH\",\"page\":0,\"info\":{\"itemId\":3,\"result\":true,\"quesIndex\":0,\"selectItems\":[]}},\n        //     {\"cmd\":\"EVENT_GAME_TOUDH\",\"page\":0,\"info\":{\"itemId\":0,\"result\":true,\"quesIndex\":0,\"selectItems\":[3]}},\n        //     {\"cmd\":\"EVENT_GAME_NEXT\",\"page\":0,\"info\":{\"itemId\":0,\"result\":false,\"quesIndex\":1,\"selectItems\":[3,0]}},\n        //     {\"cmd\":\"EVENT_GAME_TOUDH\",\"page\":0,\"info\":{\"itemId\":1,\"result\":true,\"quesIndex\":1,\"selectItems\":[3,0]}},\n        //     {\"cmd\":\"EVENT_GAME_NEXT\",\"page\":0,\"info\":{\"itemId\":0,\"result\":false,\"quesIndex\":2,\"selectItems\":[3,0,1]}},\n        //     {\"cmd\":\"EVENT_GAME_TOUDH\",\"page\":0,\"info\":{\"itemId\":5,\"result\":true,\"quesIndex\":2,\"selectItems\":[3,0,1]}},\n        //     {\"cmd\":\"EVENT_GAME_NEXT\",\"page\":0,\"info\":{\"itemId\":0,\"result\":false,\"quesIndex\":3,\"selectItems\":[3,0,1,5]}},\n        //     {\"cmd\":\"EVENT_GAME_TOUDH\",\"page\":0,\"info\":{\"itemId\":2,\"result\":true,\"quesIndex\":3,\"selectItems\":[3,0,1,5]}},\n        //     {\"cmd\":\"EVENT_GAME_TOUDH\",\"page\":0,\"info\":{\"itemId\":4,\"result\":true,\"quesIndex\":3,\"selectItems\":[3,0,1,5,2]}},\n        // ];\n        // _data = msg[0];\n        if (_data\n            && _data.cmd && _data.cmd != this.event_game_end\n            && _data.info\n            && _data.page == this.pageNum) {\n            let info = _data.info;\n            this.refreshDataForMsg(info);\n            if (_data.cmd === this.event_game_touch) {\n                if (info.result) {\n                    this.updateDataForMsg(info);\n                }\n            }\n            window.sessionStorage.removeItem(\"workInfoList\");\n        }\n    }\n\n    /** 刷新ui */\n    updateUI(): void {\n        this.updateUIForRole();\n        this.updateUIForQues();\n        this.updateUIForAnswer();\n        this.updateUIForBtn();\n    }\n\n    /** 更新角色ui */\n    updateUIForRole(): void {\n        let itemRole = this.skeletonRole.node;\n        let selectNum = this.selectItems.length;\n        let snail2 = this.arrNodeForRolePos[selectNum];\n        itemRole.position = snail2.position;\n        itemRole.angle = snail2.angle;\n        let dataSpine = this.dataQues.dataSpine;\n        this.playAnimation(this.skeletonRole, dataSpine[0], true, 1, null);\n    }\n\n    /** 更新问题ui */\n    updateUIForQues(): void {\n        for (let index = 0, length = this.arrQues.length; index < length; index++) {\n            const element = this.arrQues[index];\n            element.active = this.selectItems.indexOf(index) < 0;\n        }\n    }\n\n    /** 更新答案ui */\n    updateUIForAnswer(): void {\n        for (let index = 0, length = this.arrAnswer.length; index < length; index++) {\n            const element = this.arrAnswer[index];\n            element.active = index === this.quesIndex;\n            if (element.active) {\n                let optionOne = this.dataQues.options[index];\n                let script = element.getComponent(GameItem);\n                script.updateUIForLabel(optionOne.answers, this.selectItems);\n            }\n        }\n    }\n\n    /** 更新按钮ui */\n    updateUIForBtn() {\n        this.btnNext.active = false;\n        if (this.quesIndex < this.dataQues.options.length - 1) {\n            let optionOne = this.dataQues.options[this.quesIndex];\n            let isContain = optionOne.answers.every(val => this.selectItems.includes(val));\n            this.btnNext.active = isContain ? this.isTeacher : false;\n        }\n    }\n\n    /** 小手提示：初始化 */\n    tipStateSet(state): void {\n        this.tipState = state;\n        this.tiptimeCount = 0;\n    }\n\n    /** 小手提示：显示 */\n    tipShow(): void {\n        for (let index = 0, length = this.arrQues.length; index < length; index++) {\n            const element = this.arrQues[index];\n            let hand = element.getChildByName('hand');\n            if (element.active) {\n                hand.active = true;\n                let script = hand.getComponent(HandCtr);\n                let count = 0, number = 3;\n                let funcHand = () => {\n                    if (count < number) {\n                        count++;\n                        script.Click(funcHand);\n                    }\n                    else {\n                        this.tipHide();\n                        this.tipStateSet(0);\n                    }\n                };\n                funcHand();\n            }\n        }\n    }\n\n    /** 小手提示：隐藏 */\n    tipHide(): void {\n        for (let index = 0, length = this.arrQues.length; index < length; index++) {\n            const element = this.arrQues[index];\n            let hand = element.getChildByName('hand');\n            if (element.active && hand.active) {\n                hand.active = true;\n                hand.opacity = 255;\n                cc.tween(hand).to(0.3, { opacity: 0 }).call(() => {\n                    hand.opacity = 255;\n                    hand.active = false;\n                }).start();\n            }\n        }\n    }\n\n    /** 进入下一题 */\n    nextQuestion(): void {\n        if (this.isFinish) return;\n        if (this.selectItems.length > 0) {\n            this.setIsLock(false);\n        }\n        else {\n            this.tipHide();\n            this.tipStateSet(0);\n\n            let timeDelay = 0.5;\n            let timeShow = 0.5;\n            for (let index = 0, length = this.arrQues.length; index < length; index++) {\n                const element = this.arrQues[index];\n                if (element.active) {\n                    let itmeLabel = element.getChildByName('label');\n                    itmeLabel.opacity = 0;\n                    cc.tween(itmeLabel).delay(timeDelay).to(timeShow, { opacity: 255 }).start();\n                }\n            }\n            let itemA = this.arrAnswer[this.quesIndex];\n            let script = itemA.getComponent(GameItem);\n            let nodeLabel = script.arrLabel[0].parent;\n            nodeLabel.opacity = 0;\n            cc.tween(nodeLabel).delay(timeDelay).to(timeShow, { opacity: 255 }).start();\n            this.scheduleOnce(() => {\n                this.setIsLock(false);\n                this.tipShow();\n                this.tipStateSet(1);\n            }, timeDelay + timeShow);\n        }\n    }\n\n    /** 事件：点击下一题 */\n    eventNext(): void {\n        this.btnNext.active = false;\n        this.quesIndex++;\n        this.sendMessage(this.event_game_next, {});\n    }\n\n    /** 回掉：点击下一题 */\n    msgResultNext(_data: any): void {\n        this.tipHide();\n        this.tipStateSet(0);\n\n        this.refreshDataForMsg(_data);\n\n        let timeHide = 0.4;\n        let timeShow = 0.4;\n        let itemA = this.arrAnswer[this.quesIndex - 1];\n        let script = itemA.getComponent(GameItem);\n        let nodeLabel = script.arrLabel[0].parent;\n        nodeLabel.opacity = 255;\n        cc.tween(nodeLabel).to(timeHide, { opacity: 0 }).call(() => {\n            itemA.active = false;\n        }).start();\n\n        let itemB = this.arrAnswer[this.quesIndex];\n        let scriptB = itemB.getComponent(GameItem);\n        let nodeLabelB = scriptB.arrLabel[0].parent;\n        itemB.active = true;\n        nodeLabelB.opacity = 0;\n        cc.tween(nodeLabelB).delay(timeHide).to(timeShow, { opacity: 255 }).call(() => {\n            this.updateUIForBtn();\n            this.nextQuestion();\n        }).start();\n    }\n\n    /** 事件：点击选项 */\n    eventTouch(_event: cc.Event): void {\n        if (this.isLock) return;\n        let itemId = this.arrQues.indexOf(_event.target.parent);\n        // 点击异常\n        if (itemId < 0 || this.selectItems.indexOf(itemId) >= 0) {\n            return;\n        }\n        let result = true;\n        let optionOne = this.dataQues.options[this.quesIndex];\n        let answerId = optionOne.answers.indexOf(itemId);\n        if (answerId > 0) {\n            let checkId = optionOne.answers[answerId - 1];\n            if (this.selectItems.indexOf(checkId) < 0) {\n                result = false;\n            }\n        }\n        else if (answerId < 0) {\n            result = false;\n        }\n        this.sendMessage(this.event_game_touch, { itemId: itemId, result: result });\n    }\n\n    /** 回掉：点击选项 */\n    msgResultTouch(_data: any): void {\n        this.tipHide();\n        this.tipStateSet(0);\n\n        this.setIsLock(true);\n        let itemId = _data.itemId;\n        let result = _data.result;\n        this.refreshDataForMsg(_data);\n        if (result) {\n            let callBack = () => {\n                this.updateDataForMsg(_data);\n                if (this.isFinish) {\n                    this.playAniWin();\n                }\n                else {\n                    this.updateUI();\n                    let optionOne = this.dataQues.options[this.quesIndex];\n                    let isContain = optionOne.answers.every(val => this.selectItems.includes(val));\n                    if (!isContain) {\n                        this.nextQuestion();\n                    }\n                }\n            };\n            this.playAniSuccess(itemId, callBack.bind(this));\n        }\n        else {\n            let callBack = () => {\n                this.setIsLock(false);\n            };\n            this.playAniWrong(itemId, callBack.bind(this));\n        }\n    }\n\n    playAniSuccess(itemId: number, callBack: Function): void {\n        let dataSpine = this.dataQues.dataSpine;\n        let itemQ = this.arrQues[itemId];\n        let nodeSnail = this.skeletonRole.node;\n        // 草莓抛飞\n        let timeThrow = 1.5;\n        let funcThrow = () => {\n            kit.AudioPlayer.playEffect(this.arrAudio[2]);\n            let itemCM = nodeSnail.parent.getChildByName('icon');\n            itemCM.active = true;\n            let posGoal = nodeSnail.position;\n            let itemIcon = itemQ.getChildByName('icon');\n            itemIcon.active = false;\n            itemCM.position = this.getLocalPos(itemIcon, itemCM.parent);\n            itemCM.scale = itemIcon.scale * 1.2;\n            itemCM.angle = itemIcon.angle;\n            let initOptForItemCM = {\n                position: itemCM.position,\n                scale: itemCM.scale,\n                angle: itemCM.angle,\n            };\n            let p1 = cc.v2(initOptForItemCM.position.x, initOptForItemCM.position.y);\n            let p2 = cc.v2(posGoal.x, posGoal.y + 50);\n            let pTo = cc.v2((p1.x + p2.x) / 2, p1.y + 700);\n            let tn = cc.tween;\n            tn(itemCM)\n                .parallel(\n                    tn().bezierTo(timeThrow, p1, pTo, p2),\n                    tn().to(0.3, { scale: initOptForItemCM.scale / 1.2 }),\n                    tn().to(timeThrow, { angle: initOptForItemCM.angle + 360 * 3 }),\n                )\n                .call(() => {\n                    itemCM.active = false;\n                    this.playAnimation(this.skeletonRole, dataSpine[0], true, 1, null);\n                    let arrSpine = [dataSpine[1], dataSpine[0]];\n                    this.playAniArray(this.skeletonRole, 0, arrSpine, null);\n                }).start();\n        };\n\n        // 选项下落\n        let timedrop = 0.4;\n        let funcDrop = () => {\n            kit.AudioPlayer.playEffect(this.arrAudio[0]);\n            let initOptForItemQ = {\n                y: itemQ.y,\n                opacity: itemQ.opacity,\n            };\n            cc.tween(itemQ).to(timedrop, { y: initOptForItemQ.y - 200, opacity: 0 })\n                .call(() => {\n                    itemQ.y = initOptForItemQ.y;\n                    itemQ.opacity = initOptForItemQ.opacity;\n                    itemQ.active = false;\n                }).start();\n        };\n\n        // 显示答案\n        let timeShow = 0.4;\n        let funcShow = () => {\n            let optionOne = this.dataQues.options[this.quesIndex];\n            let answerId = optionOne.answers.indexOf(itemId);\n            let itemA = this.arrAnswer[this.quesIndex];\n            let script = itemA.getComponent(GameItem);\n            let label = script.arrLabel[answerId];\n            label.active = true;\n            label.opacity = 0;\n            cc.tween(label).to(timeShow, { opacity: 255 }).start();\n        };\n        // 蜗牛移动\n        let timeSnail = this.skeletonRole.findAnimation(dataSpine[2]).duration;\n        let timeMove = 1.634;\n        let funcSnail = () => {\n            this.skeletonRole.setToSetupPose();\n            this.skeletonRole.clearTracks();\n            let entry = this.skeletonRole.setAnimation(0, dataSpine[2], false);\n            this.skeletonRole.addAnimation(0, dataSpine[0], true);\n            this.skeletonRole.setTrackEventListener(entry, (trackIndex, event) => {\n                if (event.data.name === \"1\") {\n                    kit.AudioPlayer.playEffect(this.arrAudio[3]);\n                    let snail2 = this.arrNodeForRolePos[this.selectItems.length + 1];\n                    let tn = cc.tween;\n                    tn(nodeSnail).parallel(\n                        tn().to(timeMove, { position: snail2.position }),\n                        tn().to(timeMove, { angle: snail2.angle }),\n                    ).start();\n                    return;\n                }\n            });\n        };\n\n        cc.tween(this.node).call(() => {\n            funcThrow();\n        }).delay(timeThrow).call(() => {\n            funcDrop();\n        }).delay(timedrop / 2).call(() => {\n            funcShow();\n        }).delay(timeShow).call(() => {\n            funcSnail();\n        }).delay(timeSnail).call(() => {\n            callBack();\n        }).start();\n    }\n\n    playAniWrong(itemId: number, callBack: Function): void {\n        kit.AudioPlayer.playEffect(this.arrAudio[1]);\n        let itemQ = this.arrQues[itemId];\n        cc.tween(itemQ)\n            .to(0.2, { angle: -10 })\n            .to(0.2, { angle: 10 })\n            .to(0.2, { angle: -10 })\n            .to(0.2, { angle: 0 })\n            .call(() => {\n                callBack();\n            })\n            .start();\n    }\n\n    playAniWin(): void {\n        kit.AudioPlayer.playEffect(this.arrAudio[4]);\n        let dataSpine = this.dataQues.dataSpine;\n        let arrSpine = [dataSpine[3], dataSpine[0]];\n        let snailRole = this.skeletonRole.node;\n        let initAngle = snailRole.angle;\n        snailRole.angle = 0;\n        this.playAniArray(this.skeletonRole, 0, arrSpine, () => {\n            snailRole.angle = initAngle;\n        });\n    }\n\n    setIsLock(isLock: boolean): void {\n        this.isLock = isLock;\n    }\n\n    refreshDataForMsg(_data: any): void {\n        this.quesIndex = _data.quesIndex;\n        this.selectItems = _data.selectItems;\n    }\n\n    updateDataForMsg(_data: any): void {\n        this.selectItems.push(_data.itemId);\n        if (this.selectItems.length > this.arrQues.length - 1) {\n            this.isFinish = true;\n        }\n    }\n\n    /**\n     * 发送消息\n     * @param cmd \n     * @param object \n     */\n    sendMessage(cmd: string, object: {}): void {\n        var handleData = {\n            cmd: cmd,\n            page: this.pageNum,\n            info: {\n                itemId: 0,\n                result: false,\n                quesIndex: this.quesIndex,\n                selectItems: this.selectItems,\n            }\n        };\n        for (const key in object) {\n            if (Object.prototype.hasOwnProperty.call(object, key)) {\n                handleData.info[key] = object[key];\n            }\n        }\n\n        let tempData = {\n            isTeacher: this.isTeacher,\n            actionData: handleData\n        };\n        if (this.reDebug) {\n            this.receiveMessage(tempData);\n            return;\n        }\n        this.content.postMessage(JSON.stringify(tempData));\n    }\n\n    /**\n     * 播放骨骼动画\n     * @param {*} skeleton \n     * @param {*} aniName \n     * @param {*} isLoop \n     * @param {*} callBack \n     */\n    playAnimation(skeleton, aniName, isLoop, timeScale, callBack) {\n        skeleton.timeScale = timeScale;\n        skeleton.setToSetupPose();\n        skeleton.clearTracks();\n        if (callBack) {\n            skeleton.setCompleteListener(() => {\n                skeleton.setCompleteListener(null);\n                callBack();\n            });\n        }\n        let entry = skeleton.setAnimation(0, aniName, isLoop);\n        return entry;\n    }\n\n    /**\n     * 播放动画数组\n     * @param {*} skeleton \n     * @param {*} index \n     * @param {*} arrSpine \n     * @param {*} callBack \n     */\n    playAniArray(skeleton, index, arrSpine, callBack) {\n        let length = arrSpine.length;\n        if (index < length - 1) {\n            this.playAnimation(skeleton, arrSpine[index], false, 1, () => {\n                index++;\n                this.playAniArray(skeleton, index, arrSpine, callBack);\n            });\n        }\n        else {\n            this.playAnimation(skeleton, arrSpine[index], true, 1, null);\n            if (callBack) {\n                callBack();\n            }\n        }\n    };\n\n    /** 从节点上获取数组 */\n    getArrByNode(node: cc.Node, string: string): cc.Node[] {\n        let child = node.children;\n        let arrObj: cc.Node[] = [];\n        for (let index = 0, length = child.length; index < length; index++) {\n            const element = child[index];\n            if (element.name.indexOf(string) < 0) {\n                continue;\n            }\n            arrObj.push(element);\n        }\n        let strlen = string.length;\n        arrObj.sort(function (a, b) {\n            let indexA = Number(a.name.slice(strlen, a.name.length));\n            let indexB = Number(b.name.slice(strlen, b.name.length));\n            return indexA - indexB;\n        });\n        return [].concat(arrObj);\n    };\n\n    /**\n     * 获取 当前节点的坐标，相对于目标节点的位置\n     * @param {*} nodecur \n     * @param {*} nodeGoal \n     */\n    getLocalPos(nodecur: cc.Node, nodeGoal: cc.Node): cc.Vec3 {\n        let pointWorld = nodecur.parent.convertToWorldSpaceAR(nodecur.position)\n        return nodeGoal.convertToNodeSpaceAR(pointWorld);\n    };\n\n    /*********************************** 需要实现的抽象函数 **********************************/\n    setParams(data: { evn: center.EVN; isTeacher?: boolean; userInfo?: center.UserInfo; font?: cc.Font; }): void {\n        cc.log(`set params: ${JSON.stringify(data)}`);\n        this.pageNum = 0;\n        this.isTeacher = data.isTeacher || false;\n    }\n\n    setContent(content: center.IContent): void {\n        this.content = content;\n    }\n\n    receiveMessage(data: any): void {\n        let handleData = data.actionData;\n        cc.log(`${JSON.stringify(handleData)},`);\n        if (handleData && handleData.cmd && handleData.info) {\n            let info = handleData.info;\n            switch (handleData.cmd) {\n                case this.event_game_next:\n                    this.msgResultNext(info);\n                    break;\n                case this.event_game_touch:\n                    this.msgResultTouch(info);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n}\n","\n\nconst { ccclass, property } = cc._decorator;\n\nenum HandSpineAnimationName {\n    danji = \"dainji\",\n    dianji = 'dainjitaiqi',\n    taishou = 'taiqi',\n}\n\nenum ApertureAnimationName {\n    dianji = 'dianji',\n    taishou = 'taishou'\n}\n\n@ccclass\nexport default class HandCtr extends cc.Component {\n\n    @property({ type: sp.Skeleton, displayName: '光圈' }) skAperture: sp.Skeleton = null;\n    @property({ type: sp.Skeleton, displayName: '手指' }) skHand: sp.Skeleton = null;\n    @property({ type: cc.Node, displayName: '箭头' }) arrow: cc.Node = null;\n    private arrowWidth: number = 0//箭头长度\n    start() {\n        // this.Press();\n\n        // this.scheduleOnce(() => { this.Lift(); }, 5);\n        //this.Click();\n        // this.ClickCycle();\n\n        // this.TouchCycle(cc.v2(-100, -200), cc.v2(100, 200));gong\n    }\n\n    onEnable() {\n        this.skAperture.node.active = false;\n    }\n\n    onDisable() {\n        this.arrow.stopAllActions()\n        this.arrow.width = 0;\n        this.node.stopAllActions();\n        this.unscheduleAllCallbacks();\n    }\n\n    /* 按下 */\n    private Press(callback: Function) {\n        this.skAperture.node.active = false;\n        this.playSpine(this.skHand, HandSpineAnimationName.danji, false, () => {\n            this.skAperture.node.active = true;\n            this.playSpine(this.skAperture, ApertureAnimationName.dianji, false, () => {\n                callback && callback();\n            });\n        });\n    }\n\n    /* 抬起 */\n    private Lift(callback: Function) {\n        this.playSpine(this.skHand, HandSpineAnimationName.taishou, false, () => {\n\n            callback && callback();\n        });\n    }\n\n    /* 点击 */\n    Click(callback: Function = null) {\n        this.skAperture.node.active = true;\n        this.playSpine(this.skAperture, ApertureAnimationName.dianji, false);\n        this.playSpine(this.skHand, HandSpineAnimationName.danji, false, () => {\n            this.playSpine(this.skHand, HandSpineAnimationName.taishou, false, () => {\n                callback && callback();\n            });\n        });\n    }\n\n    /* 点击循环 */\n    ClickCycle() {\n        this.node.active = true\n        this.schedule(() => {\n            this.Click();\n        }, 2, cc.macro.REPEAT_FOREVER, 0.01);\n    }\n\n    /* 可以调节点击速度的 点击循环 */\n    ClickCycleByScale(mScale,speed) {\n        this.node.active=true\n        this.schedule(() => {\n            this.Click();\n        }, speed,cc.macro.REPEAT_FOREVER,0.01);\n        this.skHand.timeScale = mScale;\n        this.skAperture.timeScale = mScale;\n    }\n\n    TouchAnimation(starPos: cc.Vec2, endPos: cc.Vec2, time: number = 0.5) {\n        this.node.active = true\n        this.node.stopAllActions();\n        this.node.setPosition(starPos);\n        this.arrow.width = 0;\n        this.Press(() => {\n            cc.tween(this.node)\n                .to(time, { position: cc.v3(endPos.x, endPos.y, 0) })\n                .call(() => {\n                    this.Lift(null)\n                })\n                .start();\n            cc.tween(this.arrow)\n                .to(time, { width: this.arrowWidth })\n                .call(() => {\n                })\n                .start();\n        });\n    }\n\n    /**\n     *  单次滑动，可以传入多个 位移点\n     * @param starPos  起始点\n     * @param nxetPosList 下次目标点 和移动时间\n     */\n    MoveWithPosList(starPos: cc.Vec2, nxetPosList: { pos: cc.Vec2, time: number }[]) {\n        this.node.active = true\n        this.node.stopAllActions();\n        this.node.setPosition(starPos);\n        this.arrow.width = 0;\n\n        let allMove=[]\n        for (let v of nxetPosList) {\n            let move = ()=>{\n                return new Promise((resolve, reject) => {\n                    cc.tween(this.node)\n                    .to(v.time, { position: cc.v3(v.pos.x, v.pos.y, 0) })\n                    .call(()=>{\n                        resolve(null)\n                    }).start()\n                })\n            }\n            allMove.push(move)\n        }\n\n        function queue(arr) {\n            let sequence = Promise.resolve()\n            arr.forEach(item => {\n                sequence = sequence.then(item)\n            })\n            return sequence\n        }\n       return new Promise<void>((resolve)=>{\n        this.Press(()=>{\n            queue(allMove).then(res => {\n                this.Lift(null)\n                resolve()\n            })\n        });\n       })\n      \n    }\n\n\n\n    /**\n     * 拖拽循环\n     * @param starPos 开始位置\n     * @param endPos 结束位置\n     * @param waitTime 上一次与下一次的运行间隔\n     * @param runTime 运行花费的时间\n     */\n    TouchCycle(starPos: cc.Vec2, endPos: cc.Vec2, waitTime: number = 3, runTime: number = 0.5,) {\n        this.node.setPosition(starPos);\n        this.schedule(() => {\n            this.TouchAnimation(starPos, endPos, runTime);\n        }, waitTime, cc.macro.REPEAT_FOREVER, 0.01);\n        let arrowWidth = Math.abs(endPos.x - starPos.x)\n        let arrowHeight = Math.abs(endPos.y - starPos.y)\n        let dir = endPos.sub(starPos);\n        let angle = dir.signAngle(cc.v2(1, 0));\n        let degree = (angle / Math.PI) * 180;\n        this.arrow.active = true;\n        this.arrow.angle = -degree;\n        this.arrowWidth = Math.sqrt(arrowWidth * arrowWidth + arrowHeight * arrowHeight) / this.node.scale;\n        if (this.arrow.getChildByName(\"arrow\").width < this.arrowWidth) {\n            this.arrow.getChildByName(\"arrow\").width = this.arrowWidth;\n        }\n    }\n\n    stopCycleAllAction() {\n        this.unscheduleAllCallbacks();\n        cc.Tween.stopAllByTarget(this.node);\n        cc.Tween.stopAllByTarget(this.arrow);\n    }\n\n    wipeCycle(starPos: cc.Vec2, endPos: cc.Vec2, speed: number = 200) {\n        this.node.active = true\n        this.node.setPosition(starPos);\n        this.arrow.active = false;\n        let len = endPos.sub(starPos).mag();\n        this.playSpine(this.skHand, HandSpineAnimationName.danji, false, () => {\n            this.skAperture.node.active = true;\n            this.playSpine(this.skAperture, ApertureAnimationName.dianji, true);\n            cc.tween(this.node).repeatForever(\n                cc.tween()\n                    .to(len / speed, { position: cc.v3(endPos) })\n                    .to(len / speed, { position: cc.v3(starPos) })\n\n            ).start()\n        });\n    }\n\n    private playSpine(spNode: sp.Skeleton, spName: string, loop: boolean = false, callback = null) {\n        spNode.clearTracks();\n        spNode.setToSetupPose();\n        let track = spNode.setAnimation(0, spName, loop);\n        if (track && !loop) {\n            spNode.setCompleteListener((trackEntry, loopCount) => {\n                let name = trackEntry.animation.name ? trackEntry.animation.name : \"\";\n                if (name == spName && callback) {\n                    callback();\n                }\n            });\n        }\n    }\n\n}\n","const { ccclass, property } = cc._decorator;\n@ccclass\nexport default class ItemSnailPaShanQ extends cc.Component {\n\n    @property([cc.Node])\n    arrLabel: cc.Node[] = [];\n\n    /** 一组题内的选项ui */\n    updateUIForLabel(answers: number[], selectItems: number[]): void{\n        for (let index = 0, length = this.arrLabel.length; index < length; index++) {\n            const element = this.arrLabel[index];\n            let idQ = answers[index];\n            element.active = selectItems.indexOf(idQ) >= 0;\n        }\n    }\n}\n"],"file":"index.js"}
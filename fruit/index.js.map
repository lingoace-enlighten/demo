{"version":3,"sources":["assets/bundle/kit/system/interface/ASystem.ts","assets/bundle/Scripts/common/AdapterBg.ts","assets/bundle/kit/framework/platform/AndroidAdapter.ts","assets/bundle/game/grabFruit/script/arm/ArmIdleState.ts","assets/bundle/game/grabFruit/script/arm/ArmInState.ts","assets/bundle/game/grabFruit/script/arm/ArmOutState.ts","assets/bundle/game/grabFruit/script/Arm.ts","assets/bundle/kit/framework/load/base/AtlasLoader.ts","assets/bundle/kit/framework/load/base/AudioLoader.ts","assets/bundle/kit/system/audio/AudioManager2.ts","assets/bundle/Scripts/common/AudioManager.ts","assets/bundle/kit/framework/load/base/BaseLoader.ts","assets/bundle/kit/component/ClickCmpt.ts","assets/bundle/kit/structure/ClientModuleEnum.ts","assets/bundle/kit/structure/ClientTipsEnum.ts","assets/bundle/kit/manager/popupManager.ts/ConfirmPopup.ts","assets/bundle/kit/framework/platform/DebuggerAdapter.ts","assets/bundle/kit/framework/load/base/DefaultLoader.ts","assets/bundle/kit/utils/DelayUtils.ts","assets/bundle/kit/system/fsm/entity/EntityManager.ts","assets/bundle/kit/system/error/ErrorSystem.ts","assets/bundle/kit/system/event/EventEmitter.ts","assets/bundle/kit/system/event/EventSystem.ts","assets/bundle/game/grabFruit/script/Events.ts","assets/bundle/game/grabFruit/script/FruitGameMain.ts","assets/bundle/Scripts/common/GameData.ts","assets/bundle/game/grabFruit/script/GrabFruit.ts","assets/bundle/game/grabFruit/script/arm/Hand.ts","assets/bundle/kit/system/net/http/HttpState.ts","assets/bundle/kit/system/net/http/HttpSystem.ts","assets/bundle/kit/system/net/http/Http.ts","assets/bundle/kit/framework/load/base/ImageLoader.ts","assets/bundle/kit/framework/platform/IosAdapter.ts","assets/bundle/kit/framework/load/base/JsonLoader.ts","assets/bundle/game/grabFruit/script/level/Level1Sate.ts","assets/bundle/game/grabFruit/script/level/Level2Sate.ts","assets/bundle/game/grabFruit/script/level/Level3Sate.ts","assets/bundle/game/grabFruit/script/level/LevelGloabelState.ts","assets/bundle/kit/structure/LinkedNode.ts","assets/bundle/kit/framework/load/LoaderObserver.ts","assets/bundle/kit/utils/LocalStorageUtils.ts","assets/bundle/kit/system/log/LogSystem.ts","assets/bundle/Scripts/common/Main.ts","assets/bundle/kit/model/MessageBase.ts","assets/bundle/kit/system/fsm/message/MessageDispatcher.ts","assets/bundle/kit/system/fsm/message/MessageType.ts","assets/bundle/kit/model/ModelBase.ts","assets/bundle/kit/model/ModelManager.ts","assets/bundle/kit/utils/MonitorUtils.ts","assets/bundle/kit/model/NativeInfo.ts","assets/bundle/kit/model/NetHelper.ts","assets/bundle/kit/utils/NumberUtils.ts","assets/bundle/kit/utils/ParseTemplateUtils.ts","assets/bundle/kit/framework/platform/PlatformSystem.ts","assets/bundle/Scripts/common/Point.ts","assets/bundle/kit/utils/PoolUtils.ts","assets/bundle/kit/manager/popupManager.ts/PopupBase.ts","assets/bundle/kit/manager/popupManager.ts/PopupManager.ts","assets/bundle/kit/framework/load/base/PrefabLoader.ts","assets/bundle/game/grabFruit/script/ProgressBar.ts","assets/bundle/kit/framework/load/ResLoader.ts","assets/bundle/kit/manager/ResourcesManager.ts","assets/bundle/kit/framework/load/base/SpineLoader.ts","assets/bundle/kit/system/log/SpotSystem.ts","assets/bundle/kit/system/fsm/StateMachine.ts","assets/bundle/kit/utils/StringUtils.ts","assets/bundle/game/grabFruit/script/tigo/TIgoPoseState.ts","assets/bundle/kit/system/fsm/message/Telegram.ts","assets/bundle/kit/framework/load/base/TextLoader.ts","assets/bundle/game/grabFruit/script/tigo/TigoCompleteState.ts","assets/bundle/game/grabFruit/script/tigo/TigoGloabelState.ts","assets/bundle/game/grabFruit/script/tigo/TigoGrabState.ts","assets/bundle/game/grabFruit/script/tigo/TigoGuideState.ts","assets/bundle/game/grabFruit/script/tigo/TigoIdleState.ts","assets/bundle/Scripts/base/TigoManager.ts","assets/bundle/game/grabFruit/script/tigo/TigoWinState.ts","assets/bundle/game/grabFruit/script/Tigo.ts","assets/bundle/kit/utils/TimeUtils.ts","assets/bundle/Scripts/common/TimerPad.ts","assets/bundle/kit/system/timer/TimerSystem.ts","assets/bundle/kit/utils/UIUtils.ts","assets/bundle/kit/utils/UrlUtils.ts","assets/bundle/Scripts/common/Util.ts","assets/bundle/kit/framework/platform/WebAdapter.ts","assets/bundle/Tools/Word/scripts/WordTool.ts","assets/bundle/kit/utils/audioUtil.ts","assets/bundle/Scripts/common/boot.ts","assets/bundle/kit/utils/bundleUtils.ts","assets/bundle/kit/utils/bundleUtil.ts","assets/bundle/Scripts/common/captureScreen.js","assets/bundle/Scripts/common/coinBoard.ts","assets/bundle/Scripts/common/coins.ts","assets/bundle/game/grabFruit/script/config/config.ts","assets/bundle/kit/events/events.ts","assets/bundle/Scripts/common/gameGate.ts","assets/bundle/Scripts/common/gameMenu.ts","assets/bundle/kit/kit.ts","assets/bundle/kit/framework/load/base/loader-index.ts","assets/bundle/Scripts/common/notifier_center.js","assets/bundle/Scripts/common/recordAin.ts","assets/bundle/Scripts/common/rollBg.ts","assets/bundle/migration/use_reversed_rotateBy.js","assets/bundle/game/pregtess/videoCr.ts","assets/bundle/game/videoMain.ts","assets/bundle/Scripts/common/web_config.js"],"names":["ASystem","_a","cc","_decorator","ccclass","property","AdapterBg","_super","__extends","prototype","onLoad","onEnable","this","relayout","frameSize","view","getFrameSize","designResolution","Canvas","instance","designSize","size","width","height","frameAspectRatio","screenSize","__assign","ratio","node","wdt","getComponent","Widget","addComponent","isAlignHorizontalCenter","isAlignVerticalCenter","__decorate","Component","exports","default","AndroidAdapter","packageName","isPrintLog","onGameExit","onGameReady","callFunction","log","jsb","fileUtils","getWritablePath","toast","message","funcName","parm","moduleName","packagePath","reflection","callStaticMethod","callFunctionResult","result","kit_1","require","Events_1","ArmIdleState","onMessage","entity","telegram","Error","enter","data","outNode","active","inNode","kit","manager","Event","on","GAME_STOP","onStop","GAME_STAR","GUID_SEND","onSend","Promise","resolve","execute","dt","updateArmAngle","angle","rotateSpeed","exit","off","isGuide","LEFT","RIGHT","Math","abs","emit","ArmIdleState_1","ArmInState","target","Audio","playEffect","armTop","y","MIN_LENGTH","stateMachine","ChangeState","parent","removeChild","GRAB_ACTION_COMPLETE","GRAB_SUCCESS","ArmInState_1","ArmOutState","GRAB_ACTION_ON_COLLISION","onCollision","MAX_LENGTH","event","fruitNode","name","indexOf","getChildByName","x","zIndex","Arm","_this","apply","arguments","lineNode","sid","start","fsm","StateManager","init","tween","repeatForever","to","opacity","update","Update","Node","BaseLoader_1","AtlasLoader","loadNetRes","path","type","callback","assetManager","loadRemote","e","res","error","loadRemoteRes","loadLocalRes","onProgress","bundle","load","resources","AudioLoader","AudioManager","effectPath","musicPath","sounds","musicEnable","effectEnable","music","Object","defineProperty","get","_instance","__awaiter","audioEngine","setMusicVolume","rej","loadDir","AudioClip","err","clips","i","length","addSound","sent","key","clip","fxName","loop","callBack","setFinishCallback","stopEffect","audioID","playMusic","musicName","stopMusic","setMusicEnabled","enabled","nowMusic","stopAll","getMusicEnable","setEffectEnabled","getEffectEnable","Util_1","isPlaying","AUDIO_URL","COMMON_AUDIO_URL","RECORD","GAME_END","GAME_COIN_MID","GAME_COIN_LARGE","LETS_SAY","TRY_AGAIN","SUPER_JOB","GAME_RIGHT","GAME_ERROR","LISTEN_AND_CHOOSE","_masterVolume","CHOOSE_THE_CORRECT_ANSWER","CHOOSE_THE_CORRECT_WORD","effectId","audio_common","getInstance","url","loader","loadRes","audio","console","loadMusic","playLoopMusic","stop","isLoop","play","stopVoiceAni","BaseLoader","options","onComplete","isNetRes","isRemoteRes","startsWith","ResLoader_1","AudioManager2_1","LogSystem_1","ClickCmpt","clickSound","bundleName","clickAudioEffect","clickEvents","onCilckEventHandler","forEach","item","targeNode","tempCmpt","onClick","handler","customEventData","param","clickEffect","sound","warn","EventType","TOUCH_START","soundName","call","offClick","preloadClickEffect","String","tooltip","EventHandler","VideoEventTransType","TIPS_TYPE","PopupBase_1","ConfirmPopup","titleLabel","contentLabel","confirmBtn","registerEvent","onDestroy","unregisterEvent","TOUCH_END","onConfirmBtnClick","targetOff","updateDisplay","string","title","content","confirmCallback","hide","Label","DebuggerAdapter","DefaultLoader","Delay","k","v","time","DelayUtils","DelayUtils_1","CheckDelay","delay","delayMap","tick","Date","getTime","current","button","EntityManager","_length","_entityMap","release","registerEntity","newEntity","getEntityFromID","id","removeEntity","getAllEntity","getAvailableEntity","clazz","availableEntity","createEntity","ErrorSendInterval","RATE_DEFAULT","RATE_LOW","ErrorSystem","errorMap","isNative","outAdapter","rea","window","__errorHandler","errorMessage","file","line","exception","JSON","stringify","addEventListener","reason","stack","unhandledrejection","onerror","EventEmitter","getListeners","events","_getEvents","response","RegExp","hasOwnProperty","test","addListener","listener","isValidListener","TypeError","listeners","getListenersAsObject","listenerIsWrapped","indexOfListener","push","once","flattenListeners","flatListeners","Array","addOnceListener","defineEvent","defineEvents","removeListener","index","splice","addListeners","manipulateListeners","removeListeners","remove","value","single","multiple","removeEvent","_events","removeAllListeners","emitEvent","args","_i","listenersMap","slice","__spreadArrays","onceReturnValue","trigger","_onceReturnValue","set","EventEmitter_1","EventSystem","_emitter","eventData","params","Events","FRUIT_DOWN_COMPLETE","GAME_COMPLETE","GAME_GUID_COMPLETE","GAME_LEARN_COMPLETE","GAME_SCORE","GAME_STAGE_COMPLETE","SCENE_CHANGE","NewClass","gameNode","webframe","Notify","listen","gameStart","GameData","node_path","nodePath","record_num","totalStar_num","isFrist","isTest","gid","_Instance","getStarNum","setStarNum","num","Number","addStarNum","setIsFirst","able","getIsFirst","getNodePath","page","Point_1","WordTool_1","Level1Sate_1","LevelGloabelState_1","Tigo_1","GrabFruit","bgsNode","monsterNode","birdNode","tigo","tigoPrefab","word","AddGlobalState","camera","Camera","director","getCollisionManager","system","timer","sys","isMobile","scheduleOnce","Prefab","Hand","onCollisionEnter","other","self","HttpStateMap","map","split","element","temp","getErrorInfoById","Http_1","HttpSystem","httpGet","header","reject","headerJson","Content-Type","json","parse","xhr","Http","onError","errInfo","openGet","getUrl","setRequestHeader","send","catch","httpPost","body","openPost","HttpState_1","ActiveXObject","timeout","open","method","GET","spliceUrl","POST","_onComplete","_onError","onreadystatechange","onReadyStateChange","bind","abort","getAllResponseHeaders","dataStr","substr","readyState","ioError","status","DONE","stringifyPrimitive","isFinite","obj","sep","eq","undefined","keys","ks","encodeURIComponent","isArray","join","s","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","ImageLoader","tex","SpriteFrame","IosAdapter","JsonLoader","config_1","Level2Sate_1","Level1State","times","roundStart","SCENE_WIDTH","CURRENT_LEVEL","onGrabComplete","onGuidComplete","onFruitDownComplete","onActionComplete","clearTimer","guidScale","level","LEVEL_TARGET_FRUIT_NUMBER","doOnce","list","children","scale","doLoop","Init","mango","mangoes","roundEnd","Level3Sate_1","Level2State","banana","bananas","Level3State","gameEnd","palyMonsterAnimation","sp","setAnimation","MONSTER_IN","setCompleteListener","MONSTER_DILE","MONSTER_OUT","coconut","coconuts","MONSTER_OUT2","LevelGlobalState","random","setTimeout","egg","LinkedNode","previous","LinkedList","head","next","from","array","linkedList","shift","reduce","find","cb","currentNode","insert","newElement","newNode","previousNode","n","rawNextNode","deletedNode","LoaderObserverParam","LocalStorageUtils","removeItem","localStorage","setObject","setItem","getObject","getItem","setBool","toString","getBool","setInt","getInt","setString","getString","ASystem_1","LogSystem","isDebug","gameName","gameVersion","isPrintTime","print","messages","toLocaleString","obj2String","str","info","TigoManager_1","GameData_1","Main","menuPre","menuItem","node_nowShow","page_num","Lesson_Sign","star","isSecgame","secKey","callAppToStorage","sgk","callAppToLoaded","registerListener","game","EVENT_HIDE","pauseMusic","pauseAllEffects","pause","EVENT_SHOW","resumeMusic","resumeAllEffects","resume","entryMenu","endtag","callAppToSpeed","gameAllend","voiceNode","destroy","stopAllEffects","openMenu","isGoon","instantiate","addChild","initMenu","openGame","loadPage","callAppToHttp","callAppToClose","nameProfab_str","prefab","addPrefab","unRegisterListener","ignore","action","MessageBase","showTips","Telegram_1","EntityManager_1","MessageDispatcher","SEND_MSG_IMMEDIATELY","NO_ADDITIONAL_INFO","PriorityQ","TreeSet","a","b","showList","Discharge","pReceiver","HandleMessage","DispatchMessage","sender","receiver","msg","pSender","DispatchTime","now","add","DispatchDelayedMessages","isEmpty","first","Receiver","DispatchSimpleMessage","sort","sortFun","delete","Set","MessageType","NetHelper_1","ModelBase","cbMap","Map","sendMessage","regiestReponse","sendMessageWithOutToken","registerCallBack","messageBase","messageApi","registCb","responseMessage","api","clear","LocalStorageUtils_1","NativeInfo_1","ModelManager","_modelList","ModelManager_1","testToken","userToken","userId","countryName","testPhoneInfo","generateInfo","_timestamp","errorCb","setHostUrl","currentTimeStamp","userInfo","token","registerModel","model","m","getModel","has","removeAllModel","clearAllModel","keyList","keyList_1","reInitAllModel","keyList_2","MonitorUtils","fps","elem","document","createElement","setAttribute","style","fontSize","appendChild","setInterval","performance","innerHTML","getInfo","refreshLoop","requestAnimationFrame","showData","memory","jsHeapSizeLimit","toFixed","totalJSHeapSize","usedJSHeapSize","t","timing","responseStart","navigationStart","domainLookupEnd","domainLookupStart","responseEnd","requestStart","connectEnd","connectStart","loadEventEnd","loadEventStart","PlatformSystem_1","NativeInfo","isBrowser","adapter","getNetworkStatus","NetworkType","NETWORK_WIFI","isAndroid","GenerateInfo","HttpSystem_1","NetHelper","onErrorCb","_hostUrl","dispatcher","debugData","UserToken","currentMessage","netWork","NETWORK_NO","formatUrl","timestamp","phoneInfo","Authorization","then","code","tryAgain","states","NumberUtils","lower","upper","range","floor","randomf","floatSub","arg1","arg2","r1","r2","pow","max","tmp","parseFloat","floatMul","s1","s2","replace","floatDiv","t1","t2","floatTok","floatSqrt","arg3","arg4","len","sqrt","mul","ParseTemplateUtils","parseSrt","srtText","ToSeconds","p","filter","textItem","text","translate","startTime","endTime","timeLine","isShow","AndroidAdapter_1","IosAdapter_1","WebAdapter_1","DebuggerAdapter_1","PlatformSystem","browserType","BROWSER_TYPE_WECHAT","BROWSER_TYPE_SAFARI","platform","WECHAT_GAME","os","OS_ANDROID","OS_IOS","isWeChat","location","href","isIOS","Point","totalRound","getAppInfo","commonParams","Level_Name","levelName","Week_Name","weekName","Course_ID","lessonId","Course_Name","lessonName","Module_id","moduleId","Module_Name","Game_name","callNative","POINT_GAME_START","POINT_GAME_END","currentRound","POINT_ROUND_START","POINT_ROUND_END","callPoint","PoolUtils","initPool","className","poolArray","classArray","object","getPool","putPool","clearAll","pool","PopupBase","background","main","animDuration","blocker","finishCallback","show","duration","easing","onShow","suspended","BlockInputEvents","setParent","setContentSize","getContentSize","onHide","CC_DEV","PopupCacheMode","PopupShowResult","PopupManager","_prefabCache","_nodeCache","_current","_queue","_suspended","targetNode","uuid","parseParams","locked","immediately","suspend","Waiting","getNodeFromCache","isValid","loadStartCallback","loadFinishCallback","Failed","popup","container","setSiblingIndex","macro","MAX_ZINDEX","recycle","mode","Done","_res","interval","nodeCache","prefabCache","request","priority","Once","Normal","Frequent","removeFromParent","prefabMap","addRef","decRef","PopupParams","cacheMode","showResult","Base","PrefabLoader","ProgressBar","bar","showIndex","onStageComplete","onScore","hideAllLevel","hideAllItem","currentLevelNode","progress","move2Bottom","effectTime","COMPLETE_STAGE_POINTS","targetPoint","Vec3","position","updateLevel","updateProgress","LEVEN_NUMBER","loader_index_1","LoaderObserver_1","RemoteSpineData","ResLoader","_init","_defaultMap","SpriteAtlas","JsonAsset","TextAsset","TextLoader","SkeletonData","SpineLoader","_defaultLoader","addObserver","observer","_observerList","removeObserver","obs","curBundle","tempType","getBundle","as","__beforeLoadRes","__afterLoadRes","_err","beforeLoadRes","afterLoadRes","dir","loadBundle","nameOrUrl","__beforeLoadBundle","_bundle","__afterLoadBundle","beforeLoadBundle","afterLoadBundle","ResourceType","Asset","resType","assetMap","reslove","finishCb","asset","releaseComponents","releaseAsset","Global","removeBundle","releaseWithOutBundle","ResourcesManager","assetsMap","resPath","assetType","assetClip","loadBundleList","nameList","all","releaseKey","releaseRes","StringUtils_1","SpotSystem","baseInfo","app_key","APP_KEY","sendHttp","sendSdk","StringUtils","format","LOG_EVENT","api_key","event_type","HTTP_HOST","LOG_INIT","LOG_SET_USER_ID","NAME_SPACE_IOS","NAME_SPACE_ANDROID","StateMachine","owner","m_pOwner","m_pCurrentState","m_pPreviousState","m_pGlobalState","state","newState","RemoveGlobalState","Transition","onTransition","pNewState","RevertPreviousState","isInState","exitCurrentState","CurrentState","sourceStr","replaceStr","fromIndex","replaceCode","tempStr","tempLen","charAt","strLength","charCodeAt","moreText","substring","TigoIdleState_1","TigoPoseState","idleNode","stageWinNode","completeNode","arm","TICK_OUT","IDLE","AIM","Telegram","SmallestDelay","Sender","Msg","ExtraInfo","TigoCompleteState","TigoWinState_1","TigoGlobalState","Arm_1","ArmOutState_1","TigoGrabState","crabComplete","TigoGrabState_1","TigoGuideState","guide","onTouch","TigoIdleState","TigoManager","classId","lessonModuleId","manageMentIndex","packageId","nextLessonModelId","nextType","ManageType","CocosIn","CocosOut","gameLink","gameScore","gameEvent","ManageResult","gameLink_Right","gameLink_Error","ReportType","report_reward","report_speed","report_operate","CocosByNativeAction","TiGoHttp","TiGoClose","replayOrNext","TiGoStorage","TiGoBaseInfo","TiGoLifecycle","TiGoStopRecord","TiGoStartRecord","TiGoRecordFinish","TiGoVoiceEvaluation","TiGoVoiceEvaluationFinish","TiGoAnalyse","getBaseInfo","setBaseInfo","userData","setUserId","setClassId","setModuleId","setLessonModuleId","setPackageId","setNextLessonModelId","setNextType","cid","uid","mid","lid","pid","handleData","closeNext","getNative","callAppToRecord","sec","standardText","callAppToStopRecord","callAppToResult","val","tiGo","callApp","webkit","prompt","coin","speak","u","l","lM","h","lessonModelId","redVal","openVal","unique","BaseInfo","callAppToCollect","gameIndex","analyseAction","analyseParam","analyseId","analyseData","speedVal","messageHandlers","postMessage","callCocos","msg1","TigoCompleteState_1","TIgoPoseState_1","TigoWinState","sp2","HAPPY","onLearnComplete","TigoGloabelState_1","TigoGuideState_1","Tigo","armPrefab","NumberUtils_1","TimeUtils","dateToFormate","date","fmt","o","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","S","getMilliseconds","$1","getFullYear","toDate","hour","minute","second","Time","stamp","curTime","mainCom","updateTimer","timeUp","close","whenTimeup","showTimer","mc","schedule","stopTimer","unschedule","resumeTimer","TimerSystem","_pool","_handlers","_currTimer","_currFrame","_count","_index","_startTime","getScheduler","enableForTarget","onEnterFrame","INTERVAL","elapsed","userFrame","exeTime","repeat","thisObj","create","useFrame","cover","pop","TimerHandler","doFrameOnce","doFrameLoop","running","UIUtils","createSubNodeMap","subChild","seekAllSubView","UIContainer","nodesMap","_clickSound","_bundleName","_uiNodesMap","getNode","com","tempNode","UrlUtils","getQueryString","reg","rs","search","match","getUrlArrayByFileType","jsonObj","urls","traverseJson","parseUrl","r","hash","host","hostname","origin","pathname","port","protocol","username","password","toUpperCase","getUrlPathName","ret","AudioManager_1","Util","coin_small","coin_mid","coin_large","PrefabNode","voice_name","node_name","coin_name_1","coin_name_2","coin_name_3","exitbutton","addVocie","that","voice","clickBack","addExitbutton","but","Animation","playVoiceAni","addStartLayer","setStartBtnBack","callBck","btn","addCoin_small","coin_1","spine","Skeleton","sc","initNum","clearTracks","addCoin_midAndMenu","et","coin_2","WebAdapter","WordTool","sfWord","img","targetPos","v2","setPosition","spriteFrame","unscheduleAllCallbacks","stopAllActions","v3","Sprite","displayName","MusicType","AudioUtil","getFixedPath","cachePath","AssetManager","Bundle","_pauseFlag","_curSound","tempTime","_lastSoundTime","fixedPath","source","getEffectFromPool","__AudioSource","SOUND","addEffectToPool","_soundPool","value_1","playLoopEffect","_loopSoundPool","LOOP_SOUND","stopLoopEffect","_curMusic","_musicPool","MUSIC","passMusic","list_1","setPauseFlag","flag","_level","pauseLoopEffects","resumeLoopEffects","stopEffectByName","playEffectByName","isSingle","destroyAudio","_loaded","_audioSource","_path","_musicType","_isStop","pauseEffect","resumeEffect","touchSingle","_touchID","_touchStart","stopPropagation","getID","_touchMove","_touchEnd","simulate","TOUCH_MOVE","TOUCH_CANCEL","onDisable","timeEnd","loadBundleScene","sceneName","loadScene","scene","loadBundles","BundleUtil","Class","extends","properties","screenshotsprint","screenshots","picData","initImage","showSprite","screenshotsInti","_width","_height","texture","RenderTexture","gl","_renderContext","initWithSize","visibleRect","STENCIL_INDEX8","targetTexture","readPixels","filpYImage","Texture2D","initWithData","RGBA8888","setTexture","Uint8Array","rowBytes","row","srow","reStart","captureAction","capture","winSize","scaleAction","scaleTo","moveAction","moveTo","spawn","finished","callFunc","sequence","runAction","testToCapture","testIoCapture","setCoinAni","playCoinEffect","Coins","m_frames","num_1","num_2","n1","n2","Config","LIFE_CYCLE_CREATED","LIFE_CYCLE_READY","LIFE_CYCLE_COMPLETE","LIFE_CYCLE_BLOCK","LIFE_CYCLE_UNBLOCK","LIFE_CYCLE_PARAMS","LIFE_CYCLE_BACK","FOLLOW_CLIENT_TO_MODULE","FOLLOW_MODULE_TO_CLIENT","VIDEO_CLIENT_TO_MODULE","VIDEO_MODULE_TO_CLIENT","SET_TOP_BAR_ACTIVE","SHOW_COMMON_TIPS_POP","GameGate","quizLabel","selecNode","showSpr","btnbg","veilNode","popenNdoe","clickBut","udAni","gameid","curGid","gMenu","isSec","initInfo","gm","interactable","setShowImage","onClickBut","gateClick","Button","GameMenu","gpList","gatePre","curgameId","mainS","canClick","issg","ms","copygpList","gameNum","gateitem","dtgCom","autoGame","ClickCmpt_1","events_1","PopupManager_1","ResourcesManager_1","ClientModuleEnum_1","LinkedNode_1","ErrorSystem_1","EventSystem_1","StateMachine_1","TimerSystem_1","TimeUtils_1","UIUtils_1","ModelBase_1","MessageBase_1","SpotSystem_1","ClientTipsEnum_1","util","Ui","UiContainer","LocalStorage","spot","Resources","Type","Popup","consts","structure","LinkList","Tips","video","videoTransType","component","Click","Loader","modelManager","modelBase","nativeInfo","networkType","__exportStar","LogFilterArray","NotifierCenter","_TAG","launch","_proto","getScopeName","scope","eventName","isOnce","observers","ignoreScope","idx","isRunning","ob","ignoreMsgs","shut","module","centerNode","rightNode","leftNode","initeAniFun","anim","currentClip","defaultClip","speed","Mtype","lubg1","lubg2","mtype","VERTICAL_P","isRunmap","cur_lubg","luOffset","setbgfix","VERTICAL_N","HORIZONTAL_P","HORIZONTAL_N","runlubg","Integer","min","step","slide","Enum","RotateBy","_reverse","showControl","ENABLE_TRANSPARENT_CANVAS","gameNodes","bg","play_btn","controlNode","controlBtn","pauseNode","playNode","PRe","videoProgress","videoTime","maxTime","progressMax","timeScript","timeOutScript","showGameIndex","isControl","isUpSpeed","regisEvent","vedioReady","vedioLoaded","vedioPlaying","vedioPaused","vedioCompleted","changeProgress","control_btn_start","control_btn_end","getDuration","secondToDate","vedioPause","vedioPlay","remoteURL","setProgress","currentTime","showVideoActive","setVideotime","game_right","addGame","UpSpeed","game_check","checkSpeed","vt","ts","rec_btn_call","stop_btn_call","VideoPlayer","Slider"],"mappings":"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","sourcesContent":["export default abstract class ASystem {\n    public abstract init(...args): Promise<any>;\n    public abstract release(): void;\n}","const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class AdapterBg extends cc.Component {\n    public onLoad() {\n    }\n\n    public onEnable() {\n        this.relayout()\n    }\n\n    /**\n     * 重新布局\n     */\n    public relayout() {\n        let frameSize: cc.Size = cc.view.getFrameSize() // 屏幕尺寸\n        let designResolution: cc.Size = cc.Canvas.instance.designResolution\n        let designSize: cc.Size = cc.size(designResolution.width, designResolution.height)  // cc.Canvas.instance.designResolution\n        let frameAspectRatio: number = frameSize.width / frameSize.height\n        let screenSize: cc.Size = { ...designSize } as cc.Size\n\n        let ratio: number = this.node.width / this.node.height\n        if (ratio > frameAspectRatio) {\n            let width = this.node.width * screenSize.height / this.node.height\n            this.node.width = width\n            this.node.height = screenSize.height\n        } else {\n            let height = this.node.height * screenSize.width / this.node.width\n            this.node.width = screenSize.width\n            this.node.height = height\n        }\n\n        let wdt: cc.Widget = this.node.getComponent(cc.Widget)\n        if (wdt == null) {\n            this.node.addComponent(cc.Widget)\n            wdt = this.node.getComponent(cc.Widget)\n        }\n        wdt.isAlignHorizontalCenter = true\n        wdt.isAlignVerticalCenter = true\n    }\n}\n","\nimport IPlatform from \"./IPlatform\";\n\nexport default class AndroidAdapter implements IPlatform {\n    public packageName: string = \"org/cocos2dx/javascript/\";\n    public isPrintLog: boolean = true;\n    public onGameExit(): void {\n        // console.log(`Android adapter:onGameExit`)\n        // this.callNative(\"onGameExit\", \"()V\")\n    }\n    public onGameReady(): void {\n        // console.log(`Android adapter:onGameReeady`)\n        // GameInfo.instance.hasCalledOnGameReady = true;\n        // this.callNative(\"onGameReady\", \"()V\")\n        this.callFunction(\"hideSplash\", \"\", \"NativeInterface\");\n        cc.log(`getWritablePath():${jsb.fileUtils.getWritablePath()}`)\n    }\n\n    public toast(message: string): void {\n        // jsb.reflection.callStaticMethod(this.packageName, \"toast\", \"(Ljava/lang/String;)V\", message);\n\n        this.callFunction(\"toast\", message, \"NativeInterface\");\n    }\n\n    public callFunction(funcName: string, parm: string, moduleName: string): void {\n        let packagePath = this.packageName;\n        if (moduleName && moduleName != '') {\n            packagePath += moduleName;\n        }\n        jsb.reflection.callStaticMethod(packagePath, funcName, \"(Ljava/lang/String;)V\", parm);\n    }\n\n    callFunctionResult(funcName: string, parm: string, moduleName: string) {\n        let packagePath = this.packageName;\n        if (moduleName && moduleName != '') {\n            packagePath += moduleName;\n        }\n        let result = jsb.reflection.callStaticMethod(packagePath, funcName, \"(Ljava/lang/String;)Ljava/lang/String;\", parm);\n        return result;\n    }\n}","import { kit } from \"../../../../kit/kit\";\nimport Arm from \"../Arm\";\nimport Events from \"../Events\";\n\n// 手臂待机状态\nexport default class ArmIdleState implements kit.fsm.State<Arm>{\n    private static readonly LEFT: number = 70;\n    private static readonly RIGHT: number = -70;\n\n    public entity: Arm;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    enter(data?: any): Promise<void> {\n        this.entity.outNode.active = true;\n        this.entity.inNode.active = false;\n        kit.manager.Event.on(Events.GAME_STOP, this.onStop, this);\n        kit.manager.Event.on(Events.GAME_STAR, this.onStop, this);\n        kit.manager.Event.on(Events.GUID_SEND, this.onSend, this);\n        // AudioManager.playLoopMusic('SE_zhuashuiguo02_ytz', null, false);\n        return Promise.resolve();\n    }\n\n    execute(dt?: any): void {\n        this.updateArmAngle();\n        this.entity.node.angle += this.entity.rotateSpeed * dt;\n    }\n\n    exit(data?: any): void {\n        kit.manager.Event.off(Events.GAME_STOP, this.onStop, this);\n        kit.manager.Event.off(Events.GAME_STAR, this.onStop, this);\n        kit.manager.Event.off(Events.GUID_SEND, this.onSend, this);\n    }\n\n    private onStop(): void {\n        this.entity.isGuide = !this.entity.isGuide;\n        cc.log(`isGuide${this.entity.isGuide}`);\n    }\n\n    private updateArmAngle(): void {\n        if (this.entity.node.angle >= ArmIdleState.LEFT) {\n            this.entity.rotateSpeed = -this.entity.rotateSpeed;\n            this.entity.node.angle = ArmIdleState.LEFT;\n        } else if (this.entity.node.angle <= ArmIdleState.RIGHT) {\n            this.entity.rotateSpeed = Math.abs(this.entity.rotateSpeed);\n        }\n    }\n\n    private onSend(): void {\n        kit.manager.Event.emit(Events.GUID_SEND);\n    }\n\n\n\n}","import { kit } from \"../../../../kit/kit\";\nimport Arm from \"../Arm\";\nimport Events from \"../Events\";\nimport ArmIdleState from \"./ArmIdleState\";\n\n// 收钩\nexport default class ArmInState implements kit.fsm.State<Arm>{\n    private static readonly MIN_LENGTH: number = 0;\n    public entity: Arm;\n    private target: any;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n    enter(data?: any): Promise<any> {\n        this.target = data;\n        this.entity.outNode.active = false;\n        this.entity.inNode.active = true;\n        kit.manager.Audio.playEffect('SE_zhuashuiguo03_ytz');\n\n        return Promise.resolve();\n    }\n    execute(data?: any): void {\n        if (this.entity.armTop.y <= ArmInState.MIN_LENGTH) {\n            this.entity.stateMachine.ChangeState(ArmIdleState);\n        } else {\n            this.entity.armTop.y -= 4.5;\n        }\n    }\n\n    exit(data?: any): void {\n        if (this.target) {\n            (this.target as cc.Node).parent.removeChild(this.target);\n        }\n        kit.manager.Event.emit(Events.GRAB_ACTION_COMPLETE);\n        if (this.target) {\n            kit.manager.Event.emit(Events.GRAB_SUCCESS);\n        }\n    }\n\n}","import { kit } from \"../../../../kit/kit\";\nimport Arm from \"../Arm\";\nimport Events from \"../Events\";\nimport ArmInState from \"./ArmInState\";\n\n// 出钩\nexport default class ArmOutState implements kit.fsm.State<Arm>{\n    private static readonly MAX_LENGTH: number = 380;\n    entity: Arm;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    enter(data?: any): Promise<any> {\n        this.entity.outNode.active = true;\n        this.entity.inNode.active = false;\n        kit.manager.Event.on(Events.GRAB_ACTION_ON_COLLISION, this.onCollision, this);\n        kit.manager.Audio.playEffect('SE_zhuashuiguo03_ytz');\n        return Promise.resolve();\n    }\n\n    execute(data?: any): void {\n        if (this.entity.armTop.y >= ArmOutState.MAX_LENGTH) {\n            this.entity.stateMachine.ChangeState(ArmInState);\n        } else {\n            this.entity.armTop.y += 4.5;\n        }\n    }\n\n    exit(data?: any): void {\n        kit.manager.Event.off(Events.GRAB_ACTION_ON_COLLISION, this.onCollision, this);\n    }\n\n    // 与水果碰撞\n    private onCollision(event: any): void {\n        let fruitNode: cc.Node = event.data.node;\n        if (event.data.node.name.indexOf('banan') > -1) {       // 香蕉需要特殊处理\n            fruitNode = fruitNode.getChildByName('bananaItem');\n            fruitNode.active = true;\n        }\n        fruitNode.x = fruitNode.y = 0;\n        fruitNode.parent = this.entity.inNode.parent;\n        fruitNode.zIndex = -1;\n        this.entity.stateMachine.ChangeState(ArmInState, fruitNode);\n    }\n\n}","import { kit } from \"../../../kit/kit\";\nimport ArmIdleState from \"./arm/ArmIdleState\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Arm extends cc.Component implements kit.fsm.Entity {\n\n    @property(cc.Node)\n    armTop: cc.Node = null;\n\n    @property(cc.Node)\n    outNode: cc.Node = null;\n\n    @property(cc.Node)\n    inNode: cc.Node = null;\n\n    @property(cc.Node)\n    lineNode: cc.Node = null;\n\n    public stateMachine: kit.fsm.StateManager<Arm>;\n    public sid: string = \"Arm\";\n    public rotateSpeed: number = 60; //旋转速度\n    public isGuide: boolean = false\n\n    start() {\n        this.stateMachine = new kit.fsm.StateManager<Arm>(this);\n        this.init();\n    }\n\n    private init(): void {\n        this.stateMachine.ChangeState(ArmIdleState);\n        cc.tween(this.lineNode).repeatForever(cc.tween(this.lineNode).to(1, { opacity: 64 }).to(1, { opacity: 200 })).start();\n        // cc.tween(this.lineNode).repeatForever(tween);\n    }\n\n    update(dt: number): void {\n        if (!this.isGuide) {\n            this.stateMachine.Update(dt);\n        }\n    }\n\n}\n","\r\nimport BaseLoader from \"./BaseLoader\";\r\n\r\nexport class AtlasLoader extends BaseLoader {\r\n\r\n    public loadNetRes(path: string, type: typeof cc.Asset | Record<string, any>, callback: (err: any, res: any) => void): void {\r\n        // 加载网络json资源\r\n        cc.assetManager.loadRemote(path, type, (e, res) => {\r\n            if (e) {\r\n                cc.error(e);\r\n            }\r\n            if (callback) {\r\n                callback(e, res);\r\n            }\r\n        });\r\n    }\r\n\r\n    public loadRemoteRes(path: string, type: any, callback: (err: any, res: any) => void): void {\r\n        // 加载远程待下载图片资源\r\n        cc.log(path, type, callback);\r\n        throw new Error(\"AtlasLoader loadRemoteRes method not implemented.\");\r\n    }\r\n\r\n    public loadLocalRes(path: string, type: any, onProgress: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void, callback: (err: any, res: any) => void, bundle?: cc.AssetManager.Bundle): void {\r\n        if (bundle) {\r\n            bundle.load(path, type, onProgress, callback);\r\n        } else {\r\n            cc.resources.load(path, type, onProgress, callback);\r\n        }\r\n    }\r\n}\r\n","\r\nimport BaseLoader from \"./BaseLoader\";\r\n\r\nexport class AudioLoader extends BaseLoader {\r\n\r\n    public loadNetRes(path: string, type: typeof cc.Asset | Record<string, any>, callback: (err: any, res: any) => void): void {\r\n        // 加载网络json资源\r\n        cc.assetManager.loadRemote(path, type, (e, res: cc.AudioClip) => {\r\n            if (e) {\r\n                cc.error(e);\r\n            }\r\n            if (callback) {\r\n                callback(e, res);\r\n            }\r\n        });\r\n    }\r\n\r\n    public loadRemoteRes(path: string, type: any, callback: (err: any, res: any) => void): void {\r\n        // 加载远程待下载图片资源\r\n        cc.log(path, type, callback);\r\n        throw new Error(\"AudioLoader loadRemoteRes method not implemented.\");\r\n    }\r\n\r\n    public loadLocalRes(path: string, type: any, onProgress: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void, callback: (err: any, res: any) => void, bundle?: cc.AssetManager.Bundle): void {\r\n        if (bundle) {\r\n            bundle.load(path, type, onProgress, callback);\r\n        } else {\r\n            cc.resources.load(path, type, onProgress, callback);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * 音频管理器(非bundle模式)\r\n */\r\nexport default class AudioManager {\r\n    private static _instance: AudioManager;\r\n    effectPath: string = \"audios/\";\r\n    musicPath: string = \"audios/\";\r\n    sounds: { [key: number]: any } = {};\r\n\r\n    musicEnable: boolean = true;\r\n    effectEnable: boolean = true;\r\n\r\n    music: string = \"\";//当前播放的背景音乐\r\n\r\n    public static get instance(): AudioManager {\r\n        if (AudioManager._instance == null) {\r\n            AudioManager._instance = new AudioManager();\r\n        }\r\n        return AudioManager._instance;\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     * 默认加载audios/文件夹内音频\r\n     */\r\n    public async init(): Promise<void> {\r\n        cc.audioEngine.setMusicVolume(1);//设置背景音乐的音量 0~1\r\n\r\n        await new Promise((res, rej) => {\r\n            cc.resources.loadDir(this.musicPath, cc.AudioClip, (err, clips: cc.AudioClip[]) => {\r\n                if (err) {\r\n                    cc.error(err);\r\n                    rej(err)\r\n                    return;\r\n                }\r\n                for (let i = 0; i < clips.length; i++) {\r\n                    this.addSound(clips[i].name, clips[i]);\r\n                }\r\n                res(clips);\r\n            });\r\n        })\r\n        await new Promise((res, rej) => {\r\n            cc.resources.loadDir(this.effectPath, cc.AudioClip, (err, clips: cc.AudioClip[]) => {\r\n                if (err) {\r\n                    cc.error(err);\r\n                    rej(err)\r\n                    return;\r\n                }\r\n                for (let i = 0; i < clips.length; i++) {\r\n                    this.addSound(clips[i].name, clips[i]);\r\n                }\r\n                res(clips);\r\n            });\r\n        })\r\n        cc.log(\"SoundManager 初始化完成\");\r\n    }\r\n\r\n    addSound(key: string, clip: cc.AudioClip) {\r\n        this.sounds[key] = clip;\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param fxName\r\n     * @param loop\r\n     */\r\n    playEffect(fxName: string, loop: boolean = false, callBack?: Function): number {\r\n        cc.log(`playEffect,fxName:${fxName}`);\r\n        if (!this.effectEnable) return -1;\r\n        let key\r\n        if (this.sounds[fxName]) {\r\n            key = cc.audioEngine.playEffect(this.sounds[fxName], loop);\r\n        } else {\r\n            cc.resources.load(this.effectPath + fxName, cc.AudioClip, (err, clips: cc.AudioClip) => {\r\n                if (err) {\r\n                    cc.error(err);\r\n                    return;\r\n                }\r\n                this.addSound(clips.name, clips);\r\n                key = cc.audioEngine.playEffect(clips, loop);\r\n            });\r\n        }\r\n        if (!loop) {\r\n            cc.audioEngine.setFinishCallback(key, () => {\r\n                callBack && callBack();\r\n            })\r\n        }\r\n        return key;\r\n    }\r\n\r\n    /**\r\n     * 停播音效\r\n     * @param audioID\r\n     */\r\n    stopEffect(audioID: number) {\r\n        // SysLog.debug(\"停止音效\" + audioID);\r\n        cc.audioEngine.stopEffect(audioID);\r\n    }\r\n\r\n    /**\r\n     * 播放音乐\r\n     * @param musicName\r\n     */\r\n    playMusic(musicName: string) {\r\n        if (this.music == musicName) {\r\n            return;\r\n        }\r\n        this.music = musicName;\r\n        if (!this.musicEnable) return;\r\n        if (this.sounds[musicName]) {\r\n            cc.audioEngine.playMusic(this.sounds[musicName], true);\r\n        } else {\r\n            cc.resources.load(this.musicPath + musicName, cc.AudioClip, (err, clips: cc.AudioClip) => {\r\n                if (err) {\r\n                    cc.error(err);\r\n                    return;\r\n                }\r\n                this.addSound(clips.name, clips);\r\n                cc.audioEngine.playMusic(clips, true);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 停播音乐\r\n     */\r\n    stopMusic() {\r\n        cc.audioEngine.stopMusic();\r\n    }\r\n\r\n    /**\r\n     * 开关音乐\r\n     * @param enabled\r\n     */\r\n    setMusicEnabled(enabled: boolean) {\r\n        this.musicEnable = enabled;\r\n        if (this.musicEnable) {\r\n            let nowMusic: string = this.music;\r\n            this.music = \"\";\r\n            this.playMusic(nowMusic);\r\n        } else {\r\n            cc.audioEngine.stopAll();\r\n        }\r\n        // cc.sys.localStorage.setItem(GameKey.Key_Game_Music, this.musicEnable ? ConstantSys.Yes : ConstantSys.No);\r\n    }\r\n\r\n    getMusicEnable() {\r\n        return this.musicEnable;\r\n    }\r\n\r\n    /**\r\n     * 开关音效\r\n     * @param enabled\r\n     */\r\n    setEffectEnabled(enabled: boolean) {\r\n        this.effectEnable = enabled;\r\n        // cc.sys.localStorage.setItem(GameKey.Key_Game_Effect, this.effectEnable ? ConstantSys.Yes : ConstantSys.No);\r\n    }\r\n\r\n    getEffectEnable() {\r\n        return this.effectEnable;\r\n    }\r\n}\r\n","import Util from \"./Util\";\n\n/**\n * 音频管理类\n */\nclass AudioManager {\n\n    private static instance: AudioManager;\n    public static getInstance(): AudioManager {\n        if (this.instance == null) {\n            this.instance = new AudioManager();\n        }\n        return this.instance;\n    }\n\n    isPlaying = false                       //是否播放中\n    AUDIO_URL = 'audios/';\n    COMMON_AUDIO_URL = \"audio_common/\";\n    RECORD = \"record\"\n    GAME_END = \"gameEnd\"                    //结束音效\n    GAME_COIN_MID = \"coin_mid\"\n    GAME_COIN_LARGE = \"coin_large\"\n    LETS_SAY = \"lets_say\"\n    TRY_AGAIN = \"try_again\"\n    SUPER_JOB = \"super_job\"\n    GAME_RIGHT = \"game_right\"               //正确音效\n    GAME_ERROR = \"game_error\"               //错误音效\n    LISTEN_AND_CHOOSE = \"Listen_and_choose\" //引导音效\n    _masterVolume: number = 1.0;            //音量\n    CHOOSE_THE_CORRECT_ANSWER = \"choose_the_correct_answer\"     //拖动引导\n    CHOOSE_THE_CORRECT_WORD = \"choose_the_correct_word\"\n\n    effectId = -1;\n    audio_common =\n        [\n            \"record\",\n            \"gameEnd\",\n            \"coin_mid\",\n            \"coin_large\",\n            \"lets_say\",\n            \"try_again\",\n            \"super_job\",\n            \"game_right\",\n            \"game_error\",\n            \"Listen_and_choose\",\n            \"choose_the_correct_answer\",\n            \"choose_the_correct_word\",\n        ]\n\n    /**\n     * 播放音乐\n     * url 音频名字 \n     * callBack  回调函数 \n     * isPlaying 播音频时是否需要屏蔽点击事件\n     */\n    // playMusic(url:string,callBack?:Function,isPlaying?:boolean){\n    //     this._masterVolume = url == this.GAME_END ? 0.6:1\n    //     let path\n    //     if(this.audio_common.indexOf(url) != -1)\n    //     {\n    //         path = this.COMMON_AUDIO_URL\n    //     }else\n    //     {\n    //         path = this.AUDIO_URL\n    //     }\n\n    //     cc.loader.loadRes(path+url, cc.AudioClip, (err, audio)=>\n    //     {\n    //         if(err)\n    //         {\n    //             console.log(err,\"音效加载失败===============>>\")\n    //         }else{\n    //             this.loadMusic(audio,callBack,isPlaying)\n    //         } \n    //     });\n    // }\n\n\n    // loadMusic(audio:cc.AudioClip,callBack?:Function,isPlaying?:boolean){\n    //     this.isPlaying = true\n    //     let id = cc.audioEngine.play(audio, false,this._masterVolume)\n    //     cc.audioEngine.setFinishCallback(id,()=>\n    //     {\n    //         callBack && callBack()\n    //         this.isPlaying = false\n    //     })\n    // }\n\n    playMusic(url: string, callBack?: Function, isPlaying: boolean = false) {\n        this._masterVolume = url == this.GAME_END ? 0.6 : 1\n        let path\n        if (this.audio_common.indexOf(url) != -1) {\n            path = this.COMMON_AUDIO_URL\n        } else {\n            path = this.AUDIO_URL\n        }\n\n        cc.loader.loadRes(path + url, cc.AudioClip, (err, audio) => {\n            if (err) {\n                console.log(err, \"音效加载失败===============>>\")\n            } else {\n                this.loadMusic(audio, callBack, isPlaying)\n            }\n        });\n    }\n\n    playLoopMusic(url: string, callBack?: Function, isPlaying: boolean = true) {\n        this._masterVolume = url == this.GAME_END ? 0.6 : 1\n        let path\n        if (this.audio_common.indexOf(url) != -1) {\n            path = this.COMMON_AUDIO_URL\n        } else {\n            path = this.AUDIO_URL\n        }\n        cc.loader.loadRes(path + url, cc.AudioClip, (err, audio) => {\n            if (err) {\n                console.log(err, \"音效加载失败===============>>\")\n            } else {\n                this.loadMusic(audio, callBack, isPlaying, true)\n            }\n        });\n    }\n\n    stopMusic(url: string) {\n        cc.audioEngine.stop(this.effectId);\n    }\n\n\n    loadMusic(audio: cc.AudioClip, callBack?: Function, isPlaying?: boolean, isLoop: boolean = false) {\n        this.isPlaying = isPlaying\n        cc.audioEngine.stop(this.effectId)\n        this.effectId = cc.audioEngine.play(audio, isLoop, this._masterVolume)\n        if (!isLoop) {\n            cc.audioEngine.setFinishCallback(this.effectId, () => {\n                Util.stopVoiceAni()\n                callBack && callBack()\n                this.isPlaying = false\n            })\n\n        }\n\n    }\n}\n\n\nexport default AudioManager.getInstance()\n\n\n","/**\r\n * 资源加载基类，负责处理资源加载逻辑（本地/远程下载/网络动态资源）\r\n * @author Yue\r\n */\r\nexport default abstract class BaseLoader {\r\n    /**\r\n     * 资源统一加载接口\r\n     * @param {string} path 资源路径\r\n     * @param {cc.Asset} type 资源类型\r\n     * @param {(err, res) => void} onComplete 加载完成回调\r\n     * @param {cc.AssetManager.Bundle | string} bundle 资源所属bundle，可选。\r\n     * @param {(finish: number, total: number, item: cc.AssetManager.RequestItem) => void} onProgress 加载进度\r\n     */\r\n    public loadRes(path: string, options: typeof cc.Asset | Record<string, any>, onComplete: (err, res) => void, bundle?: cc.AssetManager.Bundle, onProgress?: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void): void {\r\n        if (this.isNetRes(path)) {\r\n            // 加载网络资源\r\n            this.loadNetRes(path, options, onComplete);\r\n        } else if (this.isRemoteRes(path)) {\r\n            // 加载远程待下载资源\r\n            this.loadRemoteRes(path, options, onComplete);\r\n        } else {\r\n            // 加载本地资源\r\n            this.loadLocalRes(path, options, onProgress, onComplete, bundle);\r\n        }\r\n    }\r\n\r\n    // 加载网络资源\r\n    public abstract loadNetRes(path: string, options: typeof cc.Asset | Record<string, any>, callback: (err, res) => void): void;\r\n    // 加载远程待下载资源\r\n    public abstract loadRemoteRes(path: string, type: typeof cc.Asset | Record<string, any>, callback: (err, res) => void): void;\r\n    // 加载本地资源\r\n    public abstract loadLocalRes(path: string, type: typeof cc.Asset | Record<string, any>, onProgress: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void, onComplete: (err, res) => void, bundle?: cc.AssetManager.Bundle): void;\r\n\r\n    /**\r\n     * 判断是否是远程待下载资源\r\n     * @param {string} path 资源路径 \r\n     */\r\n    public isRemoteRes(path: string): boolean {\r\n        return false;\r\n    }\r\n\r\n    public isNetRes(path: string): boolean {\r\n        if (path.startsWith(\"http://\") || path.startsWith(\"https://\") || path.startsWith(\"zybhost://\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}","import ResLoader from \"../framework/load/ResLoader\";\nimport AudioManager2 from \"../system/audio/AudioManager2\";\nimport LogSystem from \"../system/log/LogSystem\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ClickCmpt extends cc.Component {\n\n    // 点击音效\n    @property(cc.String)\n    clickSound: string = \"commonRes/sound/btn_click\";\n    // 默认bundle\n    @property(cc.String)\n    bundleName = 'components';\n\n\n    @property({ tooltip: \"启用点击反馈\" })\n    clickAudioEffect: boolean = true;\n    // 点击事件\n    @property({ type: [cc.Component.EventHandler], tooltip: \"点击事件列表\" })\n    clickEvents: cc.Component.EventHandler[] = [];\n\n    onLoad() {\n        if (this.clickEvents.length > 0) {\n            this.onCilckEventHandler();\n        }\n    }\n\n    onCilckEventHandler() {\n        this.clickEvents.forEach(item => {\n            let targeNode = item.target;\n            let tempCmpt = targeNode.getComponent(item[\"_componentName\"]);\n            this.onClick(targeNode, tempCmpt[item.handler], tempCmpt, item.customEventData, this.clickAudioEffect)\n        })\n    }\n\n    /**\n     * 注册或发送点击事件，默认带点击音效\n     * @param {cc.Node} node 事件节点  \n     * @param {string | (event: any) => void} handler 事件名称 | 事件回调函数 \n     * @param {any} target 目标 \n     * @param {any} param 参数 \n     * @param {boolean} clickEffect 点击反馈\n     * @param {string} sound 声音，有默认 \n     * @param {string} bundleName bundle名称 默认components\n     * \n     */\n    public onClick<T extends (event: any) => void>(node: cc.Node,\n        handler: T,\n        target?: any,\n        param?: any,\n        clickEffect?: boolean,\n        sound?: string,\n        bundleName?: string | cc.AssetManager.Bundle): void {\n        if (!node) {\n            LogSystem.warn(`onClick参数node不能为空：${node}`);\n            return;\n        }\n\n        node.on(cc.Node.EventType.TOUCH_START, (event) => {\n            let soundName = sound ? sound : this.clickSound;\n            let bundle = bundleName ? bundleName : this.bundleName;\n            // \b点击反馈\n            if (clickEffect) {\n                AudioManager2.playEffect(bundle, soundName);\n\n            }\n            if (handler) { handler.call(target, param); }\n\n        }, target);\n\n\n    }\n\n    /**\n     * 移除节点的点击事件\n     * @param {cc.Node | string} node 事件节点 \n     */\n    public offClick(node: cc.Node): void {\n        if (!node) {\n            LogSystem.warn(`offClick参数node不能为空：${node}`);\n            return;\n        }\n\n        node.off(cc.Node.EventType.TOUCH_START);\n    }\n\n    public preloadClickEffect() {\n        ResLoader.loadRes(this.clickSound, cc.AudioClip, () => { }, this.bundleName);\n    }\n}","/**\n * 主要定义子游戏和框架交互的事件类型\n * C2M_** 框架到子游戏事件\n * M2C_** 子游戏到框架事件\n */\n\n// 视频与子游戏交互\nexport enum VideoEventTransType {\n    //  视频开始播放\n    C2M_VIDEO_PLAY_START,\n    //  刷新视频进度\n    C2M_UPDATE_PLAY_STATUS = 1,\n    //  视频播放完成\n    C2M_VIDEO_PLAY_COMPLETE,\n    //  播放视频\n    M2C_VIDEO_PLAY_START,\n    //  暂停视频\n    M2C_VIDEO_PLAY_PAUSE,\n    //  恢复播放视频\n    M2C_VIDEO_PLAY_RESUME,\n    //  视频跳转\n    M2C_VIDEO_PLAY_SEEKTO,\n    //  视频初始化\n    M2C_VIDEO_INIT,\n    //  视频卸载\n    M2C_VIDEO_DESTROY,\n}","/**\n * \n *  通用Tips枚举\n */\nexport enum TIPS_TYPE {\n    // 非WIFI\n    NOT_WIFI = \"NOT_WIFI\",\n    // 无网络\n    NO_NETWORK = \"NO_NETWORK\",\n    // 下载失败\n    DOWNLOAD_FAILED = \"DOWNLOAD_FAILED\",\n    // 接口请求失败\n    REQUEST_FAILED = \"REQUEST_FAILED\",\n    // 权限弹窗\n    PERMISS_ALERT = \"PERMISS_ALERT\",\n}","import PopupBase from \"./PopupBase\";\n\nconst { ccclass, property } = cc._decorator;\n\n/**\n * 确认弹窗（PopupBase 使用示例）\n */\n@ccclass\nexport default class ConfirmPopup extends PopupBase<ConfirmPopupOptions> {\n\n    @property(cc.Label)\n    private titleLabel: cc.Label = null;\n\n    @property(cc.Label)\n    private contentLabel: cc.Label = null;\n\n    @property(cc.Node)\n    private confirmBtn: cc.Node = null;\n\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    private registerEvent() {\n        this.confirmBtn.on(cc.Node.EventType.TOUCH_END, this.onConfirmBtnClick, this);\n    }\n\n    private unregisterEvent() {\n        this.confirmBtn.targetOff(this);\n    }\n\n    protected init() {\n\n    }\n\n    protected updateDisplay(options: ConfirmPopupOptions): void {\n        this.titleLabel.string = options.title;\n        this.contentLabel.string = options.content;\n    }\n\n    protected onConfirmBtnClick() {\n        this.options.confirmCallback && this.options.confirmCallback();\n        this.hide();\n    }\n\n}\n\n/** 确认弹窗选项 */\nexport interface ConfirmPopupOptions {\n    title: string;\n    content: string;\n    confirmCallback: Function;\n}\n","\nimport IPlatform from \"./IPlatform\";\n\nexport default class DebuggerAdapter implements IPlatform {\n    packageName: string;\n    public isPrintLog: boolean = false;\n    public onGameExit(): void {\n        // console.log(`Android adapter:onGameExit`)\n        // this.callNative(\"onGameExit\", \"()V\")\n    }\n    public onGameReady(): void {\n        // console.log(`Android adapter:onGameReeady`)\n        // GameInfo.instance.hasCalledOnGameReady = true;\n        // this.callNative(\"onGameReady\", \"()V\")\n    }\n\n    public toast(message: string): void {\n        // this.callNative(\"toast\", \"(Ljava/lang/String;)V\", message)\n    }\n\n    callFunction(funcName: string): void {\n        // throw new Error(\"Method not implemented.\");\n    }\n\n    callFunctionResult(funcName: string, parm: string, moduleName: string) {\n        throw new Error(\"Method not implemented.\");\n    }\n}","\r\nimport BaseLoader from \"./BaseLoader\";\r\n\r\nexport class DefaultLoader extends BaseLoader {\r\n\r\n    public loadNetRes(path: string, options: typeof cc.Asset | Record<string, any>, callback: (err: any, res: any) => void): void {\r\n        // 加载网络json资源\r\n        cc.assetManager.loadRemote(path, options, (e, res) => {\r\n            if (e) {\r\n                cc.error(e);\r\n            }\r\n            if (callback) {\r\n                callback(e, res);\r\n            }\r\n        });\r\n    }\r\n\r\n    public loadRemoteRes(path: string, type: any, callback: (err: any, res: any) => void): void {\r\n        // 加载远程待下载图片资源\r\n        cc.log(path, type, callback);\r\n        throw new Error(\"AtlasLoader loadRemoteRes method not implemented.\");\r\n    }\r\n\r\n    public loadLocalRes(path: string, type: any, onProgress: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void, callback: (err: any, res: any) => void, bundle?: cc.AssetManager.Bundle): void {\r\n        if (bundle) {\r\n            bundle.load(path, type, onProgress, callback);\r\n        } else {\r\n            cc.resources.load(path, type, onProgress, callback);\r\n        }\r\n    }\r\n}","/**\n * 延迟节点\n */\nexport class Delay {\n    public key: string;   // key\n    public time: number;   // 间隔多久\n    public current: number;   // 当前时间戳\n\n    constructor(k, v) {\n        this.key = k;\n        this.time = v;\n    }\n}\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class DelayUtils {\n    /**\n     * 延迟队列\n     */\n    private static delayMap: { [key: string]: Delay; } = {\n        \"button\": new Delay(\"button\", 1000)\n    };\n\n    /**\n     * 检测是否延迟\n     * @param key\n     * @returns true : 延迟 false : 不需要延迟\n     */\n    public static CheckDelay(key: string): boolean {\n\n        let delay = DelayUtils.delayMap[key];\n        if (!delay) { return true; }\n\n        let tick = (new Date()).getTime();\n\n        let time = tick - delay.current\n\n        if (time < delay.time) { return true; }\n\n        delay.current = tick;\n\n        return false;\n    }\n}\n","import IEntity from \"./IEntity\";\n\n/**\n * @author\n *\n */\nexport default class EntityManager {\n    private static _instance: EntityManager;\n    private _entityMap: Object;\n    private _length: number = 0;\n\n    public constructor() {\n        this._entityMap = {};\n    }\n\n    public static get instance(): EntityManager {\n        if (this._instance == null) {\n            this._instance = new EntityManager();\n        }\n        return this._instance;\n    }\n    public release(): void {\n        this._entityMap = null;\n        EntityManager._instance = null;\n    }\n\n    // this method stores a pointer to the entity in the std::vector\n    // m_Entities at the index position indicated by the entity's ID\n    // (makes for faster access)\n    public registerEntity(newEntity: IEntity): void {\n        this._entityMap[newEntity.sid] = newEntity;\n        // this.index++;\n    }\n\n    // returns a pointer to the entity with the ID given as a parameter\n    public getEntityFromID(id: string): IEntity {\n        return this._entityMap[id];\n    }\n\n    // this method removes the entity from the list\n    public removeEntity(entity: IEntity): void {\n        let key: any;\n        for (key in this._entityMap) {\n            if (this._entityMap[key] == entity) {\n                delete this._entityMap[key];\n            }\n        }\n    }\n\n    /**\n     * 获取所有智体\n     */\n    public getAllEntity(): Object {\n        return this._entityMap;\n    }\n\n    /**\n     * 获取一个可用的智体\n     */\n    public getAvailableEntity<T extends IEntity>(clazz: any): T {\n        let key: any;\n        let availableEntity: T\n        for (key in this._entityMap) {\n            let entity: T = this._entityMap[key];\n            // console.log(entity instanceof clazz);\n            if (entity instanceof clazz) {\n                if (entity != null) {\n                    // if (entity.isDestroy == true) {\n                        availableEntity = entity;\n                        return availableEntity;\n                    // }\n                }\n            }\n        }\n        availableEntity = this.createEntity<T>(clazz);\n        return availableEntity;\n    }\n\n    /**\n     * new一个智体\n     */\n    private createEntity<T extends IEntity>(clazz: new() => T): T {\n        let entity: T = new clazz();\n        // (entity as IEntity).isDestroy = false;\n        // (<IEntity>entity).entityType = EntityType.FISH;\n        this.registerEntity(entity);\n        this._length++;\n        return entity;\n    }\n\n    /**\n     * get length\n     */\n    public get length(): number {\n        return this._length\n    }\n}\n","\nexport class ErrorSendInterval {\n    public static readonly RATE_DEFAULT: number = 5;\n    public static readonly RATE_LOW: number = 10;\n}\n\n/**\n * 错误捕获系统\n * @export\n * @class ErrorSystem\n * # 注册错误监听\n * ```\n * ErrorSystem.instance.init(false,this.errorOutAdapter,ErrorSendInterval.RATE_LOW)\n * ```\n */\nexport default class ErrorSystem {\n    private static _instance: ErrorSystem;\n\n    private errorMap: any = {};\n    private outAdapter: Function;\n    private minInterval: number;\n\n    public static get instance(): ErrorSystem {\n        if (ErrorSystem._instance == null) {\n            ErrorSystem._instance = new ErrorSystem();\n        }\n        return ErrorSystem._instance;\n    }\n\n    /**\n     * 注册全局错误捕获\n     * @param {boolean} isNative 是否是native环境\n     * @param {(exception: string) => void} outAdapter 输出适配器\n     * @returns {Promise<any>}\n     * @memberof ErrorSyStem\n     */\n    public init(isNative: boolean, outAdapter?: (exception: string) => void): Promise<void> {\n        this.outAdapter = outAdapter;\n        return new Promise((res, rea) => {\n            if (isNative) {\n                // @ts-ignore\n                window.__errorHandler = (errorMessage, file, line, message, error) => {\n                    let exception: any = {};\n                    exception.errorMessage = errorMessage;\n                    exception.file = file;\n                    exception.line = line;\n                    exception.message = message;\n                    exception.error = error;\n                    // @ts-ignore\n                    if (window.exception != JSON.stringify(exception)) {\n                        // @ts-ignore\n                        window.exception = JSON.stringify(exception);\n                    }\n                    //TODO: 发送请求上报异常\n                    this.outAdapter(exception);\n                };\n                // @ts-ignore\n            } else {\n                //捕获promise错误\n                window.addEventListener('unhandledrejection', (event: PromiseRejectionEvent) => {\n                    let message: string = String(event.reason.stack)\n                    this.outAdapter({ \"unhandledrejection\": String(event.reason.stack) });\n                })\n                window.onerror = (errorMessage, file, line, message, error) => {\n                    let exception: any = {};\n                    exception.errorMessage = errorMessage;\n                    exception.file = file;\n                    exception.line = line;\n                    exception.message = message;\n                    exception.error = error;\n                    // @ts-ignore\n                    if (window.exception != JSON.stringify(exception)) {\n                        // @ts-ignore\n                        window.exception = JSON.stringify(exception);\n                    }\n                    //TODO: 发送请求上报异常\n                    this.outAdapter(exception);\n                };\n            }\n            res();\n        })\n    }\n\n    // private send(exception: any): void {\n    //     let str: string = JSON.stringify(exception);\n    //     if (this.errorMap[exception]) {\n    //         this.errorMap[exception] += 1;\n    //         if (this.errorMap[exception] >= this.minInterval) {\n    //             this.outAdapter(str);\n    //             this.errorMap[exception] = null;\n    //             delete this.errorMap[exception];\n    //         }\n    //     } else {\n    //         this.errorMap[exception] = 1;\n    //         this.outAdapter(str);\n    //     }\n    // }\n\n    public release(): void {\n        this.outAdapter = null;\n        this.errorMap = null;\n        ErrorSystem._instance = null;\n    }\n}","/**\n * @private\n * 用于管理事件的类\n * 可以扩展以在其他类中提供事件功能,参考NODEJS的EventEmitter模块实现,注释为机翻\n *\n * @class 事件管理器管理事件注册和发布\n * @see https://github.com/Olical/EventEmitter\n * @version 1.0\n */\nexport class EventEmitter {\n  private _events: any;\n  private _onceReturnValue: any;\n\n  /**\n   * 返回指定事件的侦听器数组。\n   * 如果需要，将初始化事件对象和侦听器数组。\n   * 如果使用正则表达式搜索，将返回一个对象。对象包含每个匹配事件的键。\n   * @example  /ba[rz]/ 则 返回一个对象包含 bar 和 baz.\n   * 但是，如果您已经用定义事件定义了它们，或者添加了一些侦听器\n   * 对象响应中的每个属性都是监听器函数的数组。\n   *\n   * @param {string|RegExp} 事件名称\n   * @return {Function[|Object]} 事件的所有侦听器函数.\n   */\n  public getListeners(event: string | RegExp): Function[] {\n    var events = this._getEvents();\n    var response: any;\n    var key: any;\n\n    // Return a concatenated array of all matching events if\n    // the selector is a regular expression.\n    if (event instanceof RegExp) {\n      response = {};\n      for (key in events) {\n        if (events.hasOwnProperty(key) && event.test(key)) {\n          response[key] = events[key];\n        }\n      }\n    } else {\n      response = events[event] || (events[event] = []);\n    }\n\n    return response;\n  }\n\n  /**\n   * 将侦听器函数添加到指定的事件。\n   * 重复添加将会被忽略\n   * 如果侦听器返回true，那么它将被调用后被删除\n   * 如果将正则表达式作为事件名传递，则监听器将被添加到匹配它的所有事件。\n   *\n   * @param {string|RegExp} event 事件名称\n   * @param {Function} listener 发出事件时调用的方法。\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public addListener(event: string | RegExp, listener: Function | object, target: any = null): EventEmitter {\n    if (!this.isValidListener(listener)) {\n      throw new TypeError(\"listener must be a function\");\n    }\n\n    var listeners = this.getListenersAsObject(<string>event);\n    var listenerIsWrapped = typeof listener === \"object\";\n    var key;\n\n    for (key in listeners) {\n      if (listeners.hasOwnProperty(key) && this.indexOfListener(listeners[key], listener, target) === -1) {\n        (<any>listeners[key]).push(\n          listenerIsWrapped\n            ? listener\n            : {\n              listener: listener,\n              once: false,\n              target: target\n            }\n        );\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * addListener方法的别名\n   * @param {string | RegExp} event\n   * @param {Function} listener\n   * @returns {EventEmitter}\n   */\n  public on(event: string | RegExp, listener: Function | object, target?: any): EventEmitter {\n    return this.addListener(event, listener, target);\n  }\n\n  /**\n   * 取一组听众对象和把它变成一个侦听器函数列表。\n   *\n   * @param {Object[]} 侦听原始监听器对象。\n   * @return {Function[]} 侦听器的功能。\n   */\n  public flattenListeners(listeners: { listener: Function }[]): Function[] {\n    var flatListeners = [];\n    var i;\n\n    for (i = 0; i < listeners.length; i += 1) {\n      flatListeners.push(listeners[i].listener);\n    }\n\n    return flatListeners;\n  }\n\n  /**\n   * Fetches the requested listeners via getListeners but will always return the results inside an object.\n   * This is mainly for internal use but others may find it useful.\n   *\n   * @param event {string|RegExp} Name of the event to return the listeners from.\n   * @return {Object} All listener functions for an event in object\n   */\n  public getListenersAsObject(event: string): { [event: string]: Function } {\n    var listeners = this.getListeners(event);\n    var response: any; //Array<string | RegExp>;\n\n    if (listeners instanceof Array) {\n      response = {};\n      response[event] = listeners;\n    }\n\n    return response || listeners;\n  }\n\n  /**\n   * Semi-alias of addListener. It will add a listener that will be\n   * automatically removed after it's first execution.\n   *\n   * @param event {string|RegExp} Name of the event to attach the listener to.\n   * @param listener {Function} Method to be called when the event is emitted.\n   * If the function returns true then it will be removed after calling.\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public addOnceListener(event: string | RegExp, listener: Function): EventEmitter {\n    return this.addListener(event, <Object>{ listener: listener, once: true });\n  }\n\n  /**\n   * addOnceListener的别名\n   * @param {string | RegExp} event\n   * @param {Function} listener\n   * @returns {EventEmitter}\n   */\n  public once(event: string | RegExp, listener: Function): EventEmitter {\n    return this.addOnceListener(event, listener);\n  }\n\n  /**\n   * Defines an event name.\n   * This is required if you want to use a regex to add a listener to multiple events at once.\n   * If you don't do this then how do you expect it to know what event to add to?\n   * Should it just add to every possible match for a regex? No. That is scary and bad.\n   * You need to tell it what event names should be matched by a regex.\n   *\n   * @param {string} event Name of the event to create.\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public defineEvent(event: string): EventEmitter {\n    this.getListeners(event);\n    return this;\n  }\n\n  /**\n   * Defines an event name.\n   * This is required if you want to use a regex to add a listener to multiple events at once.\n   * If you don't do this then how do you expect it to know what event to add to?\n   * Should it just add to every possible match for a regex? No. That is scary and bad.\n   * You need to tell it what event names should be matched by a regex.\n   *\n   * @param {string[]} events Name of the event to create.\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public defineEvents(events: string[]): EventEmitter {\n    for (var i = 0; i < events.length; i += 1) {\n      this.defineEvent(events[i]);\n    }\n    return this;\n  }\n\n  /**\n   * 从指定的事件中移除侦听器函数。\n   * 当将正则表达式传递为事件名称时，它将从与它匹配的所有事件中移除侦听器。\n   *\n   * @param {String|RegExp} event Name of the event to remove the listener from.\n   * @param {Function} listener Method to remove from the event.\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public removeListener(event: string | RegExp, listener: Function, target: any = null): EventEmitter {\n    var listeners = this.getListenersAsObject(<string>event);\n    var index;\n    var key;\n\n    for (key in listeners) {\n      if (listeners.hasOwnProperty(key)) {\n        index = this.indexOfListener(listeners[key], listener, target);\n\n        if (index !== -1) {\n          (<any>listeners[key]).splice(index, 1);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * removeListener的别名\n   * @param {string | RegExp} event\n   * @param {Function} listener\n   * @returns {EventEmitter}\n   */\n  public off(event: string | RegExp, listener: Function, target: any = null): EventEmitter {\n    return this.removeListener(event, listener, target);\n  }\n\n  /**\n   * Adds listeners in bulk using the manipulateListeners method.\n   * If you pass an object as the second argument you can add to multiple events at once.\n   * The object should contain key value pairs of events and listeners or listener arrays.\n   * You can also pass it an event name and an array of listeners to be added.\n   * You can also pass it a regular expression to add the array of listeners to all events that match it.\n   * Yeah, this function does quite a bit. That's probably a bad thing.\n   *\n   * @param {String|Object|RegExp} event An event name if you will pass an array of listeners next.\n   * An object if you wish to add to multiple events at once.\n   * @param {Function[]} [listeners] An optional array of listener functions to add.\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public addListeners(event: string | RegExp, listeners: Function[]): EventEmitter {\n    return this.manipulateListeners(false, event, listeners);\n  }\n\n  /**\n   * Removes listeners in bulk using the manipulateListeners method.\n   * If you pass an object as the second argument you can remove from multiple events at once.\n   * The object should contain key value pairs of events and listeners or listener arrays.\n   * You can also pass it an event name and an array of listeners to be removed.\n   * You can also pass it a regular expression to remove the listeners from all events that match it.\n   *\n   * @param {String|Object|RegExp} event An event name if you will pass an array of listeners next.\n   * An object if you wish to remove from multiple events at once.\n   * @param {Function[]} [listeners] An optional array of listener functions to remove.\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public removeListeners(event: string | RegExp, listeners: Function[]): EventEmitter {\n    return this.manipulateListeners(true, event, listeners);\n  }\n\n  /**\n   * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job.\n   * You should really use those instead, this is a little lower level.\n   * The first argument will determine if the listeners are removed (true) or added (false).\n   * If you pass an object as the second argument you can add/remove from multiple events at once.\n   * The object should contain key value pairs of events and listeners or listener arrays.\n   * You can also pass it an event name and an array of listeners to be added/removed.\n   * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n   *\n   * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n   * @param {String|Object|RegExp} event An event name if you will pass an array of listeners next.\n   * An object if you wish to add/remove from multiple events at once.\n   * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public manipulateListeners(\n    remove: boolean,\n    event: string | Object | RegExp,\n    listeners: Function[]\n  ): EventEmitter {\n    var i;\n    var value;\n    var single = remove ? this.removeListener : this.addListener;\n    var multiple = remove ? this.removeListeners : this.addListeners;\n\n    // If event is an object then pass each of its properties to this method\n    if (typeof event === \"object\" && !(event instanceof RegExp)) {\n      for (i in event) {\n        if ((<object>event).hasOwnProperty(i) && (value = event[i])) {\n          // Pass the single listener straight through to the singular method\n          if (typeof value === \"function\") {\n            single.call(this, i, value);\n          } else {\n            // Otherwise pass back to the multiple function\n            multiple.call(this, i, value);\n          }\n        }\n      }\n    } else {\n      // So event must be a string\n      // And listeners must be an array of listeners\n      // Loop over it and pass each one to the multiple method\n      i = listeners.length;\n      while (i--) {\n        single.call(this, event, listeners[i]);\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all listeners from a specified event.\n   * If you do not specify an event then all listeners will be removed.\n   * That means every event will be emptied.\n   * You can also pass a regex to remove all events that match it.\n   *\n   * @param {String|RegExp} [event] Optional name of the event to remove all listeners for.\n   * Will remove from every event if not passed.\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public removeEvent(event?: string | RegExp): EventEmitter {\n    var type = typeof event;\n    var events = this._getEvents();\n    var key;\n\n    // Remove different things depending on the state of event\n    if (type === \"string\") {\n      // Remove all listeners for the specified event\n      delete events[<string>event];\n    } else if (event instanceof RegExp) {\n      // Remove all events matching the regex.\n      for (key in events) {\n        if (events.hasOwnProperty(key) && event.test(key)) {\n          delete events[key];\n        }\n      }\n    } else {\n      // Remove all listeners in all events\n      delete this._events;\n    }\n\n    return this;\n  }\n\n  /**\n   * Alias of removeEvent.\n   *\n   * Added to mirror the node API.\n   */\n  public removeAllListeners(event?: string | RegExp): EventEmitter {\n    return this.removeEvent(event);\n  }\n\n  /**\n   * 派发事件\n   * > 当发出时，将执行附加到该事件的每个侦听器。\n   * > 如果传递可选参数数组，那么这些参数将在执行后传递给每个侦听器。\n   * > 因为它使用apple，所以你的参数数组会像你单独写出来一样通过。\n   * > 还可以传递正则表达式，以将其发送给匹配它的所有事件。\n   *\n   * @param {String|RegExp} event 发出和执行侦听器的事件的名称。\n   * @param {Array} [args] 要传递给每个侦听器的可选参数数组。\n   * @return {EventEmitter} 当前示例\n   */\n  public emitEvent(event: string | RegExp, ...args: any[]): EventEmitter {\n    var listenersMap = this.getListenersAsObject(<string>event);\n    var listeners;\n    var listener;\n    var i;\n    var key;\n    var response;\n\n    for (key in listenersMap) {\n      if (listenersMap.hasOwnProperty(key)) {\n        listeners = (<any>listenersMap[key]).slice(0);\n\n        for (i = 0; i < listeners.length; i++) {\n          // If the listener returns true then it shall be removed from the event\n          // The function is executed either with a basic call or an apply if there is an args array\n          listener = listeners[i];\n\n          if (listener.once === true) {\n            this.removeListener(event, listener.listener);\n          }\n          response = listener.listener.apply(listener.target || this, ...args || []);\n\n          if (response === this.onceReturnValue) {\n            this.removeListener(event, listener.listener);\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * emitEvent的别名\n   * @param {string | RegExp} event\n   * @param args\n   * @returns {EventEmitter}\n   */\n  public trigger(event: string | RegExp, ...args: any[]): EventEmitter {\n    return this.emitEvent(event, ...args);\n  }\n\n  /**\n   * Subtly different from emitEvent in that it will pass its arguments on to the listeners,\n   * as opposed to taking a single array of arguments to pass on.\n   * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n   *\n   * @param {String|RegExp} event Name of the event to emit and execute listeners for.\n   * @param {... any[]} args Optional additional arguments to be passed to each listener.\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public emit(event: string | RegExp, ...args: any[]): EventEmitter {\n    // var args = Array.prototype.slice.call(arguments, 1);\n    return this.emitEvent(event, args);\n  }\n\n  public get onceReturnValue() {\n    if (this.hasOwnProperty(\"_onceReturnValue\")) {\n      return this._onceReturnValue;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Sets the current value to check against when executing listeners. If a\n   * listeners return value matches the one set here then it will be removed\n   * after execution. This value defaults to true.\n   *\n   * @param {any} value The new value to check for when executing listeners.\n   * @return {EventEmitter} Current instance of EventEmitter for chaining.\n   */\n  public set onceReturnValue(value) {\n    this._onceReturnValue = value;\n    // return this;\n  }\n\n  private _getEvents() {\n    return this._events || (this._events = {});\n  }\n\n  private isValidListener(listener: object | Function): boolean {\n    if (typeof listener === \"function\" || listener instanceof RegExp) {\n      return true;\n    } else if (listener && typeof listener === \"object\") {\n      return this.isValidListener(<any>listener);\n    } else {\n      return false;\n    }\n  }\n\n  private indexOfListener(listeners: any, listener: any, target: any): number {\n    var i = listeners.length;\n    while (i--) {\n      if ((listeners[i].listener === listener) && (target == listeners[i].target)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n}\n","/**\n * @class 事件管理器\n * @version 1.0\n */\nimport { EventEmitter } from \"./EventEmitter\";\n\nexport default class EventSystem {\n  private static _emitter = new EventEmitter();\n\n  /**\n   * 绑定事件\n   * @param {String} event\n   * @param {Function} callback\n   * @example Event.on(events, this.onEvents.bind(this));\n   */\n  public static on(event: string, callback: any, target?: any): void {\n    this._emitter.on(event, callback, target);\n  }\n\n  /**\n   * 绑定事件\n   * @param {String} event\n   * @param {Function} callback\n   * @example Event.on(events, this.onEvents.bind(this));\n   */\n  public static once(event: string, callback: any, target?: any): void {\n    this._emitter.once(event, callback);\n  }\n\n  /**\n   * 销毁事件\n   * @param {String} event\n   * @param {Function} callback\n   * @example Event.off(events, this.onEvents.bind(this));\n   */\n  public static off(event: string, callback: any, target: any): void {\n    this._emitter.off(event, callback, target);\n  }\n\n  /**\n   * 派发事件\n   * @param {String} event\n   * @param {any} data\n   * @example Event.emit(event, data);\n   */\n  public static emit(event: string, eventData?: any): void {\n    let params: any = {};\n    params.event = event;\n    params.data = eventData;\n    this._emitter.emit(event, params);\n  }\n\n  /**\n   * 释放所有监听器\n   */\n  public static release(): void {\n    this._emitter.removeEvent();\n  }\n}\n","export default class Events {\n    // 抓取动作-收回且完成\n    public static readonly GRAB_ACTION_COMPLETE: string = \"grabActionComplete\";\n    // 抓取动作-碰撞\n    public static readonly GRAB_ACTION_ON_COLLISION: string = \"grabActionOnCollision\";\n    // 进度区水果落地\n    public static readonly FRUIT_DOWN_COMPLETE: string = \"fruitDownComplete\";\n    // 抓取成功并且得分\n    public static readonly GRAB_SUCCESS: string = \"grabSuccess\";\n    // 游戏完成(进入复数词学习)\n    public static readonly GAME_COMPLETE: string = \"gameComplete\";\n    // 引导完成\n    public static readonly GAME_GUID_COMPLETE: string = \"gameGuidComplete\";\n    // 学习完成\n    public static readonly GAME_LEARN_COMPLETE: string = \"gameLearnComplete\";\n    // 游戏分数\n    public static readonly GAME_SCORE: string = \"gameScore\";\n    // 游戏暂停\n    public static readonly GAME_STOP: string = \"gameStop\";\n    // 游戏开始\n    public static readonly GAME_STAR: string = \"gameStar\";\n    // 阶段完成\n    public static readonly GAME_STAGE_COMPLETE: string = \"gameStageComplete\";\n    // 引导发射\n    public static readonly GUID_SEND: string = \"guideSend\";\n    // \n    public static readonly SCENE_CHANGE: string = \"sceneChange\";\n}","import LogSystem from \"../../../kit/system/log/LogSystem\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node)\n    gameNode: cc.Node = null;\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        // cc.view.setResolutionPolicy(cc.ResolutionPolicy.FIXED_HEIGHT);\n        window.webframe.Notify.listen(  //这里是英文 等app 消息 ，中文不需要 去掉直接走游戏初始化逻辑\n            \"open_vedio_Completed\",\n            this.gameStart,\n            this,\n            false\n        );\n    }\n\n    gameStart() {\n        this.gameNode.active = true;\n        // cc.view.setDesignResolutionSize(1334, 750, cc.ResolutionPolicy.NO_BORDER);\n        // cc.tween(this.gameNode).delay(.5).to(1, { opacity: 255 }).call(() => {\n        // }).start();\n        this.gameNode.getComponent('GrabFruit').init();\n    }\n\n    start() {\n\n    }\n\n    // update (dt) {}\n}\n","class GameData {\n    node_path = [\n        {\n            \"nodePath\": \"grabFruit\",\n        }\n    ]\n    record_num: string = \"\"\n    totalStar_num: number = 0\n    isFrist: boolean = true\n    isTest = false;\n    gid = [\n        [1, 2, 3],\n        [4, 5, 6]\n    ];\n\n    private static _Instance: GameData;\n\n    public static get getInstance(): GameData {\n        if (!this._Instance) {\n            this._Instance = new GameData()\n        }\n        return this._Instance\n    }\n\n    getStarNum() {\n        return this.totalStar_num;\n    }\n\n    setStarNum(num: any) {\n        this.totalStar_num = Number(num);\n    }\n\n    addStarNum(num) {\n        this.totalStar_num += num;\n    }\n\n    setIsFirst(able: boolean) {\n        console.log(\"setIsFirst ================\" + able);\n        this.isFrist = able\n    }\n\n    getIsFirst() {\n        console.log(\"getIsFirst ================\" + this.isFrist);\n        return this.isFrist\n    }\n\n    getNodePath(page) {\n        if (this.node_path[page].nodePath) {\n            return this.node_path[page].nodePath\n        } else {\n            return this.node_path[0].nodePath\n        }\n    }\n}\nexport default GameData.getInstance\n","import { kit } from \"../../../kit/kit\";\nimport Point from \"../../../Scripts/common/Point\";\nimport WordTool from \"../../../Tools/Word/scripts/WordTool\";\nimport Level1State from \"./level/Level1Sate\";\nimport LevelGlobalState from \"./level/LevelGloabelState\";\nimport Tigo from \"./Tigo\";\n// import Level3State from \"./level/Level3Sate\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GrabFruit extends cc.Component implements kit.fsm.Entity {\n\n    @property(cc.Node)\n    bgsNode: cc.Node = null;\n\n    @property(cc.Node)\n    monsterNode: cc.Node = null;\n\n    @property(cc.Node)\n    birdNode: cc.Node = null;\n\n    @property(cc.Node)\n    tigo: cc.Node = null;\n\n    @property(cc.Prefab)\n    tigoPrefab: cc.Prefab = null;\n\n    @property(WordTool)\n    word: WordTool = null;\n\n    public stateMachine: kit.fsm.StateManager<GrabFruit>;\n    public camera: cc.Camera;\n    private isPlaying: boolean = false;\n\n    async onLoad() {\n        Point.instance.init(\"抓水果\", 3);\n        Point.instance.gameStart();\n        this.stateMachine = new kit.fsm.StateManager<GrabFruit>(this);\n        this.stateMachine.ChangeState(Level1State);\n        this.stateMachine.AddGlobalState(LevelGlobalState);\n        this.camera = this.node.parent.getChildByName('Main Camera').getComponent(cc.Camera);\n        var manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n        await kit.system.timer.init();\n        await kit.manager.Audio.init();\n        // manager.enabledDebugDraw = true;\n        // manager.enabledDrawBoundingBox = true;\n\n        // kit.system.timer.doOnce(3000, () => {\n        //     kit.manager.Audio.playEffect('mangoes', false);\n        // })\n\n        cc.log('cc.sys.isMobile', cc.sys.isMobile);\n        if (!cc.sys.isMobile) {\n            this.init();\n        } else {\n            cc.log('开始等待7秒');\n            this.scheduleOnce(() => {\n                cc.log('等待7秒');\n                this.init();\n            }, 7);\n        }\n    }\n\n    public onDestroy() {\n        kit.system.timer.release();\n        this.stateMachine.release();\n    }\n\n    private init(): void {\n        if (!this.isPlaying) {\n            cc.log(\"bgm\");\n            this.isPlaying = true;\n            kit.manager.Audio.playMusic('bgm');\n            this.tigo.getComponent(Tigo).init();\n        }\n\n    }\n\n\n}\n","import { kit } from \"../../../../kit/kit\";\nimport Events from \"../Events\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Hand extends cc.Component {\n\n    onCollisionEnter(other, self): void {\n        // cc.log(other, self)\n        kit.manager.Event.emit(Events.GRAB_ACTION_ON_COLLISION, other);\n    }\n}\n","/**\n * HTTP状态码辅助类\n * * 1**\t信息，服务器收到请求，需要请求者继续执行操作\n * * 2**\t成功，操作被成功接收并处理\n * * 3**\t重定向，需要进一步的操作以完成请求\n * * 4**\t客户端错误，请求包含语法错误或无法完成请求\n * * 5**\t服务器错误，服务器在处理请求的过程中发生了错误\n */\nexport class HttpStateMap {\n  private static _instance: HttpStateMap;\n\n  public static readonly map =\n    \"100\\tContinue\\t继续。客户端应继续其请求\\n\" +\n    \"101\\tSwitching Protocols\\t切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议\\n\" +\n    \"0\\terror\\t详见：https://codeday.me/bug/20170705/34070.html\\n\" +\n    \"200\\tOK\\t请求成功。一般用于GET与POST请求\\n\" +\n    \"201\\tCreated\\t已创建。成功请求并创建了新的资源\\n\" +\n    \"202\\tAccepted\\t已接受。已经接受请求，但未处理完成\\n\" +\n    \"203\\tNon-Authoritative Information\\t非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本\\n\" +\n    \"204\\tNo Content\\t无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档\\n\" +\n    \"205\\tReset Content\\t重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域\\n\" +\n    \"206\\tPartial Content\\t部分内容。服务器成功处理了部分GET请求\\n\" +\n    \"300\\tMultiple Choices\\t多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择\\n\" +\n    \"301\\tMoved Permanently\\t永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替\\n\" +\n    \"302\\tFound\\t临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI\\n\" +\n    \"303\\tSee Other\\t查看其它地址。与301类似。使用GET和POST请求查看\\n\" +\n    \"304\\tNot Modified\\t未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源\\n\" +\n    \"305\\tUse Proxy\\t使用代理。所请求的资源必须通过代理访问\\n\" +\n    \"306\\tUnused\\t已经被废弃的HTTP状态码\\n\" +\n    \"307\\tTemporary Redirect\\t临时重定向。与302类似。使用GET请求重定向\\n\" +\n    \"400\\tBad Request\\t客户端请求的语法错误，服务器无法理解\\n\" +\n    \"401\\tUnauthorized\\t请求要求用户的身份认证\\n\" +\n    \"402\\tPayment Required\\t保留，将来使用\\n\" +\n    \"403\\tForbidden\\t服务器理解请求客户端的请求，但是拒绝执行此请求\\n\" +\n    '404\\tNot Found\\t服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置\"您所请求的资源无法找到\"的个性页面\\n' +\n    \"405\\tMethod Not Allowed\\t客户端请求中的方法被禁止\\n\" +\n    \"406\\tNot Acceptable\\t服务器无法根据客户端请求的内容特性完成请求\\n\" +\n    \"407\\tProxy Authentication Required\\t请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权\\n\" +\n    \"408\\tRequest Time-out\\t服务器等待客户端发送的请求时间过长，超时\\n\" +\n    \"409\\tConflict\\t服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突\\n\" +\n    \"410\\tGone\\t客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置\\n\" +\n    \"411\\tLength Required\\t服务器无法处理客户端发送的不带Content-Length的请求信息\\n\" +\n    \"412\\tPrecondition Failed\\t客户端请求信息的先决条件错误\\n\" +\n    \"413\\tRequest Entity Too Large\\t由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息\\n\" +\n    \"414\\tRequest-URI Too Large\\t请求的URI过长（URI通常为网址），服务器无法处理\\n\" +\n    \"415\\tUnsupported Media Type\\t服务器无法处理请求附带的媒体格式\\n\" +\n    \"416\\tRequested range not satisfiable\\t客户端请求的范围无效\\n\" +\n    \"417\\tExpectation Failed\\t服务器无法满足Expect的请求头信息\\n\" +\n    \"500\\tInternal Server Error\\t服务器内部错误，无法完成请求\\n\" +\n    \"501\\tNot Implemented\\t服务器不支持请求的功能，无法完成请求\\n\" +\n    \"502\\tBad Gateway\\t充当网关或代理的服务器，从远端服务器接收到了一个无效的请求\\n\" +\n    \"503\\tService Unavailable\\t由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中\\n\" +\n    \"504\\tGateway Time-out\\t充当网关或代理的服务器，未及时从远端服务器获取请求\\n\" +\n    \"505\\tHTTP Version not supported\\t服务器不支持请求的HTTP协议的版本，无法完成处理\";\n\n  private data: any;\n\n  public static get instance(): HttpStateMap {\n    if (HttpStateMap._instance == null) {\n      HttpStateMap._instance = new HttpStateMap();\n    }\n    return HttpStateMap._instance;\n  }\n\n  constructor() {\n    var line: Array<string> = HttpStateMap.map.split(\"\\n\");\n    this.data = {};\n    line.forEach(element => {\n      // var vo:HttpInfoVo=new HttpInfoVo();\n      var temp: Array<string> = element.split(\"\\t\");\n      this.data[temp[0]] = temp[1] + \"\\t\" + temp[2];\n    });\n  }\n\n  /**\n   * 通过http状态码，返回中英文信息\n   * @param id\n   */\n  public getErrorInfoById(id: number): void {\n    return this.data[id];\n  }\n}\n\n// export class HttpInfoVo{\n//     public id:number;\n//     public en:string;\n//     public cn:string;\n// }\n","import { Http } from \"./Http\";\n\n/**\n * # HTTP工具包\n * 封装http请求,兼容IE5 和 IE6。\n * ## 使用示例\n * * 快捷调用\n * ```\n * HttpSystem.httpGet(\"www.baidu.com\");\n * HttpSystem.httpPost(\"www.baidu.com\",{name:\"fb\",age:33});\n * ```\n * * 常规调用\n * ```\n * let req = new HttpSystem();\n * req.open(\"baidu.com\", \"get\", {cointype: 8, gameid: GlobalConfig.GAME_ID, group: 1});\n * req.onResult(resultHandler);\n * req.setRequestHeader({\"Content-Type\": \"application/x-www-form-urlencoded\", \"token\": token});\n * req.send();\n * ```\n * * 链式调用\n * ```\n * let req = new HttpSystem();\n * req.open(AppConfig.getInstance().shop_list_URL, \"get\", {cointype: 8, gameid: GlobalConfig.GAME_ID, group: 1}).onResult(resultHandler).setRequestHeader({\"Content-Type\": \"application/x-www-form-urlencoded\", \"token\": token}).send();\n * ```\n * \n * * Promise\n * ```\n * let result = await HttpSystem.httpGet(`/api/m-course?contentId=24`);\n * ```\n * ```\n * HttpSystem.httpPost(\"api/dosomething\",{name:1,age:20}).then(res=>{}).catch(e => false);\n * ```\n * ## HTTP请求方法\n\n * 方法    | 描述\n * --- | ---\n * GET | 请求指定的页面信息，并返回实体主体。\n * HEAD | 类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头\n * POST | 向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。\n * PUT  | 从客户端向服务器传送的数据取代指定的文档的内容。\n * DELETE | 请求服务器删除指定的页面。\n * CONNECT | HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。\n * OPTIONS | 允许客户端查看服务器的性能。\n * TRACE | 回显服务器收到的请求，主要用于测试或诊断。\n *\n * @version 1.0\n */\nexport default class HttpSystem {\n    private static _instance: HttpSystem;\n    private outAdapter: Function;\n\n    public static get instance(): HttpSystem {\n        if (HttpSystem._instance == null) {\n            HttpSystem._instance = new HttpSystem();\n        }\n        return HttpSystem._instance;\n    }\n\n    /**\n     * @param {Function} outAdapter 发生错误的回调\n     * @memberof HttpSystem\n     */\n    public async init(outAdapter: Function): Promise<void> {\n        return new Promise((res) => {\n            this.outAdapter = outAdapter;\n            res();\n        })\n    }\n\n    public release(): void {\n        this.outAdapter = null;\n        HttpSystem._instance = null;\n    }\n    /**\n     * 发送get请求\n     * @param url 地址\n     * @param params url参数\n     */\n    public httpGet(url: string, params?: object, header?: string): Promise<any> {\n        console.log(`httpget:url = ${url}`)\n        return new Promise((resolve, reject) => {\n            let headerJson = { 'Content-Type': 'application/json; charset=utf-8' };\n            if (header && header != \"\") {\n                let json = JSON.parse(header);\n                for (let key in json) {\n                    headerJson[key] = json[key];\n                }\n            }\n            let xhr: Http = new Http();\n            xhr.onComplete(resolve);\n            xhr.onError((error, errInfo, response) => {\n                if (this.outAdapter) {\n                    this.outAdapter(`网络错误 ${error},${url}`, errInfo, response);\n                }\n                reject()\n            });\n            xhr.openGet(Http.getUrl(url, params));\n            xhr.setRequestHeader(headerJson);\n            xhr.send();\n        }).catch(reason => {\n            if (this.outAdapter) {\n                this.outAdapter(reason && reason.message || '网络错误' + url);\n            }\n        })\n    }\n\n    /**\n     * 发送一个post请求\n     * @param url 地址\n     * @param body 包体\n     * @param params url参数\n     */\n    public httpPost(url: string, body?: any, params?: object, header?: string,): Promise<any> {\n        console.log(`httpPost:url = ${Http.getUrl(url, params)}`)\n        return new Promise((resolve, reject) => {\n            let headerJson = { 'Content-Type': 'application/json; charset=utf-8' };\n            if (header && header != \"\") {\n                let json = JSON.parse(header);\n                for (let key in json) {\n                    headerJson[key] = json[key];\n                }\n            }\n\n            let xhr: Http = new Http();\n            xhr.onComplete(resolve);\n            xhr.onError((error, errInfo, response) => {\n                if (this.outAdapter) {\n                    this.outAdapter(`网络错误 ${error},${url}`, errInfo, response);\n                }\n                reject()\n            });\n            xhr.openPost(Http.getUrl(url, params));\n            xhr.setRequestHeader(headerJson);\n            xhr.send(body);\n        }).catch(reason => {\n            if (this.outAdapter) {\n                this.outAdapter(reason && reason.message || '网络错误' + url);\n            }\n        })\n    }\n}","import { HttpStateMap } from \"./HttpState\";\n\nexport class Http {\n    public static readonly GET: string = \"get\";\n    public static readonly POST: string = \"post\";\n\n    private static readonly UNSENT: number = 0; // Client has been created. open() not called yet.\n    private static readonly OPENED: number = 1; // open() has been called.\n    private static readonly HEADERS_RECEIVED: number = 2; // send() has been called, and headers and status are available.\n    private static readonly LOADING: number = 3; // Downloading; responseText holds partial data.\n    private static readonly DONE: number = 4; // The operation is complete.\n\n\n    private xhr: XMLHttpRequest;\n    private _onComplete: Function;\n    private _onError: Function;\n    private method: string;\n    private target: any;\n    private data: any;\n    private url: string;\n\n    public constructor() {\n        try {\n            if (window[\"XMLHttpRequest\"]) {\n                this.xhr = new window[\"XMLHttpRequest\"]();\n            } else {\n                // @ts-ignore\n                this.xhr = new ActiveXObject(\"MSXML2.XMLHTTP\");\n            }\n            this.xhr.timeout = 3000;\n        } catch (e) {\n            console.error(\"Http create error\", e);\n        }\n    }\n\n    /**\n     * 打开连接\n     * @param {string} url 文件在服务器上的位置\n     * @param {string} method 请求的类型，GET 或 POST,默认GET\n     * @param data 数据，对象或字符\n     * @returns {Http}\n     */\n    public open(url: string, method: string = Http.GET, data?: any): Http {\n        this.method = method || \"get\";\n        if (this.method == \"get\" && data) {\n            url = this.spliceUrl(url, data);\n        }\n        this.url = url;\n        this.data = data;\n        this.xhr.open(method, url, true);\n        return this;\n    }\n\n    /**\n     * get方法\n     * @param {string} url 文件在服务器上的位置\n     * @param data 对象或字符\n     * @returns {Http}\n     */\n    public openGet(url: string, data?: any): Http {\n        this.open(url, Http.GET, data);\n        return this;\n    }\n\n    /**\n     * post方法\n     * @param {string} url 文件在服务器上的位置\n     * @param data 对象或字符\n     * @returns {Http}\n     */\n    public openPost(url: string, data?: any): Http {\n        this.open(url, Http.POST, data)\n        return this;\n    }\n\n    /**\n     * 返回的结果，包括错误\n     * @param {Function} callback\n     * @param target this指针\n     * @returns {Http}\n     */\n    public onComplete(callback: Function, target?: any): Http {\n        this.target = target;\n        this._onComplete = callback;\n        return this;\n    }\n\n    /**\n     * 错误回调\n     * @param {Function} callback\n     * @param target this指针\n     * @returns {Http}\n     */\n    public onError(callback: Function, target?: any): Http {\n        this.target = target;\n        this._onError = callback;\n        return this;\n    }\n\n    /**\n     * 将请求发送到服务器。\n     * @param data 可以是对象|字符,仅用于 POST 请求\n     */\n    public send(data?: any): void {\n        data = data || this.data;\n        if (typeof data === \"object\") {\n            try {\n                data = JSON.stringify(data);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n        this.xhr.onreadystatechange = this.onReadyStateChange.bind(this);\n        console.log(`body = ${data}`)\n        this.xhr.send(data);\n    }\n\n    /**\n     * 如果请求已经被发送,则立刻中止请求.\n     */\n    public abort(): void {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    /**\n     * 向请求添加 HTTP 头。\n     * @example {token:A1BC,name:guess}\n     * @param data 键值对形式都好分割\n     * @returns {Http}\n     */\n    public setRequestHeader(data?: any): Http {\n        try {\n            for (let key in data) {\n                this.xhr.setRequestHeader(key, data[key]);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n        return this;\n    }\n\n    /**\n     * 返回所有响应头信息(响应头名和值), 如果响应头还没接受,则返回\"\".\n     */\n    public getAllResponseHeaders(): string {\n        if (!this.xhr) {\n            return \"\";\n        }\n        let result: string = this.xhr.getAllResponseHeaders();\n        return result ? result : \"\";\n    }\n\n    public onDestroy(): void {\n        // TODO 清空其他数据\n        this.xhr = null;\n    }\n\n    private spliceUrl(url: string, data: any): string {\n        let dataStr: string = \"\";\n        for (let key in data) {\n            dataStr += key + \"=\" + data[key] + \"&\";\n        }\n        dataStr = dataStr.substr(0, dataStr.length - 1);\n        if (dataStr.length > 2) {\n            url += url.indexOf(\"?\") < 0 ? \"?\" + dataStr : url + dataStr;\n        }\n        return url;\n    }\n\n    private onReadyStateChange(): void {\n        let xhr = this.xhr;\n        if (xhr.readyState == 4) {\n            let ioError = xhr.status >= 400 || xhr.status == 0;\n            let url = this.url;\n            let self = this;\n            if (ioError) {\n                if (this._onError) {\n                    let response = null;\n                    if (this.xhr.response) {\n                        response = JSON.parse(this.xhr.response)\n                    }\n                    this._onError(this.xhr.status, HttpStateMap.instance.getErrorInfoById(this.xhr.status), response); // TODO 返回错误码对应的含义\n                    // this._onError(this.xhr.status, HttpStateMap.instance.getErrorInfoById(this.xhr.status)); //TODO 返回错误码对应的含义\n                }\n            } else {\n                if (this.xhr.readyState == Http.DONE) {\n                    if (this.xhr.status >= 200 && this.xhr.status < 400) {\n                        this._onComplete.call(this.target ? this.target : null, JSON.parse(this.xhr.response));\n                    } else {\n                        this._onComplete.call(this.target ? this.target : null, HttpStateMap.instance.getErrorInfoById(this.xhr.status) // 返回错误码对应的含义\n                        );\n                    }\n                }\n            }\n        }\n    }\n    private static stringifyPrimitive(v: any) {\n        switch (typeof v) {\n            case 'string':\n                return v\n            case 'boolean':\n                return v ? 'true' : 'false'\n            case 'number':\n                return isFinite(v) ? v : ''\n            default:\n                return ''\n        }\n    }\n\n    private static stringify(obj, sep?: string, eq?: string, name?: string) {\n        sep = sep || '&'\n        eq = eq || '='\n        if (obj === null) {\n            obj = undefined\n        }\n\n        if (typeof obj === 'object') {\n            return Object.keys(obj).map(function (k) {\n                let ks = encodeURIComponent(Http.stringifyPrimitive(k)) + eq\n                if (Array.isArray(obj[k])) {\n                    return obj[k].map(function (v) {\n                        return ks + encodeURIComponent(Http.stringifyPrimitive(v))\n                    }).join(sep)\n                } else {\n                    return ks + encodeURIComponent(Http.stringifyPrimitive(obj[k]))\n                }\n            }).join(sep)\n\n        }\n\n        if (!name) { return '' }\n        return encodeURIComponent(Http.stringifyPrimitive(name)) + eq +\n            encodeURIComponent(Http.stringifyPrimitive(obj))\n    };\n\n    public static getUrl(url: string, params?: any) {\n        let s = Http.stringify(params)\n        let sep = url.indexOf('?') > -1 ? '&' : '?'\n        return url + (s ? sep + s : '')\n    }\n}","\r\nimport BaseLoader from \"./BaseLoader\";\r\n\r\nexport class ImageLoader extends BaseLoader {\r\n\r\n    public loadNetRes(path: string, type: typeof cc.Asset | Record<string, any>, callback: (err: any, res: any) => void): void {\r\n        // 加载网络图片资源\r\n        cc.assetManager.loadRemote(path, type, (e, tex: cc.Texture2D) => {\r\n            if (e) {\r\n                cc.error(e);\r\n            }\r\n            if (callback) {\r\n                callback(e, new cc.SpriteFrame(tex));\r\n            }\r\n        });\r\n    }\r\n\r\n    public loadRemoteRes(path: string, type: any, callback: (err: any, res: any) => void): void {\r\n        // 加载远程待下载图片资源\r\n        cc.log(path, type, callback);\r\n        throw new Error(\"ImageLoader loadRemoteRes method not implemented.\");\r\n    }\r\n\r\n    public loadLocalRes(path: string, type: any, onProgress: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void, callback: (err: any, res: any) => void, bundle?: cc.AssetManager.Bundle): void {\r\n        if (bundle) {\r\n            bundle.load(path, type, onProgress, callback);\r\n        } else {\r\n            cc.resources.load(path, type, onProgress, callback);\r\n        }\r\n    }\r\n}\r\n","import IPlatform from \"./IPlatform\";\n\nexport default class IosAdapter implements IPlatform {\n    public packageName: string = \"CocosHelper\";\n    public isPrintLog: boolean = true;\n    public onGameExit(): void {\n        // console.log(`IosAdapter:onGameExit`)\n        // if (!ifGameExited()) {\n        //     this.callNative(\"InteractCourseResponder\", \"onGameExit\")\n        //     setGameExited(true);\n        // }\n    }\n    public onGameReady(): void {\n        // GameInfo.instance.hasCalledOnGameReady = true;\n        // this.callNative(\"InteractCourseResponder\", \"onGameReady\")\n        cc.log(`getWritablePath():${jsb.fileUtils.getWritablePath()}`)\n    }\n\n    public toast(message: string): void {\n        // jsb.reflection.callStaticMethod(\"CocosHelper\", \"test2WithParm1:andParm2:\", parm1, parm2);\n       jsb.reflection.callStaticMethod(this.packageName, `toast:`, message);\n    }\n\n    callFunction(funcName: string, parm: string, moduleName: string): void {\n        let packagePath = this.packageName;\n        if (moduleName && moduleName != '') {\n            packagePath = moduleName;\n        }\n        jsb.reflection.callStaticMethod(packagePath, `${funcName}:`, parm);\n    }\n\n    callFunctionResult(funcName: string, parm: string, moduleName: string): any {\n        let packagePath = this.packageName;\n        if (moduleName && moduleName != '') {\n            packagePath = moduleName;\n        }\n        let result = jsb.reflection.callStaticMethod(packagePath, `${funcName}:`, parm);\n        return result;\n    }\n}\n","\r\nimport BaseLoader from \"./BaseLoader\";\r\n\r\nexport class JsonLoader extends BaseLoader {\r\n\r\n    public loadNetRes(path: string, type: typeof cc.Asset | Record<string, any>, callback: (err: any, res: any) => void): void {\r\n        // 加载网络json资源\r\n        cc.assetManager.loadRemote(path, type, (e, res: cc.JsonAsset) => {\r\n            if (e) {\r\n                cc.error(e);\r\n            }\r\n            if (callback) {\r\n                callback(e, res);\r\n            }\r\n        });\r\n    }\r\n\r\n    public loadRemoteRes(path: string, type: any, callback: (err: any, res: any) => void): void {\r\n        // 加载远程待下载图片资源\r\n        cc.log(path, type, callback);\r\n        throw new Error(\"JsonLoader loadRemoteRes method not implemented.\");\r\n    }\r\n\r\n    public loadLocalRes(path: string, type: any, onProgress: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void, callback: (err: any, res: any) => void, bundle?: cc.AssetManager.Bundle): void {\r\n        if (bundle) {\r\n            bundle.load(path, type, onProgress, callback);\r\n        } else {\r\n            cc.resources.load(path, type, onProgress, callback);\r\n        }\r\n    }\r\n}\r\n","import { kit } from \"../../../../kit/kit\";\nimport Point from \"../../../../Scripts/common/Point\";\nimport Config from \"../config/config\";\nimport Events from \"../Events\";\nimport GrabFruit from \"../GrabFruit\";\nimport Level2State from \"./Level2Sate\";\n\n// 第一关\nexport default class Level1State implements kit.fsm.State<GrabFruit>{\n    private static readonly MIN_LENGTH: number = 0;\n    private static readonly CURRENT_LEVEL: number = 1;\n\n    public entity: GrabFruit;\n\n    private current: number = 0;\n    private times: number = 0;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    enter(data?: any): Promise<any> {\n        Point.instance.roundStart(1);\n        this.entity.bgsNode.x = Config.SCENE_WIDTH * Level1State.CURRENT_LEVEL;\n        kit.manager.Event.on(Events.GRAB_SUCCESS, this.onGrabComplete, this);\n        kit.manager.Event.on(Events.GAME_GUID_COMPLETE, this.onGuidComplete, this);\n        kit.manager.Event.on(Events.GRAB_ACTION_ON_COLLISION, this.onCollision, this);\n        kit.manager.Event.on(Events.FRUIT_DOWN_COMPLETE, this.onFruitDownComplete, this);\n        kit.manager.Event.on(Events.GRAB_ACTION_COMPLETE, this.onActionComplete, this);\n        return Promise.resolve();\n    }\n\n    execute(data?: any): void {\n    }\n\n    exit(data?: any): void {\n        \n        kit.manager.Event.off(Events.GRAB_SUCCESS, this.onGrabComplete, this);\n        kit.manager.Event.off(Events.GAME_GUID_COMPLETE, this.onGuidComplete, this);\n        kit.manager.Event.off(Events.GRAB_ACTION_ON_COLLISION, this.onCollision, this);\n        kit.manager.Event.off(Events.FRUIT_DOWN_COMPLETE, this.onFruitDownComplete, this);\n        kit.manager.Event.off(Events.GRAB_ACTION_COMPLETE, this.onActionComplete, this);\n        kit.system.timer.clearTimer(this.guidScale);\n    }\n\n    private onGrabComplete(event: any): void {\n        this.current += 1;\n        cc.log(`target count:${this.current}`)\n        kit.manager.Event.emit(Events.GAME_SCORE, { index: this.current, level: 1 });\n        if (this.current >= Config.LEVEL_TARGET_FRUIT_NUMBER) {\n            // 播放动作\n            kit.system.timer.doOnce(10, () => {\n                kit.manager.Event.emit(Events.GAME_STAGE_COMPLETE, { level: 1 });\n            }, this);\n            // 水果动画+副词学习\n\n            // 切场景\n            kit.system.timer.doOnce(3500, () => {\n                this.entity.stateMachine.ChangeState(Level2State);\n            }, this);\n        }\n    }\n\n    // 缩放引导\n    private guidScale(): void {\n        let list: cc.Node[] = this.entity.bgsNode.getChildByName(`scene${1}`).children;\n        list.forEach((element: cc.Node, index: number) => {\n            if (element.name.indexOf('mango') > -1) {\n                cc.tween(element).to(0.2, { scale: 0.5 }).to(0.2, { scale: 1 }).start();\n            }\n        })\n    }\n\n    private onGuidComplete(): void {\n        kit.system.timer.doLoop(5000, this.guidScale, this);\n    }\n\n    private onCollision(): void {\n        kit.manager.Audio.playEffect('mango');\n        this.entity.word.Init(this.entity.word.mango);\n    }\n\n    private onFruitDownComplete(): void {\n        this.entity.word.Init(this.entity.word.mangoes);\n        kit.manager.Audio.playEffect('mangoes', false, () => {\n            Point.instance.roundEnd(1, this.times);\n            kit.manager.Audio.playEffect('SE_zhuashuiguo04_ytz')\n        });\n    }\n\n    private onActionComplete(): void {\n        this.times += 1;\n    }\n}","import { kit } from \"../../../../kit/kit\";\nimport Point from \"../../../../Scripts/common/Point\";\nimport Config from \"../config/config\";\nimport Events from \"../Events\";\nimport GrabFruit from \"../GrabFruit\";\nimport Level3State from \"./Level3Sate\";\n\n// 第一关\nexport default class Level2State implements kit.fsm.State<GrabFruit>{\n    private static readonly MIN_LENGTH: number = 0;\n    private static readonly CURRENT_LEVEL: number = 2;\n\n    public entity: GrabFruit;\n\n    private current: number = 0;\n    private times: number = 0;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    enter(data?: any): Promise<any> {\n        Point.instance.roundStart(2);\n        cc.tween(this.entity.bgsNode).to(1, { x: 0 }).call(() => {\n\n        }).start();\n        kit.system.timer.doLoop(5000, this.guidScale, this);\n        kit.manager.Event.on(Events.GRAB_SUCCESS, this.onGrabComplete, this);\n        kit.manager.Event.on(Events.GRAB_ACTION_ON_COLLISION, this.onCollision, this);\n        kit.manager.Event.on(Events.FRUIT_DOWN_COMPLETE, this.onFruitDownComplete, this);\n        kit.manager.Event.on(Events.GRAB_ACTION_COMPLETE, this.onActionComplete, this);\n        return Promise.resolve();\n    }\n\n    execute(data?: any): void {\n    }\n\n    exit(data?: any): void {\n       \n        kit.system.timer.clearTimer(this.guidScale);\n        kit.manager.Event.off(Events.GRAB_SUCCESS, this.onGrabComplete, this);\n        kit.manager.Event.off(Events.GRAB_ACTION_ON_COLLISION, this.onCollision, this);\n        kit.manager.Event.off(Events.FRUIT_DOWN_COMPLETE, this.onFruitDownComplete, this);\n        kit.manager.Event.off(Events.GRAB_ACTION_COMPLETE, this.onActionComplete, this);\n    }\n\n    private onGrabComplete(event: any): void {\n        this.current += 1;\n        cc.log(`target count:${this.current}`)\n        kit.manager.Event.emit(Events.GAME_SCORE, { index: this.current, level: 2 });\n        if (this.current >= Config.LEVEL_TARGET_FRUIT_NUMBER) {\n            kit.manager.Event.emit(Events.SCENE_CHANGE, { level: 3 });\n            kit.system.timer.doOnce(3500, () => {\n                this.entity.stateMachine.ChangeState(Level3State);\n            })\n            kit.system.timer.doOnce(10, () => {\n                kit.manager.Event.emit(Events.GAME_STAGE_COMPLETE, { level: 2 });\n            }, this)\n        }\n    }\n    // 缩放引导\n    private guidScale(): void {\n        let list: cc.Node[] = this.entity.bgsNode.getChildByName(`scene${2}`).children;\n        list.forEach((element: cc.Node, index: number) => {\n            if (element.name.indexOf('banans') > -1) {\n                // cc.log('element.name', element.name)\n                cc.tween(element).to(0.2, { scale: 0.5 }).to(0.2, { scale: 1 }).start();\n            }\n        })\n    }\n    private onCollision(): void {\n        this.entity.word.Init(this.entity.word.banana);\n        kit.manager.Audio.playEffect('banana');\n    }\n\n    private onFruitDownComplete():void{\n        this.entity.word.Init(this.entity.word.bananas);\n        kit.manager.Audio.playEffect('bananas',false,()=>{\n            Point.instance.roundEnd(2, this.times);\n            kit.manager.Audio.playEffect('SE_zhuashuiguo04_ytz')\n        });\n    }\n\n    private onActionComplete(): void {\n        this.times += 1;\n    }\n}","import { kit } from \"../../../../kit/kit\";\nimport Point from \"../../../../Scripts/common/Point\";\nimport Config from \"../config/config\";\nimport Events from \"../Events\";\nimport GrabFruit from \"../GrabFruit\";\n\n// 第一关\nexport default class Level3State implements kit.fsm.State<GrabFruit>{\n    private static readonly MIN_LENGTH: number = 0;\n    private static readonly CURRENT_LEVEL: number = 2;\n    private static readonly MONSTER_IN: string = 'L2_W0_day1_1_monster_in';\n    private static readonly MONSTER_OUT: string = 'L2_W0_day1_1_monster_out';\n    private static readonly MONSTER_OUT2: string = 'L2_W0_day1_1_monster_out2';\n    private static readonly MONSTER_DILE: string = 'L2_W0_day1_1_monster_daiji';\n\n    public entity: GrabFruit;\n\n    private current: number = 0;\n    private times: number = 0;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    enter(data?: any): Promise<any> {\n        Point.instance.roundStart(3);\n        cc.tween(this.entity.bgsNode).to(1, { x: -Config.SCENE_WIDTH }).call(() => {\n\n        }).start();\n        kit.system.timer.doLoop(5000, this.guidScale, this);\n        kit.manager.Event.on(Events.GRAB_SUCCESS, this.onGrabComplete, this);\n        kit.manager.Event.on(Events.GRAB_ACTION_ON_COLLISION, this.onCollision, this);\n        kit.manager.Event.on(Events.FRUIT_DOWN_COMPLETE, this.onFruitDownComplete, this);\n        kit.manager.Event.on(Events.GRAB_ACTION_COMPLETE, this.onActionComplete, this);\n\n        return Promise.resolve();\n    }\n\n    execute(data?: any): void {\n    }\n\n    exit(data?: any): void {\n        kit.system.timer.clearTimer(this.guidScale);\n        kit.manager.Event.off(Events.GRAB_SUCCESS, this.onGrabComplete, this);\n        kit.manager.Event.off(Events.GRAB_ACTION_ON_COLLISION, this.onCollision, this);\n        kit.manager.Event.off(Events.FRUIT_DOWN_COMPLETE, this.onFruitDownComplete, this);\n        kit.manager.Event.off(Events.GRAB_ACTION_COMPLETE, this.onActionComplete, this);\n\n    }\n\n    private onGrabComplete(event: any): void {\n        this.current += 1;\n        cc.log(`target count:${this.current}`)\n        kit.manager.Event.emit(Events.GAME_SCORE, { index: this.current, level: 3 });\n        if (this.current >= Config.LEVEL_TARGET_FRUIT_NUMBER) {\n            // 完成游戏\n            Point.instance.roundEnd(3, this.times);\n            Point.instance.gameEnd();\n            kit.manager.Event.emit(Events.SCENE_CHANGE, { level: 3 });\n            kit.system.timer.clearTimer(this.guidScale);\n            this.palyMonsterAnimation();\n            kit.manager.Event.emit(Events.GAME_STAGE_COMPLETE, { level: 3 });\n            kit.system.timer.doOnce(1000, () => {\n                kit.manager.Event.emit(Events.GAME_COMPLETE);\n            })\n        }\n    }\n\n    // 怪兽动画\n    private palyMonsterAnimation(): void {\n        let sp: sp.Skeleton = this.entity.monsterNode.getComponent<sp.Skeleton>('sp.Skeleton');\n        kit.system.timer.doOnce(1500, () => {\n            kit.manager.Audio.playEffect('SE_zhuashuiguo06_ytz');\n            sp.setAnimation(0, Level3State.MONSTER_IN, false);\n            sp.setCompleteListener(() => {\n                sp.setAnimation(0, Level3State.MONSTER_DILE, false);\n                sp.setCompleteListener(() => {\n                    sp.setAnimation(0, Level3State.MONSTER_OUT, false);\n                    sp.setCompleteListener(null);\n                })\n            })\n        })\n    }\n    // 缩放引导\n    private guidScale(): void {\n        let list: cc.Node[] = this.entity.bgsNode.getChildByName(`scene${3}`).children;\n        list.forEach((element: cc.Node, index: number) => {\n            if (element.name.indexOf('coco') > -1) {\n                // cc.log('element.name', element.name)\n                cc.tween(element).to(0.2, { scale: 0.5 }).to(0.2, { scale: 1 }).start();\n            }\n        })\n    }\n    private onCollision(): void {\n        this.entity.word.Init(this.entity.word.coconut);\n        kit.manager.Audio.playEffect('coconut');\n    }\n\n    private onFruitDownComplete(): void {\n        this.entity.word.Init(this.entity.word.coconuts);\n        kit.manager.Audio.playEffect('coconuts', false, () => {\n            kit.manager.Audio.playEffect('SE_zhuashuiguo04_ytz')\n        });\n    }\n\n    private onActionComplete(): void {\n        this.times += 1;\n    }\n}","import { kit } from \"../../../../kit/kit\";\nimport GrabFruit from \"../GrabFruit\";\n\n// 第一关\nexport default class LevelGlobalState implements kit.fsm.State<GrabFruit>{\n    public entity: GrabFruit;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    enter(data?: any): Promise<any> {\n        let delay: number = 9000 + Math.random() * 14000;\n        cc.log('delay', delay)\n        setTimeout(() => {\n            this.egg();\n        }, delay);\n        return Promise.resolve();\n    }\n\n    execute(data?: any): void {\n    }\n\n    exit(data?: any): void {\n        kit.system.timer.clearTimer(this.egg);\n    }\n\n    private egg(): void {\n        if (this.entity.birdNode) {\n            this.entity.birdNode.x = 1000;\n            cc.tween(this.entity.birdNode).to(9, { x: -1000 }).start();\n            let delay: number = 9000 + Math.random() * 14000;\n            cc.log('delay', delay)\n            setTimeout(() => {\n                this.egg();\n            }, delay);\n        }\n    }\n}","/**\n * 节点类型\n */\nexport class LinkedNode<N> {\n    /** 元素对象本身的值 */\n    public element: N = null;\n    /** 指向前一项 */\n    public previous: LinkedNode<N> = null;\n    /** 指向下一项 */\n    public next: LinkedNode<N>;\n    constructor(element: N) {\n        this.element = element;\n    }\n}\n\n/**\n * 双向链表\n */\nexport default class LinkedList<T> {\n    /** 将数组转化为链表 */\n    public static from<L>(array: L[]) {\n        const { length } = array;\n        const linkedList = new LinkedList(array.shift());\n        linkedList.length = length;\n        array.reduce((previous, current) => {\n            previous.next = new LinkedNode(current);\n            previous.next.previous = previous;\n            return previous.next;\n        }, linkedList.head);\n        return linkedList\n    }\n    /** 头节点 */\n    public head: LinkedNode<T>;\n    /** 链表的长度 */\n    public length: number = 0;\n    constructor(element: T) {\n        this.head = new LinkedNode(element);\n        this.head.next = this.head;\n        this.head.previous = this.head;\n        this.length = 1;\n    }\n\n    /**\n     * @description 用于寻找符合条件的节点，回调函数返回为 true 时，返回对应节点\n     * @param cb 用于寻找的回调函数\n     */\n    public find(cb: (element: LinkedNode<T>) => boolean) {\n        let i;\n        let currentNode = this.head;\n        for (i = 0; i < this.length; i++) {\n            if (cb.call(this, currentNode)) { break; }\n            currentNode = currentNode.next;\n        }\n        return i !== this.length ? currentNode : null;\n    }\n\n\n    /**\n     * @description 在指定节点插入元素\n     * @param newElement 插入元素\n     * @param node 被插入节点\n     */\n    public insert(newElement: T, node: LinkedNode<T>) {\n        const newNode = new LinkedNode(newElement);\n        const previousNode = this.find((n) => n === node);\n        if (previousNode) {\n            const rawNextNode = previousNode.next;\n            previousNode.next = newNode;\n            newNode.previous = previousNode;\n            newNode.next = rawNextNode;\n            rawNextNode.previous = newNode;\n            this.length++;\n        }\n    }\n\n    /**\n     * 删除指定的节点\n     * @param node 要删除的节点\n     */\n    public remove(node: LinkedNode<T>) {\n        const deletedNode = this.find((n) => n === node);\n        if (deletedNode) {\n            if (this.head === deletedNode) {\n                this.head = deletedNode.next;\n            }\n            deletedNode.previous.next = deletedNode.next;\n            deletedNode.next.previous = deletedNode.previous;\n            this.length--;\n        }\n    }\n}","\r\nexport class LoaderObserverParam {\r\n    public url: string;\r\n    public type: typeof cc.Asset;\r\n    public bundle: cc.AssetManager.Bundle;\r\n    public time: number;\r\n    public options: any;\r\n\r\n    public constructor (url: string, type: typeof cc.Asset, bundle: cc.AssetManager.Bundle, time: number, options: any) {\r\n        this.url = url;\r\n        this.type = type;\r\n        this.bundle = bundle;\r\n        this.time = time;\r\n        this.options = options;\r\n    }\r\n}\r\n\r\nexport interface LoaderObserver {\r\n    /**\r\n     * 资源开始加载之前\r\n     * @param {string} url 资源地址\r\n     * @param {cc.Asset} type 资源类型\r\n     */\r\n    beforeLoadRes(param: LoaderObserverParam): void;\r\n\r\n    /**\r\n     * 资源开始加载之前\r\n     * @param {string} url 资源地址\r\n     * @param {cc.Asset} type 资源类型\r\n     * @param {number} time 资源加载时间\r\n     */\r\n    afterLoadRes(param: LoaderObserverParam): void;\r\n\r\n    /**\r\n     * bundle开始加载之前\r\n     * @param {string} url 资源地址\r\n     * @param {cc.Asset} type 资源类型\r\n     */\r\n    beforeLoadBundle(param: LoaderObserverParam): void;\r\n\r\n    /**\r\n     * bundle开始加载之前\r\n     * @param {string} url 资源地址\r\n     * @param {cc.Asset} type 资源类型\r\n     * @param {number} time 资源加载时间\r\n     */\r\n    afterLoadBundle(param: LoaderObserverParam): void;\r\n}","/**\n * 本地存储\n * @version 1.0\n */\nexport class LocalStorageUtils {\n  /**\n   * 移除本地存储\n   * @param {string} key - 要移除的item的索引\n   */\n  public static removeItem(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  /**\n   * 存储Object数据\n   * @param {string} key - 索引\n   * @param {object} value - 内容\n   */\n  public static setObject(key: string, value: any) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  /**\n   * 获取Object数据\n   * @param {string} key - 索引\n   * @returns {object} - 内容\n   */\n  public static getObject(key: string): any {\n    let obj = localStorage.getItem(key);\n    if (obj == \"\") {\n      return null;\n    }\n    return JSON.parse(obj);\n  }\n\n  /**\n   * 存储Bool数据\n   * @param {string} key - 索引\n   * @param {boolean} value - 内容\n   */\n  public static setBool(key: string, value: boolean) {\n    localStorage.setItem(key, value.toString());\n  }\n\n  /**\n   * 获取Bool数据\n   * @param {string} key - 索引\n   * @returns {boolean} - 内容\n   */\n  public static getBool(key: string): boolean {\n    return localStorage.getItem(key) == \"true\" ? true : false;\n  }\n\n  /**\n   * 存储Int数据\n   * @param {string} key - 索引\n   * @param {number} value - 内容\n   */\n  public static setInt(key: string, value: number) {\n    localStorage.setItem(key, value.toString());\n  }\n\n  /**\n   * 获取Int数据\n   * @param {string} key - 索引\n   * @returns {number} - 内容\n   */\n  public static getInt(key: string): number {\n    return Number(localStorage.getItem(key));\n  }\n\n  /**\n   * 存储String数据\n   * @param {string} key - 索引\n   * @param {string} value - 内容\n   */\n  public static setString(key: string, value: string) {\n    localStorage.setItem(key, value);\n  }\n\n  /**\n   * 获取String数据\n   * @param {string} key - 索引\n   * @returns {string} - 内容\n   */\n  public static getString(key: string): string {\n    return localStorage.getItem(key);\n  }\n}\n","import { kit } from \"../../kit\";\nimport ASystem from \"../interface/ASystem\";\n\n/**\n * 日志系统\n * 设计目标主要是作为程序运行的日志，可以输出是控制台或者app本地，当遇到出现问题且没有报错的时候，排查问题的依据\n */\nexport default class LogSystem extends ASystem {\n    private static _instance: LogSystem;\n\n    public isDebug: boolean = true;\n    private gameName: string = \"\";\n    private gameVersion: string = \"\";\n    private outAdapter: Function;\n    private isPrintTime: boolean = false;\n\n    public static get instance(): LogSystem {\n        if (LogSystem._instance == null) {\n            LogSystem._instance = new LogSystem();\n        }\n        return LogSystem._instance;\n    }\n\n    /**\n     * 初始化日志系统\n     * @param {(message: string) => void} [outAdapter] 日志信息输出适配器，输出的字符串已json格式化\n     * @param {string} [gameName] 游戏名称\n     * @param {string} [gameVersion] 游戏版本\n     * @returns {Promise<any>}\n     * @memberof LogSystem\n     */\n    public init(outAdapter?: (message: string) => void, gameName?: string, gameVersion?: string, isPrintTime: boolean = false): Promise<void> {\n        return new Promise((res, rea) => {\n            this.gameName = gameName || \"\";\n            this.gameVersion = gameVersion || \"\";\n            this.outAdapter = outAdapter;\n            this.isPrintTime = isPrintTime;\n            res();\n        })\n    }\n\n    public release(): void {\n        this.outAdapter = null;\n        LogSystem._instance = null;\n    }\n\n    private print(type: string, messages: any): void {\n        // TODO 正式环境关闭复杂日志显示\n        let gameName: string = this.gameName ? \"[\" + this.gameName + \"]\" : '';\n        let gameVersion: string = this.gameName ? \"[\" + this.gameVersion + \"]\" : '';\n        console[type](new Date().toLocaleString() + \" \" + type + \" \" + gameName + \" \" + gameVersion + \"\\t\", messages);\n        if (this && this.outAdapter) {\n            this.outAdapter(new Date().toLocaleString() + type + \" \" + gameName + \" \" + gameVersion + \"\\t\", messages);\n        }\n    }\n\n    private obj2String(messages: any): string {\n        let str = \"\";\n        messages.forEach((element) => {\n            if (typeof messages == \"object\") {\n                str += JSON.stringify(element);\n            } else {\n                str += element;\n            }\n        })\n        return str;\n    }\n\n    public static error(messages): void {\n        kit.system.log.print(\"error\", messages);\n    }\n\n    public static warn(messages): void {\n        kit.system.log.print(\"warn\", messages);\n    }\n\n    /**\n     * 仅debug模式输出log\n     * @static\n     * @param {*} messages\n     * @memberof LogSystem\n     */\n    public static log(messages): void {\n        if (kit.system.log.isDebug) {\n            kit.system.log.print(\"log\", messages);\n        }\n    }\n\n    public static info(messages): void {\n        kit.system.log.print(\"info\", messages);\n    }\n}\n\n// /** 日志序列化组件，存于本地的日志缓存逻辑模块 */\n// export class LogSerializer {\n//     private static _instance: LogSerializer;\n\n//     public static get instanceOrigin(): LogSerializer {\n//         return LogSerializer._instance;\n//     }\n//     public static get instance(): LogSerializer {\n//         if (LogSerializer._instance == null) {\n//             LogSerializer._instance = new LogSerializer();\n//         }\n//         return LogSerializer._instance;\n//     }\n\n//     /** 日志缓存最大条数，超过条数后，最开始的日志将会被抹除 */\n//     public maxLogCount: number = 500;\n//     /** 日志清理结点，当然日志量达到最maxLogCount的一定倍率时，清空到maxLogCount */\n//     public logClearRate: number = 1.8;\n//     /** 日志数组 */\n//     private m_logArray: string[] = [];\n//     /** 日志文件路径 */\n//     private m_logFilePath: string = \"\";\n//     /** 工作状态 */\n//     private m_working: boolean = false;\n//     /**开始记录日志 */\n//     public static getLogFilePath() {\n//         if (cc.sys.isBrowser) {\n//             return \"\";\n//         }\n//         return OSPathManager.cocosPath + \"ccc_runtime_log.txt\"\n//     }\n//     public begin() {\n\n//         if (cc.sys.isBrowser) return;\n//         if (!cc.sys.isNative) {\n//             console.log(`LogSerializer error call begin in not native env.`)\n//             return;\n//         }\n\n//         if (this.m_working) {\n//             console.log(`LogSerializer call begin, but already working.`)\n//             return;\n//         }\n\n//         this.m_working = true;\n\n//         if (!this.m_logArray) {\n//             this.m_logArray = [];\n//         }\n\n//         this.m_logFilePath = LogSerializer.getLogFilePath();\n\n\n//         if (this.m_logFilePath) {\n//             console.log(`LogSerializer begin logfilepath is ${this.m_logFilePath}`)\n//             if (jsb.fileUtils.isFileExist(this.m_logFilePath)) {\n//                 // 认为，已经存储的日志一定是更旧的，因为当前代码处理运行时\n//                 let existLogs: string = jsb.fileUtils.getStringFromFile(this.m_logFilePath);\n//                 if (existLogs) {\n\n//                     // console.log(`LogSerializer begin append content ${existLogs}`)\n//                     this.m_logArray = existLogs.split(\"\\n\").concat(this.m_logArray);\n//                 }\n//             }\n//         }\n//     }\n//     /** 停止记录日志 */\n//     public end() {\n//         if (cc.sys.isBrowser) return;\n//         if (!cc.sys.isNative) {\n//             console.log(`LogSerializer error call end in not native env.`)\n//             return;\n//         }\n\n//         if (!this.m_working) {\n//             // 未调用 begin的情况\n//             this.begin();\n//         }\n\n//         this.flush();\n\n//         this.m_logArray = null;\n//         this.m_working = false;\n//     }\n\n//     public flush() {\n//         if (this.m_logFilePath) {\n//             let target_arr = this.m_logArray;\n//             if (target_arr.length > 0) {\n//                 if (this.m_logArray.length > this.maxLogCount) {\n//                     target_arr = this.m_logArray.slice(this.m_logArray.length - this.maxLogCount, this.m_logArray.length);\n//                 }\n//                 // console.log(`LogSerializer end write to ${this.m_logFilePath} with content ${target_arr.join(\"\\n\")}`)\n//                 jsb.fileUtils.writeStringToFile(target_arr.join(\"\\n\"), this.m_logFilePath);\n//                 // this.m_logArray.splice(0, this.m_logArray.length);\n//             }\n//         }\n//     }\n//     /** 输出一条log */\n//     public log(headStr: string, bodyStr?: string | any): void {\n//         if(!this.m_logArray) {\n//             console.log(`LogSerializer log already released.`)\n//             return;\n//         }\n//         let log_content: string = headStr + \" \" + safeStringify(bodyStr);\n//         // console.log(`LogSerializer add log ${log_content}`)\n//         this.m_logArray.push(log_content);\n//         if (this.m_logArray.length >= this.maxLogCount * this.logClearRate) {\n//             this.m_logArray.splice(0, this.m_logArray.length - this.maxLogCount);\n//         }\n\n//         this.flush();\n//     }\n\n//     public getOutAdapter(): Function {\n//         // 获取输出适配器时，开启日志打印模块\n//         this.begin();\n//         return this.log.bind(this);\n//     }\n\n//     public static reportLocalLogToServer() {\n//         let logFilePath: string = LogSerializer.getLogFilePath();\n//         if (cc.sys.isBrowser) {\n//             console.log(`LogSerializer reportLocalLogToServer error not native`);\n//             return;\n//         }\n//         if (jsb.fileUtils && jsb.fileUtils.isFileExist(logFilePath)) {\n//             let existLogs: string = jsb.fileUtils.getStringFromFile(logFilePath);\n//             if (existLogs) {\n//                 // test open send\n//                 SendLog.forceSend = true;\n//                 SendLog.sendBIPoint(LOG_TYPE_ENUM.RUNTIME_LOG, existLogs);\n//             }\n//         }\n//         else {\n//             console.log(`LogSerializer reportLocalLogToServer error log file not exist ${logFilePath}`)\n//         }\n//     }\n// }","const { ccclass, property } = cc._decorator;\nimport Tigo from \"../base/TigoManager\"\nimport GameData from \"./GameData\"\nimport Util from \"./Util\";\n@ccclass\nexport default class Main extends cc.Component {\n\n    @property(cc.Prefab)\n    menuPre: cc.Prefab = null;\n\n    menuItem: cc.Node = null;\n\n    node_nowShow: cc.Node = null;\n    page_num = 0\n    Lesson_Sign = \"L1W1D5Fun\"\n    page = \"page\"\n    star = \"star\"\n    record_num = \"record_num\"\n\n    isSecgame = 0;//新加属性 用于判断是否已经玩过最后一个游戏了\n    secKey = \"seckey\";\n\n    onLoad() {\n        let page = this.Lesson_Sign + this.page\n        let star = this.Lesson_Sign + this.star\n        let record_num = this.Lesson_Sign + this.record_num\n\n        //重连后获取开口数 \n        GameData.record_num = Tigo.callAppToStorage(\"GET\", record_num) || 0;\n\n        //获得金币数量\n        let num = Tigo.callAppToStorage(\"GET\", star) || 0;\n        //本地设置金币数量\n        GameData.setStarNum(num);\n        console.log(\"当前游戏开口数===========》\" + GameData.record_num);\n\n        //获取游戏进度\n        this.page_num = Tigo.callAppToStorage(\"GET\", page) || this.page_num\n        console.log(\"当前游戏页数============》\" + this.page_num);\n        //获取通关tag,用于menu\n        let sgk = this.Lesson_Sign + this.secKey;\n        this.isSecgame = Tigo.callAppToStorage(\"GET\", sgk) || 0;\n        console.log(\"游戏 isSec ===\" + this.isSecgame);\n        if (Tigo.callAppToStorage(\"GET\", sgk)) {\n            console.log(\"callAppToStorage sgk issecgame 有数据\");\n        }\n\n        //通知app加载完成\n        Tigo.callAppToLoaded();\n\n       // this.openGame(0);\n        // this.openMenu(); //新加入的 先进入game menu 方法\n        this.registerListener();\n\n        cc.game.on(cc.game.EVENT_HIDE, function () {\n            console.log(\"游戏进入了后台~~~~~~~~\");\n            cc.audioEngine.pauseMusic();\n            cc.audioEngine.pauseAllEffects();\n            cc.game.pause();\n        });\n\n        cc.game.on(cc.game.EVENT_SHOW, function () {\n            console.log(\"重新回到了游戏~~~~~~~~\");\n            cc.audioEngine.resumeMusic();\n            cc.audioEngine.resumeAllEffects();\n            cc.game.resume();\n        });\n    }\n\n    start() {\n\n    }\n\n    registerListener() {\n        // webframe.Notify.listen(\"chagePage\", this.chagePage, this, false);\n        window.webframe.Notify.listen(\"entryMenu\", this.entryMenu, this, false);\n    }\n\n    entryMenu(endtag) {//游戏结束时调用的 打开menu 方法\n        this.page_num++;\n        if (this.page_num >= GameData.node_path.length - 1) {\n            Tigo.callAppToSpeed();\n        }\n        console.log(\"this.page_num ===\" + this.page_num);\n        console.log(\"GameData.node_path.length ===\" + GameData.node_path.length);\n        if (this.page_num >= GameData.node_path.length) {\n            let sgk = this.Lesson_Sign + this.secKey;\n            Tigo.callAppToStorage(\"PUT\", sgk, 1); //玩过最后一个游戏了\n            this.isSecgame = 1;\n            if (endtag) {\n                console.log('into all game end ani');\n                this.gameAllend();\n                return;\n            }\n            this.page_num = GameData.node_path.length - 1;\n        }\n        ////////////////////////////////////////////////\n        //之前的chagepage时要设置的 属性\n        let page = this.Lesson_Sign + this.page\n        let star = this.Lesson_Sign + this.star\n        let record_num = this.Lesson_Sign + this.record_num;\n        Tigo.callAppToStorage(\"PUT\", page, this.page_num);\n        Tigo.callAppToStorage(\"PUT\", star, GameData.totalStar_num);\n        Tigo.callAppToStorage(\"PUT\", record_num, Number(GameData.record_num));\n        ////////////////////////////////////////////////\n\n        if (this.node_nowShow) {\n            Util.voiceNode = null;\n            this.node_nowShow.destroy()\n        }\n        cc.audioEngine.stopAllEffects();\n\n        this.openMenu(true);\n    }\n\n    openMenu(isGoon: boolean = false) {\n        this.menuItem = cc.instantiate(this.menuPre);\n        this.node.addChild(this.menuItem);\n        this.menuItem.getComponent('gameMenu').initMenu(this.page_num, this.isSecgame, isGoon, this);\n    }\n\n    openGame(gid) {//由菜单点击 进入游戏\n        console.log('into openGame')\n        this.menuItem && this.menuItem.destroy(); //销毁menu\n        this.loadPage(gid); //调用已有laodpage 方法\n    }\n\n    gameAllend() {//先前chagepage中的数据\n        let star = this.Lesson_Sign + this.star;\n        console.log(\"本部分一共获得金币 === \" + GameData.totalStar_num)\n        console.log(\"本部分一共开口 === \" + GameData.record_num + \"次\");\n        Tigo.callAppToHttp(\"POST\", GameData.totalStar_num, GameData.record_num);\n        Tigo.callAppToStorage(\"remove\", star);\n        Tigo.callAppToClose(\"replayOrNext\", true);\n    }\n\n    loadPage(page_num) {\n        console.log(\"当前加载的游戏页数--------------->\" + page_num)\n        let nameProfab_str = \"prefabs/\" + GameData.getNodePath(page_num)\n        cc.loader.loadRes(nameProfab_str, (err, prefab) => {\n            if (!err) {\n                this.addPrefab(prefab);\n            } else {\n                console.log(err, \"err 预制体加载失败==========>\");\n            }\n        })\n    }\n\n    addPrefab(prefab) {\n        if (this.node_nowShow) {\n            Util.voiceNode = null;\n            this.node_nowShow.destroy()\n        }\n        cc.audioEngine.stopAllEffects();\n        this.node_nowShow = cc.instantiate(prefab);\n        if (this.page_num != 0) {\n            this.node_nowShow.opacity = 100\n            cc.tween(this.node_nowShow)\n                .to(1, { opacity: 255 })\n                .start()\n        }\n        this.node.addChild(this.node_nowShow);\n\n        if (this.node.getChildByName(\"coin\")) {\n            this.node.getChildByName(\"coin\").destroy()\n        }\n    }\n\n    onDestroy() {\n        this.unRegisterListener();\n    }\n\n    unRegisterListener() {\n        // webframe.Notify.ignore(\"chagePage\", this.chagePage, this, false);\n        window.webframe.Notify.ignore(\"entryMenu\", this.entryMenu, this, false);\n    }\n}\n\nwindow.addEventListener(\"message\", function (e) {\n\n    console.log(\"get app data === \", e.data);\n    if (e.data.action) {\n        window[\"callCocos\"](e.data);\n    }\n}, false);","/** 消息体基类 */\nexport class MessageBase {\n    messageApi: string;\n    param: any;\n    showTips: boolean = true; // 请求发生错误是否弹窗\n    debugData: any; // 本地数据模拟\n}","import Telegram from \"./Telegram\";\nimport IEntity from \"../entity/IEntity\";\nimport EntityManager from \"../entity/EntityManager\";\n\n/**\n * 实体消息派发器\n * @author \n */\nexport class MessageDispatcher {\n    private static _instance: MessageDispatcher;\n    private SEND_MSG_IMMEDIATELY: number = 0;\n    private NO_ADDITIONAL_INFO: number = 0;\n    private PriorityQ: TreeSet<Telegram>;\n    private showList: Telegram[];\n\n    public constructor() {\n        this.PriorityQ = new TreeSet<Telegram>((a, b) => { return a - b });\n        this.showList = new Array<Telegram>();\n    }\n\n    public static get instance(): MessageDispatcher {\n        if (this._instance == null) {\n            this._instance = new MessageDispatcher();\n        }\n        return this._instance;\n    }\n\n    /**\n     * 设置用作延迟消息的容器由于自动分类和避免的好处重复的。\n     * 消息按他们的调度时间进行排序。\n     */\n\n\n    /**\n     * 这种方法是通过向窗口发送消息或dispatchdelayedmessages利用。\n     * 此方法调用接收的消息处理成员函数实体，空，与新创建的电报\n     */\n    public Discharge(pReceiver: IEntity, telegram: Telegram): void {\n        this.showList.push(telegram);\n        if (!pReceiver.stateMachine.HandleMessage(telegram)) {\n            // console.log(\"消息被处理,Receiver：\" + EntityManager.instance.GetEntityFromID(telegram.Receiver).property.name);\n        }\n    }\n\n    public get showListData(): Telegram[] {\n        return this.showList;\n    }\n\n    /**\n     * send a message to another agent. Receiving agent is referenced by ID.\n     * 发送消息到另一个代理。接收代理是由身份证引用。\n     */\n    public DispatchMessage(sender: string, receiver: string, msg: number, info: any = null, delay: number = 0): void {\n        //        View.instance.addText(BACKGROUND_RED | FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE);\n        let pSender: IEntity = EntityManager.instance.getEntityFromID(sender);\n        let pReceiver: IEntity = EntityManager.instance.getEntityFromID(receiver);\n        if (pReceiver == null) {\n            console.warn(\"\\nWarning! No Receiver with ID of \" + receiver + \" found\");\n            return;\n        }\n        // create the telegram\n        let telegram: Telegram = new Telegram(0, sender, receiver, msg, info);\n        // if there is no delay, route telegram immediately\n        if (delay <= 0.0) {\n            this.Discharge(pReceiver, telegram);\n        } else {\n            telegram.DispatchTime = Date.now();\n            this.PriorityQ.add(telegram);\n        }\n    }\n\n    /**\n     * 发送任何延迟的消息。这种方法被称为每一次通过\n     * 主游戏循环。\n     */\n    public DispatchDelayedMessages(): void {\n        while ((!this.PriorityQ.isEmpty) && (this.PriorityQ.first.DispatchTime <= Date.now()) && (this.PriorityQ.first.DispatchTime > 0)) {\n            let telegram: Telegram = this.PriorityQ.first;\n            let pReceiver: IEntity = EntityManager.instance.getEntityFromID(telegram.Receiver);\n\n            this.Discharge(pReceiver, telegram);\n            this.PriorityQ.remove(this.PriorityQ.first);\n        }\n    }\n\n    public DispatchSimpleMessage(sender: IEntity, receiver: IEntity): void {\n        let pSender: IEntity = sender;\n        let pReceiver: IEntity = receiver;\n        if (pReceiver == null) {\n            console.warn(\"\\nWarning! No Receiver with ID of \" + receiver + \" found\");\n            return;\n        }\n        let telegram: Telegram = new Telegram(0, pSender.sid, receiver.sid, 0, null);\n        this.Discharge(pReceiver, telegram);\n\n    }\n}\n\n// 简单版TreeSet\nexport class TreeSet<K> extends Set {\n    public first: K;\n\n    private sortFun: Function;\n\n    constructor(sort: Function) {\n        super();\n        this.sortFun = sort;\n    }\n\n    public add(data: K): any {\n        return super.add(data);\n    }\n\n    public remove(data: K): boolean {\n        return this.delete(data);\n    }\n\n    public get isEmpty(): boolean {\n        return this.size === 0;\n    }\n\n}","/**\n * \n */\nexport class MessageType {\n\tpublic constructor() {\n\t}\n}\n","import { MessageBase } from \"./MessageBase\";\nimport NetHelper from \"./NetHelper\";\nconst {ccclass} = cc._decorator;\n\n/**\n * model基类\n */\n@ccclass\nexport default class ModelBase {\n\n    private cbMap: Map<string, (msg) => void> = new Map();\n\n    /** 子类重写 */\n    public init() {\n\n    }\n\n    public sendMessage (message: MessageBase) {\n        this.regiestReponse(message);\n        NetHelper.sendMessage(message);\n    }\n\n    public sendMessageWithOutToken (message: MessageBase) {\n        this.regiestReponse(message);\n        NetHelper.sendMessageWithOutToken(message);\n    }\n\n    public registerCallBack(messageBase: MessageBase, callBack: (msg) => void) {\n        this.cbMap.set(messageBase.messageApi, callBack);\n    }\n\n    private regiestReponse (message: MessageBase) {\n        NetHelper.registCb(message.messageApi, this.responseMessage.bind(this));\n    }\n\n    public responseMessage(api: string, msg: any) {\n        let cb = this.cbMap.get(api);\n        if (cb) {\n            cb(msg);\n        }\n    }\n\n    public clear () {\n        this.cbMap = new Map();\n    }\n}\n","import { LocalStorageUtils } from \"../utils/LocalStorageUtils\";\nimport ModelBase from \"./ModelBase\";\nimport NativeInfo from \"./NativeInfo\";\nimport NetHelper from \"./NetHelper\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ModelManager {\n    /** 测试token */\n    public static readonly testToken = \"\";\n    /** 测试phoneInfo */\n    public static readonly testPhoneInfo = \"\";\n\n    private static _instance: ModelManager = null;\n    public static get instance() {\n        if (!ModelManager._instance) {\n            ModelManager._instance = new ModelManager();\n        }\n        return ModelManager._instance;\n    }\n\n    /** token */\n    private userToken: string;\n    public set UserToken(value: string) {\n        this.userToken = value;\n    }\n    public get UserToken(): string {\n        if (ModelManager.testToken != \"\") {\n            return ModelManager.testToken;\n        }\n        return this.userToken;\n    }\n\n    /** userId */\n    private userId: string;\n    public set UserId(value: string) {\n        this.userId = value;\n    }\n    public get UserId(): string {\n        return this.userId;\n    }\n\n    /** 国家名称 */\n    private countryName: string;\n    public set CountryName(value: string) {\n        this.countryName = value;\n    }\n    public get CountryName(): string {\n        return this.countryName;\n    }\n\n    // 手机信息\n    private generateInfo: string;\n    public get phoneInfo(): string {\n        if (ModelManager.testPhoneInfo != \"\") {\n            return ModelManager.testPhoneInfo;\n        }\n        return this.generateInfo;\n    }\n    public set phoneInfo(value: string) {\n        this.generateInfo = value;\n    }\n    // 时间戳\n    private _timestamp: number;\n    public get timestamp() {\n        return this._timestamp;\n    }\n\n    private _modelList: Map<any, any> = new Map();\n\n    public init(url:string, errorCb: (states, message, response) => void) {\n        NetHelper.setHostUrl(url);\n        NetHelper.init(errorCb);\n        this.generateInfo = NativeInfo.generateInfo();\n        this._timestamp = NativeInfo.currentTimeStamp();\n        let userInfo = LocalStorageUtils.getObject(\"USER_INFO\") || {}\n        this.userToken = userInfo.token || \"\";\n        this.userId = userInfo.userId || -1;\n    }\n\n    public registerModel(model: { new(): ModelBase }): void {\n        let key = model;\n        if (this._modelList.get(key)) {\n        } else {\n            let m = new model();\n            m.init();\n            this._modelList.set(key, m);\n        }\n    }\n\n    /**\n     * 获取model对象\n     */\n\n    public getModel<T extends ModelBase>(model: new () => T): T {\n        let key = model;\n\n        if (!this._modelList.has(key)) {\n            this.registerModel(model);\n        }\n        return this._modelList.get(key);\n    }\n\n    public removeAllModel() {\n        for (let key in this._modelList) {\n            let model: ModelBase = this._modelList[key];\n            model.clear();\n            this._modelList.delete(key);\n        }\n        this._modelList.clear();\n    }\n\n    /** 清理所有model */\n    public clearAllModel(): void {\n        let keyList = Array.from(this._modelList.keys());\n        for (let key of keyList) {\n            let model: ModelBase = this._modelList.get(key);\n            if (model) {\n                model.clear();\n            }\n        }\n    }\n\n    /** 重新初始化所有model */\n    public reInitAllModel(): void {\n        let keyList = Array.from(this._modelList.keys());\n        for (let key of keyList) {\n            let model: ModelBase = this._modelList.get(key);\n            if (model) {\n                model.init();\n            }\n        }\n    }\n}\n","import LogSystem from \"../system/log/LogSystem\";\n\n/**\n * 性能监控工具\n * @version 1.0\n */\nexport class MonitorUtils {\n  private static showData: any = {};\n  private static elem: HTMLElement = null;\n\n  public static init(): void {\n    this.fps();\n    this.elem = document.createElement(\"monitor\");\n    this.elem.setAttribute(\"width\", \"200\");\n    this.elem.setAttribute(\"height\", \"400\");\n    this.elem.style.fontSize = \"10px\";\n    document.body.appendChild(this.elem);\n    setInterval(() => {\n      this.performance();\n      this.elem.innerHTML = this.getInfo();\n    }, 1000);\n  }\n\n  /** 当前页面FPS */\n  private static fps(): void {\n    const times = []; // 存储当前的时间数组\n    let fps: number = 0;\n    function refreshLoop() {\n      window.requestAnimationFrame(() => {\n        const now = (performance || Date).now();\n        while (times.length > 0 && times[0] <= now - 1000) {\n          times.shift(); // 去掉1秒外的时间\n        }\n        times.push(now);\n        fps = times.length;\n        refreshLoop();\n        MonitorUtils.showData[\"FPS\"] = fps;\n      });\n    }\n    refreshLoop();\n  }\n\n  /**\n   * performance 信息简单计算出网页性能数据\n   */\n  private static performance(): void {\n    let performance =\n      window[\"performance\"] || window[\"msPerformance\"] || window[\"webkitPerformance\"];\n\n    if (!performance) {\n      // 当前浏览器不支持\n      // LogSystem.ins.warn(\"你的浏览器不支持 performance 接口\");\n      return;\n    }\n    let m = performance.memory;\n    this.showData[\"内存大小限制\"] = (m.jsHeapSizeLimit / 1048576).toFixed(2) + \"MB\";\n    this.showData[\"可使用内存\"] = (m.totalJSHeapSize / 1048576).toFixed(2) + \"MB\";\n    this.showData[\"占用内存\"] = (m.usedJSHeapSize / 1048576).toFixed(2) + \"MB\";\n\n    let t = performance.timing;\n    this.showData[\"白屏耗时\"] = t.responseStart - t.navigationStart + \"ms\";\n    this.showData[\"DNS查询耗时\"] = t.domainLookupEnd - t.domainLookupStart + \"ms\";\n    this.showData[\"HTTP请求耗时\"] = t.responseEnd - t.requestStart + \"ms\";\n    this.showData[\"TCP链接耗时\"] = t.connectEnd - t.connectStart + \"ms\";\n    this.showData[\"load事件耗时\"] = t.loadEventEnd - t.loadEventStart + \"ms\";\n    this.showData[\"onload回调函数执行的时间\"] = t.loadEventEnd - t.navigationStart + \"ms\";\n\n    let dataStr: string = \"\";\n    for (let key in this.showData) {\n      dataStr += key + \": \" + this.showData[key] + \"\\n\";\n    }\n    // LogSystem.ins.info(\"Performance: \\n\" + dataStr);\n  }\n\n  private static getInfo(): string {\n    let dataStr: string = \"\";\n    for (let key in this.showData) {\n      dataStr += key + \": \" + this.showData[key] + \"</br>\";\n    }\n    return dataStr;\n  }\n}\n","import PlatformSystem from \"../framework/platform/PlatformSystem\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NativeInfo {\n\n    private static moduleName = PlatformSystem.instance.isAndroid ? 'NativeInterface' : 'CocosHelper';\n\n    public static generateInfo(): string {\n        if (PlatformSystem.instance.isBrowser) {\n            return `{\"device_uuid\": \"lingoChineseAi\"}`;\n        }\n        let adapter = PlatformSystem.instance.adapter;\n        let result = adapter.callFunctionResult(\"generateCommNode\", \"\", NativeInfo.moduleName);\n        return result;\n    }\n\n    public static currentTimeStamp(): number {\n        if (PlatformSystem.instance.isBrowser) {\n            return (new Date()).getTime();\n        }\n        let adapter = PlatformSystem.instance.adapter;\n        let result = adapter.callFunctionResult(\"currentTimeStamp\", \"\", NativeInfo.moduleName);\n        return result;\n    }\n\n    public static getNetworkStatus(): string {\n        if (PlatformSystem.instance.isBrowser) {\n            return NetworkType.NETWORK_WIFI;\n        }\n        let adapter = PlatformSystem.instance.adapter;\n        let result = adapter.callFunctionResult(\"getNetworkStatus\", \"\", NativeInfo.moduleName);\n        return result;\n    }\n}\n\nexport class GenerateInfo {\n    public net_type: string;\n    public device_uuid: string;\n    public app_channel: string;\n    public device_brand: string;\n    public width: string;\n    public height: string;\n    public package_name: string;\n    public loc_latlng: string;\n    public eTz: string;\n    public os_ver: string;\n    public app_ver: string;\n    public os_type: string;\n    public device_model: string;\n}\nexport enum NetworkType {\n    NETWORK_WIFI = \"NETWORK_WIFI\",\n    NETWORK_5G = \"NETWORK_5G\",\n    NETWORK_4G = \"NETWORK_4G\",\n    NETWORK_3G = \"NETWORK_3G\",\n    NETWORK_2G = \"NETWORK_2G\",\n    NETWORK_UNKNOWN = \"NETWORK_UNKNOWN\",\n    NETWORK_NO = \"NETWORK_NO\" // 无网络\n}","import HttpSystem from \"../system/net/http/HttpSystem\";\nimport { MessageBase } from \"./MessageBase\";\nimport ModelManager from \"./ModelManager\";\nimport NativeInfo, { NetworkType } from \"./NativeInfo\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NetHelper {\n\n    private static cbMap: Map<string, (api: string, msg: MessageBase) => void> = new Map();\n    public static currentMessage: MessageBase;\n    private static _hostUrl:string;\n    private static onErrorCb: (states, message, response) => void\n\n    public static init(errorCb: (states, message, response) => void) {\n        HttpSystem.instance.init(NetHelper.onError);\n        NetHelper.onErrorCb = errorCb;\n    }\n    public static setHostUrl(url:string) {\n        NetHelper._hostUrl = url;\n    }\n\n    public static registCb (message: string, callBack: (api, msg) => void) {\n        NetHelper.cbMap.set(message, callBack);\n    }\n\n    public static sendMessage(message: MessageBase) {\n        if (NetHelper._hostUrl == \"\") {\n            NetHelper.dispatcher(message.messageApi, message.debugData);\n            return;\n        }\n        if (!ModelManager.instance.UserToken || ModelManager.instance.UserToken == '') {\n            this.sendMessageWithOutToken(message);\n            return;\n        }\n        NetHelper.currentMessage = message;\n\n        let netWork = NativeInfo.getNetworkStatus();\n        // 无网络\n        if (netWork == NetworkType.NETWORK_NO) { \n            NetHelper.onError && NetHelper.onError(\"请求错误\", \"failed to connect\", null);\n            return;\n        }\n        let url = this.formatUrl(message.messageApi);\n        let header = { \"timestamp\": ModelManager.instance.timestamp, \"phoneInfo\": ModelManager.instance.phoneInfo, \"Authorization\": `Bearer ${ModelManager.instance.UserToken}` };\n        //let header =  `{\"timestamp\": ${ModelManager.instance.timestamp}, \"phoneInfo\": ${ModelManager.instance.phoneInfo}, \"Authorization\": \"Bearer ${ModelManager.instance.UserToken}\"}`\n        cc.log(header);\n        HttpSystem.instance.httpPost(url, message.param, null, JSON.stringify(header))\n            .then(msg => {\n                cc.log(message.messageApi + \"请求返回\", msg);\n                if (!msg || msg.code != 200) {\n                    NetHelper.onError && NetHelper.onError(\"请求错误\", msg, msg);\n                }\n                NetHelper.dispatcher(message.messageApi, msg);\n            })\n    }\n\n    public static sendMessageWithOutToken(message: MessageBase) {\n        if (NetHelper._hostUrl == \"\") {\n            NetHelper.dispatcher(message.messageApi, message.debugData);\n            return;\n        }\n        let url = this.formatUrl(message.messageApi);\n        let header = { \"timestamp\": ModelManager.instance.timestamp, \"phoneInfo\": ModelManager.instance.phoneInfo };\n        cc.log(header);\n        NetHelper.currentMessage = message;\n        NetHelper.currentMessage[\"noHeader\"] = true;\n        //let header = `{\"timestamp\": ${ModelManager.instance.timestamp}, \"phoneInfo\": ${ModelManager.instance.phoneInfo}}`\n        HttpSystem.instance.httpPost(url, message.param, null, JSON.stringify(header))\n            .then(msg => {\n                cc.log(message.messageApi + \"请求返回\", msg);\n                if (!msg || msg.code != 200) {\n                    NetHelper.onError && NetHelper.onError(\"请求错误\", msg, msg);\n                }\n                NetHelper.dispatcher(message.messageApi, msg);\n            })\n    }\n\n    public static dispatcher(api: string, msg: any) {\n        let cb = NetHelper.cbMap.get(api);\n        if (cb) { \n            cb(api, msg);\n            NetHelper.cbMap.delete(api);\n         }\n    }\n\n    public static tryAgain () {\n        if (NetHelper.currentMessage[\"noHeader\"]) {\n            NetHelper.sendMessageWithOutToken(NetHelper.currentMessage)\n            return;\n        } \n        NetHelper.sendMessage(NetHelper.currentMessage)\n    }\n\n    public static onError (states, message, response) {\n        let api = NetHelper.currentMessage.messageApi;\n        let cb = NetHelper.cbMap.get(api);\n        if (cb) { \n            cb(api, response);\n            NetHelper.cbMap.delete(api);\n        }\n        NetHelper.onErrorCb(states, message, response);\n    }\n\n    public static formatUrl(api: string): string {\n        return `${NetHelper._hostUrl}${api}`;\n    }\n}\n","/**\n * 数值计算工具\n * @version 1.0\n */\nexport class NumberUtils {\n  /**\n   * random 适用于整数\n   * @param {Number} lower\n   * @param {Number} upper\n   * @return {number}\n   */\n  public static random(lower: number, upper: number): number {\n    var range: number = upper - lower + 1;\n    return Math.floor(Math.random() * range) + lower;\n  }\n\n  /**\n   * randomf 适用于浮点数\n   * @param {Number} lower\n   * @param {Number} upper\n   * @return {number}\n   */\n  public static randomf(lower: number, upper: number): number {\n    return Math.random() * (upper - lower) + lower;\n  }\n  /**\n   * 减法\n   * @param {number} arg1\n   * @param {number} arg2\n   * @returns {number}\n   */\n  public static floatSub(arg1: number, arg2: number): number {\n    var r1, r2, m, n;\n    try {\n      r1 = arg1.toString().split(\".\")[1].length;\n    } catch (e) {\n      r1 = 0;\n    }\n    try {\n      r2 = arg2.toString().split(\".\")[1].length;\n    } catch (e) {\n      r2 = 0;\n    }\n    m = Math.pow(10, Math.max(r1, r2));\n    //动态控制精度长度\n    n = r1 >= r2 ? r1 : r2;\n    var result = (arg1 * m - arg2 * m) / m;\n    var tmp = result.toFixed(n);\n    return parseFloat(tmp);\n  }\n\n  /**\n   * 乘法\n   * @param {number} arg1\n   * @param {number} arg2\n   * @returns {number}\n   */\n  public static floatMul(arg1: number, arg2: number): number {\n    var m = 0,\n      s1 = arg1.toString(),\n      s2 = arg2.toString();\n    try {\n      m += s1.split(\".\")[1].length;\n    } catch (e) {}\n    try {\n      m += s2.split(\".\")[1].length;\n    } catch (e) {}\n    return (Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\"))) / Math.pow(10, m);\n  }\n\n  /**\n   * 除法\n   * @param {number} arg1\n   * @param {number} arg2\n   * @returns {number}\n   */\n  public static floatDiv(arg1: number, arg2: number): number {\n    var t1 = 0,\n      t2 = 0,\n      r1,\n      r2;\n    try {\n      t1 = arg1.toString().split(\".\")[1].length;\n    } catch (e) {}\n    try {\n      t2 = arg2.toString().split(\".\")[1].length;\n    } catch (e) {}\n    r1 = Number(arg1.toString().replace(\".\", \"\"));\n\n    r2 = Number(arg2.toString().replace(\".\", \"\"));\n    return (r1 / r2) * Math.pow(10, t2 - t1);\n  }\n\n  /**\n   * 大于1000转成1k，精确到小数点后一位\n   * @param {number} arg1\n   * @returns {string}\n   */\n  public static floatTok(arg1: number): string {\n    if (arg1 < 1000) {\n      return arg1.toString();\n    } else {\n      // 整数位 向下取整\n      var t1 = Math.floor(arg1 / 1000);\n      // 小数位 向下取整\n      var t2 = Math.floor((arg1 % 1000) / 100);\n      if (t2 > 0) {\n        return t1 + \".\" + t2 + \"k\";\n      }\n      return t1 + \"k\";\n    }\n  }\n\n  /**\n   * 两点间向量长度与最大向量长度百分比系数\n   * @param arg1 两点间x轴长度\n   * @param arg2 两点间y轴长度\n   * @param arg3 最小系数\n   * @param arg4 最大向量长度\n   */\n  public static floatSqrt(arg1: number, arg2: number, arg3: number, arg4: number): number {\n    var len: number = Math.sqrt(arg1 * arg1 + arg2 * arg2);\n    var mul: number = arg3 + arg4 / len;\n    return mul;\n  }\n}\n","export class ParseTemplateUtils{\n    public static parseSrt(srtText: string) {\n        let data: any[] =[]\n        function ToSeconds(t) {\n            var s = 0.0;\n            if (t) {\n              var p = t.split(\":\");\n              for (let i = 0; i < p.length; i++) {\n                s = s * 60 + parseFloat(p[i].replace(\",\", \".\"));\n              }\n            }\n            return s;\n        }\n        let json = srtText\n        json.split(/\\n\\s\\n/)\n        .filter(item => item != \"\")\n        .map((item, index) => {\n        let textItem = item.split(/\\n/);\n        data.push({\n            index: index,\n            sort: textItem[0],\n            text: textItem[2],\n            translate: textItem[3],\n            startTime: ToSeconds(textItem[1].split(\" --> \")[0]),\n            endTime:  ToSeconds(textItem[1].split(\" --> \")[1]),\n            timeLine: textItem[1],\n            isShow: false,\n          })\n        });\n        return data\n    }\n}","import AndroidAdapter from \"./AndroidAdapter\";\nimport IosAdapter from \"./IosAdapter\";\nimport WebAdapter from \"./WebAdapter\";\nimport IPlatform from \"./IPlatform\";\nimport ASystem from \"../../system/interface/ASystem\";\nimport DebuggerAdapter from \"./DebuggerAdapter\";\n\n/**\n * 平台适配系统\n * @export\n * @class PlatformSystem\n * @extends {ASystem}\n */\nexport default class PlatformSystem extends ASystem {\n    private static _instance: PlatformSystem;\n\n    public adapter: IPlatform;\n\n    public get isBrowser(): boolean {\n        return cc.sys.isBrowser;\n    }\n\n    public get isWXBrowser(): boolean {\n        return this.isBrowser && cc.sys.browserType === cc.sys.BROWSER_TYPE_WECHAT;\n    }\n\n    public get isSafariBrowser(): boolean {\n        return this.isBrowser && cc.sys.browserType === cc.sys.BROWSER_TYPE_SAFARI;\n    }\n\n    public get isNative(): boolean {\n        return cc.sys.isNative;\n    }\n\n    public get isDebug(): boolean {\n        return this.adapter instanceof DebuggerAdapter;\n    }\n\n    /**\n     * 是否是微信小游戏\n     */\n    public get isWeChat(): boolean {\n        return cc.sys.platform === cc.sys.WECHAT_GAME;\n    }\n\n    public get isAndroid(): boolean {\n        return cc.sys.os === cc.sys.OS_ANDROID;\n    }\n\n    public get isIOS(): boolean {\n        return cc.sys.os === cc.sys.OS_IOS;\n    }\n\n    public async init(...args: any[]): Promise<any> {\n        if (this.isWeChat) {\n            // this.adapter = new WXLittleGameAdapter();\n        }\n        else if (this.isBrowser) {\n            if (window.location.href.indexOf('localhost:') > -1) {\n                this.adapter = new DebuggerAdapter();\n            } else {\n                this.adapter = new WebAdapter();\n            }\n        }\n        else if (this.isNative) {\n            if (this.isAndroid) {\n                this.adapter = new AndroidAdapter();\n            } else if (this.isIOS) {\n                this.adapter = new IosAdapter();\n            }\n        }\n        return Promise.resolve();\n    }\n\n    public release(): void {\n        this.adapter = null;\n        PlatformSystem._instance = null;\n    }\n\n    public static get instance(): PlatformSystem {\n        if (PlatformSystem._instance == null) {\n            PlatformSystem._instance = new PlatformSystem();\n        }\n        return PlatformSystem._instance;\n    }\n}","import TigoManager from \"../base/TigoManager\";\n\nexport default class Point {\n    public static readonly POINT_GAME_START: string = \"Start a game\"\n    public static readonly POINT_GAME_END: string = \"Complete a game\"\n    public static readonly POINT_ROUND_START: string = \"Start a round\"\n    public static readonly POINT_ROUND_END: string = \"Complete a round\"\n\n    private static _instance: Point;\n    private gameName: string = '';\n    private commonParams: any;\n    private totalRound: number;\n\n    public static get instance(): Point {\n        if (Point._instance == null) {\n            Point._instance = new Point();\n        }\n        return Point._instance;\n    }\n    /**\n     * 初始化埋点功能\n     * 如果有两个游戏,则需要调用两次init方法分别设置游戏名与关卡数\n     * @param gameName 游戏名\n     * @param totalRound 总关卡数\n     */\n    public init(gameName: string, totalRound: number): void {\n        this.gameName = gameName;\n        this.totalRound = totalRound;\n        let info = TigoManager.getAppInfo();\n        cc.log('info:', info);\n        if (info) {\n            this.commonParams = {\n                \"Level_Name\": info.levelName,\n                \"Week_Name\": info.weekName,\n                \"Course_ID\": info.lessonId,\n                \"Course_Name\": info.lessonName,\n                \"Module_id\": info.moduleId,\n                \"Module_Name\": info.moduleName,\n                \"Game_name\": this.gameName\n            };\n            cc.log('commonParams:', this.commonParams);\n        }\n    }\n\n    /**\n     * 遊戲開始\n     * @param gameName 游戏名称\n     */\n    public gameStart(): void {\n        this.callNative(Point.POINT_GAME_START, this.commonParams);\n    }\n\n    /**\n     * 遊戲結束\n     * @param gameName \n     */\n    public gameEnd(): void {\n        this.callNative(Point.POINT_GAME_END, this.commonParams);\n    }\n\n    /**\n     * 回合结束\n     * @param currentRound 当前关卡\n     */\n    public roundStart(currentRound: number): void {\n        let obj: any = { ...this.commonParams };\n        obj[\"Which round\"] = `${currentRound}/${this.totalRound}`;\n        this.callNative(Point.POINT_ROUND_START, obj);\n    }\n\n    /**\n     * 回合结束\n     * @param currentRound 当前关卡\n     * @param times 总点击次数\n     */\n    public roundEnd(currentRound: number, times: number): void {\n        let obj: any = { ...this.commonParams };\n        obj[\"Which round\"] = `${currentRound}/${this.totalRound}`;\n        obj[\"Result \"] = times;\n        this.callNative(Point.POINT_ROUND_END, obj);\n    }\n\n    private callNative(event: string, data: any): void {\n        cc.log(`event:${event},data:${JSON.stringify(data)}`);\n        if (TigoManager.getAppInfo() && TigoManager.getAppInfo().levelName && TigoManager.getAppInfo().weekName) {\n            TigoManager.callPoint(event, data);\n        } else {\n            cc.warn(\"原生参数为空，无法埋点\");\n        }\n    }\n}","/**\n * 缓存池\n * @version 1.0\n */\n\nimport LogSystem from \"../system/log/LogSystem\";\n\nexport class PoolUtils {\n  /**\n   * 缓存池数组\n   */\n  private static poolArray: any = {};\n  /**\n   * 类缓存数组\n   */\n  private static classArray: Array<any> = [];\n\n  /**\n   * 初始化缓存池\n   * @param type 类型\n   * @param className 类名\n   * @param num 初始化数量\n   */\n  public static initPool(type: string, className: any, num: number): void {\n    if (this.poolArray[type] == null) {\n      this.poolArray[type] = new Array();\n    }\n    this.classArray[type] = className;\n    for (let i = 0; i < num; i++) {\n      let object = new className();\n      this.poolArray[type].push(object);\n    }\n    LogSystem.log(\"初始化\" + type + \"数量：\" + this.poolArray[type].length);\n  }\n  /**\n   * 获取缓存池对象\n   * @param type 类型\n   */\n  public static getPool(type: string): any {\n    if (this.poolArray[type].length > 0) {\n      let object = this.poolArray[type].shift();\n      // LogSystem.ins.log(\"获取\" + type + \"缓存池对象，剩余数量：\" + this.poolArray[type].length);\n      return object;\n    } else {\n      // LogSystem.ins.log(type + \"缓存池对象剩余不足，剩余数量：\" + this.poolArray[type].length);\n      return new this.classArray[type]();\n    }\n  }\n  /**\n   * 放入缓存池对象\n   * @param type 类型\n   * @param object 需要缓存的对象\n   */\n  public static putPool(type: string, object: any): void {\n    if (object) {\n      // object.reset();\n      this.poolArray[type].push(object);\n      // LogSystem.ins.log(\"放入\" + type + \"缓存池对象，剩余数量：\" + this.poolArray[type].length);\n    }\n  }\n\n  /**\n   * 清理单类型\n   * @param type 类型\n   */\n  public static clear(type: string): void {\n    while (this.poolArray[type] && this.poolArray[type].length > 0) {\n      let object = this.poolArray[type].shift();\n      object.parent = null;\n      // object.destroy();\n    }\n    // LogSystem.ins.log(\"清理后\" + type + \"数量：\" + this.poolArray[type].length);\n  }\n\n  /**\n   * 清理所有\n   */\n  public static clearAll(): void {\n    if (this.poolArray) {\n      for (const key in this.poolArray) {\n        if (this.poolArray.hasOwnProperty(key)) {\n          let pool = this.poolArray[key];\n          while (pool && pool.length > 0) {\n            let object = pool.shift();\n            object.parent = null;\n            // object.destroy();\n          }\n        }\n      }\n    }\n    this.poolArray = {};\n    this.classArray = [];\n  }\n}\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 弹窗基类\n * @see PopupBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/popups/PopupBase.ts\n * @see PopupManager.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/PopupManager.ts\n * @version 20210409\n */\n@ccclass\nexport default class PopupBase<Options = any> extends cc.Component {\n\n    @property({ type: cc.Node, tooltip: CC_DEV && '背景遮罩' })\n    public background: cc.Node = null;\n\n    @property({ type: cc.Node, tooltip: CC_DEV && '弹窗主体' })\n    public main: cc.Node = null;\n\n    /** 展示/隐藏动画的时长 */\n    public animDuration: number = 0.3;\n\n    /** 用于拦截点击的节点 */\n    protected blocker: cc.Node = null;\n\n    /** 弹窗选项 */\n    protected options: Options = null;\n\n    /**\n     * 展示弹窗\n     * @param options 弹窗选项\n     * @param duration 动画时长\n     */\n    public show(options?: Options, duration: number = this.animDuration) {\n        return new Promise<void>(res => {\n            // 储存选项\n            this.options = options;\n            // 初始化节点\n            const background = this.background;\n            const main = this.main;\n            this.node.active = true;\n            background.active = true;\n            background.opacity = 0;\n            main.active = true;\n            main.scale = 0.5;\n            main.opacity = 0;\n            // 初始化\n            this.init(this.options);\n            // 更新样式\n            this.updateDisplay(this.options);\n            // 播放背景遮罩动画\n            cc.tween(background)\n                .to(duration * 0.8, { opacity: 200 })\n                .start();\n            // 播放弹窗主体动画\n            cc.tween(main)\n                .to(duration, { scale: 1, opacity: 255 }, { easing: 'backOut' })\n                .call(() => {\n                    // 弹窗已完全展示\n                    this.onShow && this.onShow();\n                    // Done\n                    res();\n                })\n                .start();\n        });\n    }\n\n    /**\n     * 隐藏弹窗\n     * @param suspended 是否被挂起\n     * @param duration 动画时长\n     */\n    public hide(suspended: boolean = false, duration: number = this.animDuration) {\n        return new Promise<void>(res => {\n            const node = this.node;\n            // 动画时长不为 0 时拦截点击事件（避免误操作）\n            if (duration !== 0) {\n                let blocker = this.blocker;\n                if (!blocker) {\n                    blocker = this.blocker = new cc.Node('blocker');\n                    blocker.addComponent(cc.BlockInputEvents);\n                    blocker.setParent(node);\n                    blocker.setContentSize(node.getContentSize());\n                }\n                blocker.active = true;\n            }\n            // 播放背景遮罩动画\n            cc.tween(this.background)\n                .delay(duration * 0.2)\n                .to(duration * 0.8, { opacity: 0 })\n                .start();\n            // 播放弹窗主体动画\n            cc.tween(this.main)\n                .to(duration, { scale: 0.5, opacity: 0 }, { easing: 'backIn' })\n                .call(() => {\n                    // 关闭拦截\n                    this.blocker && (this.blocker.active = false);\n                    // 关闭节点\n                    node.active = false;\n                    // 弹窗已完全隐藏（动画完毕）\n                    this.onHide && this.onHide(suspended);\n                    // Done\n                    res();\n                    // 弹窗完成回调\n                    this.finishCallback && this.finishCallback(suspended);\n                })\n                .start();\n        });\n    }\n\n    /**\n     * 初始化（派生类请重写此函数以实现自定义逻辑）\n     */\n    protected init(options: Options) { }\n\n    /**\n     * 更新样式（派生类请重写此函数以实现自定义样式）\n     * @param options 弹窗选项\n     */\n    protected updateDisplay(options: Options) { }\n\n    /**\n     * 弹窗已完全展示（派生类请重写此函数以实现自定义逻辑）\n     */\n    protected onShow() { }\n\n    /**\n     * 弹窗已完全隐藏（派生类请重写此函数以实现自定义逻辑）\n     * @param suspended 是否被挂起\n     */\n    protected onHide(suspended: boolean) { }\n\n    /**\n     * 弹窗流程结束回调（注意：该回调为 PopupManager 专用，重写 hide 函数时记得调用该回调）\n     */\n    protected finishCallback: (suspended: boolean) => void = null;\n\n    /**\n     * 设置弹窗完成回调（该回调为 PopupManager 专用）\n     * @param callback 回调\n     */\n    public setFinishCallback(callback: (suspended: boolean) => void) {\n        this.finishCallback = callback;\n    }\n\n}\n","import PopupBase from \"./PopupBase\";\r\n\r\n/** 弹窗缓存模式 */\r\nexport enum PopupCacheMode {\r\n    /** 一次性的（立即销毁节点，预制体资源随即释放） */\r\n    Once = 1,\r\n    /** 正常的（立即销毁节点，但是缓存预制体资源） */\r\n    Normal,\r\n    /** 频繁的（只关闭节点，且缓存预制体资源） */\r\n    Frequent\r\n}\r\n\r\n/** 弹窗请求结果 */\r\nexport enum PopupShowResult {\r\n    /** 展示成功（已关闭） */\r\n    Done = 1,\r\n    /** 展示失败（加载失败） */\r\n    Failed,\r\n    /** 等待中（已加入等待队列） */\r\n    Waiting\r\n}\r\n\r\n/**\r\n * 弹窗管理器\r\n * @see PopupManager.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/PopupManager.ts\r\n * @see PopupBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/popups/PopupBase.ts\r\n * @version 20210524\r\n */\r\nexport default class PopupManager {\r\n\r\n    /** 预制体缓存 */\r\n    public static get prefabCache() { return this._prefabCache; }\r\n    private static _prefabCache: Map<string, cc.Prefab> = new Map<string, cc.Prefab>();\r\n\r\n    /** 节点缓存 */\r\n    public static get nodeCache() { return this._nodeCache; }\r\n    private static _nodeCache: Map<string, cc.Node> = new Map<string, cc.Node>();\r\n\r\n    /** 当前弹窗请求 */\r\n    public static get current() { return this._current; }\r\n    private static _current: PopupRequest = null;\r\n\r\n    /** 等待队列 */\r\n    public static get queue() { return this._queue; }\r\n    private static _queue: PopupRequest[] = [];\r\n\r\n    /** 被挂起的弹窗队列 */\r\n    public static get suspended() { return this._suspended; }\r\n    private static _suspended: PopupRequest[] = [];\r\n\r\n    /** 锁定状态 */\r\n    private static locked: boolean = false;\r\n\r\n    /** 用于存放弹窗节点的容器节点（不设置则默认为当前 Canvas） */\r\n    public static container: cc.Node = null;\r\n\r\n    /** 连续展示弹窗的时间间隔（秒） */\r\n    public static interval: number = 0.05;\r\n\r\n    /** 弹窗缓存模式 */\r\n    public static get CacheMode() { return PopupCacheMode; }\r\n\r\n    /** 弹窗请求结果 */\r\n    public static get ShowResult() { return PopupShowResult; }\r\n\r\n    public static cacheMode = PopupCacheMode;\r\n    public static showResult = PopupShowResult;\r\n    public static Base = PopupBase;\r\n    /**\r\n     * 弹窗动态加载开始回调\r\n     * @example\r\n     * PopupManager.loadStartCallback = () => {\r\n     *     LoadingTip.show();\r\n     * };\r\n     */\r\n    public static loadStartCallback: () => void = null;\r\n\r\n    /**\r\n     * 弹窗动态加载结束回调\r\n     * @example\r\n     * PopupManager.loadFinishCallback = () => {\r\n     *     LoadingTip.hide();\r\n     * };\r\n     */\r\n    public static loadFinishCallback: () => void = null;\r\n\r\n    /**\r\n     * 展示弹窗，如果当前已有弹窗在展示中则加入等待队列\r\n     * @param path 弹窗预制体相对路径（如：prefabs/MyPopup）\r\n     * @param options 弹窗选项（将传递给弹窗的组件）\r\n     * @param params 弹窗展示参数\r\n     * @example\r\n     * const options = {\r\n     *     title: 'Hello',\r\n     *     content: 'This is a popup!'\r\n     * };\r\n     * const params = {\r\n     *     mode: PopupCacheMode.Normal\r\n     * };\r\n     * PopupManager.show('prefabs/MyPopup', options, params);\r\n     */\r\n    public static show<Options>(targetNode: cc.Node, options?: Options, params?: PopupParams): Promise<PopupShowResult> {\r\n        let path: string = targetNode.uuid;\r\n        if (!targetNode.active) {\r\n            targetNode.active = true;\r\n        }\r\n        if (!this._nodeCache.has(path)) {\r\n            this._nodeCache.set(path, targetNode);\r\n        }\r\n        return new Promise(async (res) => {\r\n            // 解析处理参数\r\n            params = this.parseParams(params);\r\n            // 当前已有弹窗在展示中则加入等待队列\r\n            if (this._current || this.locked) {\r\n                // 是否立即强制展示\r\n                if (params && params.immediately) {\r\n                    this.locked = false;\r\n                    // 挂起当前弹窗\r\n                    await this.suspend();\r\n                } else {\r\n                    // 将请求推入等待队列\r\n                    this.push(targetNode, options, params);\r\n                    res(PopupShowResult.Waiting);\r\n                    return;\r\n                }\r\n            }\r\n            // 保存为当前弹窗，阻止新的弹窗请求\r\n            this._current = {\r\n                path:targetNode,\r\n                options,\r\n                params\r\n            };\r\n            // 先在缓存中获取弹窗节点\r\n            let node = this.getNodeFromCache(path);\r\n            // 缓存中没有，动态加载预制体资源\r\n            if (!cc.isValid(node)) {\r\n                // 开始回调\r\n                this.loadStartCallback && this.loadStartCallback();\r\n                // 等待加载\r\n                const prefab = await this.load(path);\r\n                // 完成回调\r\n                this.loadFinishCallback && this.loadFinishCallback();\r\n                // 加载失败（一般是路径错误导致的）\r\n                if (!cc.isValid(prefab)) {\r\n                    cc.warn('[PopupManager]', '弹窗加载失败', path);\r\n                    this._current = null;\r\n                    res(PopupShowResult.Failed);\r\n                    return;\r\n                }\r\n                // 实例化节点\r\n                node = cc.instantiate(prefab);\r\n            }\r\n            // 获取继承自 PopupBase 的弹窗组件\r\n            const popup = node.getComponent(PopupBase);\r\n            if (!popup) {\r\n                cc.warn('[PopupManager]', '未找到弹窗组件', path);\r\n                this._current = null;\r\n                res(PopupShowResult.Failed);\r\n                return;\r\n            }\r\n            // 保存组件引用\r\n            this._current.popup = popup;\r\n            // 保存节点引用\r\n            this._current.node = node;\r\n            // 添加到场景中\r\n            node.setParent(this.container || cc.Canvas.instance.node);\r\n            // 显示在最上层\r\n            node.setSiblingIndex(cc.macro.MAX_ZINDEX);\r\n            // 设置完成回调\r\n            const finishCallback = async (suspended: boolean) => {\r\n                if (suspended) {\r\n                    return;\r\n                }\r\n                // 是否需要锁定\r\n                this.locked = (this._suspended.length > 0 || this._queue.length > 0);\r\n                // 回收\r\n                this.recycle(path, node, params.mode);\r\n                this._current = null;\r\n                res(PopupShowResult.Done);\r\n                // 延迟一会儿\r\n                await new Promise((_res) => {\r\n                    cc.Canvas.instance.scheduleOnce(_res, this.interval);\r\n                });\r\n                // 下一个弹窗\r\n                this.next();\r\n            }\r\n            popup.setFinishCallback(finishCallback);\r\n            // 展示\r\n            popup.show(options);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 隐藏当前弹窗\r\n     */\r\n    public static hide() {\r\n        if (this._current.popup) {\r\n            this._current.popup.hide();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从缓存中获取节点\r\n     * @param path 弹窗路径\r\n     */\r\n    private static getNodeFromCache(path: string): cc.Node {\r\n        // 从节点缓存中获取\r\n        const nodeCache = this._nodeCache;\r\n        if (nodeCache.has(path)) {\r\n            const node = nodeCache.get(path);\r\n            if (cc.isValid(node)) {\r\n                return node;\r\n            }\r\n            // 删除无效引用\r\n            nodeCache.delete(path);\r\n        }\r\n        // 从预制体缓存中获取\r\n        const prefabCache = this._prefabCache;\r\n        if (prefabCache.has(path)) {\r\n            const prefab = prefabCache.get(path);\r\n            if (cc.isValid(prefab)) {\r\n                return cc.instantiate(prefab);\r\n            }\r\n            // 删除无效引用\r\n            prefabCache.delete(path);\r\n        }\r\n        // 无\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 展示挂起或等待队列中的下一个弹窗\r\n     */\r\n    private static next() {\r\n        if (this._current ||\r\n            (this._suspended.length === 0 && this._queue.length === 0)) {\r\n            return;\r\n        }\r\n        // 取出一个请求\r\n        let request: PopupRequest = null;\r\n        if (this._suspended.length > 0) {\r\n            // 挂起队列\r\n            request = this._suspended.shift();\r\n        } else {\r\n            // 等待队列\r\n            request = this._queue.shift();\r\n        }\r\n        // 解除锁定\r\n        this.locked = false;\r\n        // 已有实例\r\n        if (cc.isValid(request.popup)) {\r\n            // 设为当前弹窗\r\n            this._current = request;\r\n            // 直接展示\r\n            request.popup.show(request.options);\r\n            return;\r\n        }\r\n        // 加载并展示\r\n        this.show(request.path, request.options, request.params);\r\n    }\r\n\r\n    /**\r\n     * 添加一个弹窗请求到等待队列中，如果当前没有展示中的弹窗则直接展示该弹窗。\r\n     * @param path 弹窗预制体相对路径（如：prefabs/MyPopup）\r\n     * @param options 弹窗选项\r\n     * @param params 弹窗展示参数\r\n     */\r\n    private static push<Options>(path: cc.Node, options?: Options, params?: PopupParams) {\r\n        // 直接展示\r\n        if (!this._current && !this.locked) {\r\n            this.show(path, options, params);\r\n            return;\r\n        }\r\n        // 加入队列\r\n        this._queue.push({ path, options, params });\r\n        // 按照优先级从小到大排序\r\n        this._queue.sort((a, b) => (a.params.priority - b.params.priority));\r\n    }\r\n\r\n    /**\r\n     * 挂起当前展示中的弹窗\r\n     */\r\n    private static async suspend() {\r\n        if (!this._current) {\r\n            return;\r\n        }\r\n        const request = this._current;\r\n        // 将当前弹窗推入挂起队列\r\n        this._suspended.push(request);\r\n        // 关闭当前弹窗（挂起）\r\n        await request.popup.hide(true);\r\n        // 置空当前\r\n        this._current = null;\r\n    }\r\n\r\n    /**\r\n     * 回收弹窗\r\n     * @param path 弹窗路径\r\n     * @param node 弹窗节点\r\n     * @param mode 缓存模式\r\n     */\r\n    private static recycle(path: string, node: cc.Node, mode: PopupCacheMode) {\r\n        switch (mode) {\r\n            // 一次性\r\n            case PopupCacheMode.Once:\r\n                node.destroy();\r\n                this._nodeCache.delete(path);\r\n                this.release(path);\r\n                break;\r\n            // 正常\r\n            case PopupCacheMode.Normal:\r\n                node.destroy();\r\n                this._nodeCache.delete(path);\r\n                break;\r\n            // 频繁\r\n            case PopupCacheMode.Frequent:\r\n                node.removeFromParent(false);\r\n                this._nodeCache.set(path, node);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载并缓存弹窗预制体资源\r\n     * @param path 弹窗路径\r\n     */\r\n    public static load(path: string): Promise<cc.Prefab> {\r\n        return new Promise((res) => {\r\n            const prefabMap = this._prefabCache;\r\n            // 先看下缓存里有没有，避免重复加载\r\n            if (prefabMap.has(path)) {\r\n                const prefab = prefabMap.get(path);\r\n                // 缓存是否有效\r\n                if (cc.isValid(prefab)) {\r\n                    res(prefab);\r\n                    return;\r\n                } else {\r\n                    // 删除无效引用\r\n                    prefabMap.delete(path);\r\n                }\r\n            }\r\n            // 动态加载\r\n            cc.resources.load(path, (error: Error, prefab: cc.Prefab) => {\r\n                if (error) {\r\n                    res(null);\r\n                    return;\r\n                }\r\n                // 缓存预制体\r\n                prefabMap.set(path, prefab);\r\n                // 增加引用计数\r\n                prefab.addRef();\r\n                res(prefab);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 尝试释放弹窗资源（注意：弹窗内部动态加载的资源请自行释放）\r\n     * @param path 弹窗路径\r\n     */\r\n    public static release(path: string) {\r\n        // 移除节点\r\n        const nodeCache = this._nodeCache;\r\n        let node = nodeCache.get(path);\r\n        if (node) {\r\n            nodeCache.delete(path);\r\n            if (cc.isValid(node)) {\r\n                node.destroy();\r\n            }\r\n            node = null;\r\n        }\r\n        // 移除预制体\r\n        const prefabCache = this._prefabCache;\r\n        let prefab = prefabCache.get(path);\r\n        if (prefab) {\r\n            prefabCache.delete(path);\r\n            prefab.decRef();\r\n            prefab = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 解析参数\r\n     * @param params 参数\r\n     */\r\n    private static parseParams(params: PopupParams) {\r\n        if (params == undefined) {\r\n            return new PopupParams();\r\n        }\r\n        // 是否为对象\r\n        if (Object.prototype.toString.call(params) !== '[object Object]') {\r\n            cc.warn('[PopupManager]', '弹窗参数无效，使用默认参数');\r\n            return new PopupParams();\r\n        }\r\n        // 缓存模式\r\n        if (params.mode == undefined) {\r\n            params.mode = PopupCacheMode.Normal;\r\n        }\r\n        // 优先级\r\n        if (params.priority == undefined) {\r\n            params.priority = 0;\r\n        }\r\n        // 立刻展示\r\n        if (params.immediately == undefined) {\r\n            params.immediately = false;\r\n        }\r\n        return params;\r\n    }\r\n\r\n}\r\n\r\n/** 弹窗展示参数 */\r\nexport class PopupParams {\r\n    /** 缓存模式 */\r\n    public mode?: PopupCacheMode = PopupCacheMode.Normal;\r\n    /** 优先级（优先级大的优先展示） */\r\n    public priority?: number = 0;\r\n    /** 立刻展示（将会挂起当前展示中的弹窗） */\r\n    public immediately?: boolean = false;\r\n}\r\n\r\n/** 弹窗展示请求 */\r\nexport interface PopupRequest {\r\n    /** 弹窗预制体相对路径 */\r\n    path: cc.Node;\r\n    /** 弹窗选项 */\r\n    options: any;\r\n    /** 缓存模式 */\r\n    params: PopupParams,\r\n    /** 弹窗组件 */\r\n    popup?: PopupBase,\r\n    /** 弹窗节点 */\r\n    node?: cc.Node\r\n}\r\n","\r\nimport BaseLoader from \"./BaseLoader\";\r\n\r\nexport class PrefabLoader extends BaseLoader {\r\n\r\n    public loadNetRes(path: string, type: typeof cc.Asset | Record<string, any>, callback: (err: any, res: any) => void): void {\r\n        // 加载网络json资源\r\n        cc.assetManager.loadRemote(path, type, (e, res) => {\r\n            if (e) {\r\n                cc.error(e);\r\n            }\r\n            if (callback) {\r\n                callback(e, res);\r\n            }\r\n        });\r\n    }\r\n\r\n    public loadRemoteRes(path: string, type: any, callback: (err: any, res: any) => void): void {\r\n        // 加载远程待下载图片资源\r\n        cc.log(path, type, callback);\r\n        throw new Error(\"PrefabLoader loadRemoteRes method not implemented.\");\r\n    }\r\n\r\n    public loadLocalRes(path: string, type: any, onProgress: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void, callback: (err: any, res: any) => void, bundle?: cc.AssetManager.Bundle): void {\r\n        if (bundle) {\r\n            bundle.load(path, type, onProgress, callback);\r\n        } else {\r\n            cc.resources.load(path, type, onProgress, callback);\r\n        }\r\n    }\r\n}\r\n","import { kit } from \"../../../kit/kit\";\nimport Config from \"./config/config\";\nimport Events from \"./Events\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ProgressBar extends cc.Component {\n\n    @property(cc.ProgressBar)\n    bar: cc.ProgressBar = null;\n\n    private currentLevelNode: cc.Node;\n    private showIndex: number = 1;\n\n    onLoad() {\n        this.init();\n        kit.manager.Event.on(Events.GAME_STAGE_COMPLETE, this.onStageComplete, this);\n        kit.manager.Event.on(Events.GAME_SCORE, this.onScore, this);\n    }\n\n    onDestroy() {\n        kit.manager.Event.off(Events.GAME_STAGE_COMPLETE, this.onStageComplete, this);\n        kit.manager.Event.off(Events.GAME_SCORE, this.onScore, this);\n    }\n\n    private init(): void {\n        this.hideAllLevel();\n        this.hideAllItem(1);\n        this.currentLevelNode = this.node.getChildByName(`level${1}`);\n        this.currentLevelNode.active = true;\n        this.bar.progress = 0;\n    }\n\n    // private onGameComplete(): void {\n    //     if (this.showIndex < 4) {\n    //         let node: cc.Node = this.node.getChildByName(`level${this.showIndex}`);\n    //         node.active = true;\n    //         let list: cc.Node[] = [];\n    //         for (let i = 1; i < 4; i++) {\n    //             let item: cc.Node = node.getChildByName(`itemBg${i}`).getChildByName('item');\n    //             item.active = false;\n    //             list.push(item);\n    //         }\n    //         this.move2Bottom(list);\n    //         this.showIndex += 1;\n    //     } else {\n    //         kit.manager.Event.emit(Events.GAME_LEARN_COMPLETE);\n    //     }\n    // }\n\n    private move2Bottom(list: cc.Node[]): void {\n        this.scheduleOnce(() => {\n            let effectTime: number = 1;\n            list.forEach((element: cc.Node, index: number) => {\n                element.active = true;\n                let p: any = Config.COMPLETE_STAGE_POINTS[index];\n                let targetPoint: cc.Vec3 = new cc.Vec3(p.x, p.y);\n                cc.tween(element).to(effectTime, { position: targetPoint }).start();\n            });\n            cc.tween(this).delay(2.5).call(() => {\n                list.forEach((element: cc.Node) => {\n                    element.active = false;\n                })\n            })\n            kit.system.timer.doOnce(effectTime * 1000, () => {\n                kit.manager.Event.emit(Events.FRUIT_DOWN_COMPLETE);\n            })\n        }, 0.3)\n    }\n\n    private onStageComplete(event: any): void {\n        let level: number = event.data.level;\n        let node: cc.Node = this.node.getChildByName(`level${level}`);\n        node.active = true;\n        let list: cc.Node[] = [];\n        for (let i = 1; i < 4; i++) {\n            let item: cc.Node = node.getChildByName(`itemBg${i}`).getChildByName('item');\n            item.active = false;\n            list.push(item);\n        }\n        this.move2Bottom(list);\n        kit.system.timer.doOnce(3000, () => {\n            this.updateLevel(level);\n        })\n    }\n\n    private onScore(event: any): void {\n        let index: number = event.data.index;\n        this.updateProgress(index);\n    }\n\n    private updateProgress(index: number): void {\n        let item: cc.Node = this.currentLevelNode.getChildByName(`itemBg${index}`).getChildByName('item');\n        item.active = true;\n        let target: number = 0;\n        // 防止进度条无法被遮盖\n        switch (index) {\n            case 1:\n                // this.bar.progress = 0;\n                target = 0;\n                break;\n            case 2:\n                // this.bar.progress = 0.5;\n                target = 0.5;\n                break;\n            case 3:\n                // this.bar.progress = 1;\n                target = 1;\n                break;\n        }\n        cc.tween(this.bar).to(0.2, { progress: target }).start();\n    }\n\n    private updateLevel(level: number): void {\n        this.hideAllItem(level);\n        if (level + 1 <= Config.LEVEN_NUMBER) {\n            this.hideAllItem(level + 1);\n            this.currentLevelNode.active = false;\n            this.currentLevelNode = this.node.getChildByName(`level${level + 1}`);\n            this.currentLevelNode.active = true;\n            this.bar.progress = 0;\n        }\n    }\n\n    private hideAllItem(level: number): void {\n        let node: cc.Node = this.node.getChildByName(`level${level}`);\n        for (let i = 1; i < 4; i++) {\n            node.getChildByName(`itemBg${i}`).getChildByName('item').active = false;\n        }\n    }\n\n    private hideAllLevel(): void {\n        for (let i = 1; i < 4; i++) {\n            this.node.getChildByName(`level${i}`).active = false;\n        }\n    }\n\n}\n","import BaseLoader from \"./base/BaseLoader\";\r\nimport { AtlasLoader, AudioLoader, DefaultLoader, ImageLoader, JsonLoader, PrefabLoader, SpineLoader, TextLoader } from \"./base/loader-index\";\r\nimport { LoaderObserver, LoaderObserverParam } from \"./LoaderObserver\";\r\n\r\n/**\r\n * 远程spine数据配置\r\n */\r\nexport class RemoteSpineData {\r\n    public json: string;\r\n    public atlas: string;\r\n    public images: string[];\r\n}\r\n\r\nexport default class ResLoader {\r\n\r\n    // 加载器map集合\r\n    private static _defaultMap: Map<{prototype: cc.Asset}, BaseLoader>;\r\n    // 默认loader\r\n    private static _defaultLoader: DefaultLoader = null;\r\n    // 是否初始化\r\n    private static _init: boolean = false;\r\n    // 加载器观察者列表\r\n    private static _observerList: LoaderObserver[] = [];\r\n\r\n    /** 初始化加载器 */\r\n    public static init (): void {\r\n        if (!ResLoader._init) {\r\n            ResLoader._defaultMap = new Map();\r\n            ResLoader._defaultMap.set(cc.SpriteFrame, new ImageLoader());\r\n            ResLoader._defaultMap.set(cc.SpriteAtlas, new AtlasLoader());\r\n            ResLoader._defaultMap.set(cc.AudioClip, new AudioLoader());\r\n            ResLoader._defaultMap.set(cc.JsonAsset, new JsonLoader());\r\n            ResLoader._defaultMap.set(cc.TextAsset, new TextLoader());\r\n            ResLoader._defaultMap.set(cc.Prefab, new PrefabLoader());\r\n            ResLoader._defaultMap.set(sp.SkeletonData, new SpineLoader());\r\n            // 默认加载器\r\n            ResLoader._defaultLoader = new DefaultLoader();\r\n        }\r\n        ResLoader._init = true;\r\n    }\r\n\r\n    /**\r\n     * 注册观察者\r\n     * @param {LoaderObserver} observer 自定义观察者\r\n     */\r\n    public static addObserver (observer: LoaderObserver): void {\r\n        ResLoader._observerList.push(observer);\r\n    }\r\n\r\n    /**\r\n     * 移除观察者\r\n     * @param {LoaderObserver} observer 自定义观察者 \r\n     * @returns {boolean} 是否移除成功\r\n     */\r\n    public static removeObserver (observer: LoaderObserver): boolean {\r\n        for (let i = ResLoader._observerList.length - 1; i >= 0; i--) {\r\n            let obs = ResLoader._observerList[i];\r\n            if (obs === observer) {\r\n                ResLoader._observerList.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通用资源加载接口（包括本地资源、网络资源和远程资源）\r\n     * @param {string} path 资源路径，可以是本地资源、网络资源和远程资源\r\n     * @param {cc.Asset | Record<string, any>} options 资源类型 | 远程资源可选参数\r\n     * @param {(err, res) => void} onComplete 加载完成回调\r\n     * @param {cc.AssetManager.Bundle | string} bundle 资源所属bundle，可选。\r\n     * @param {(finish: number, total: number, item: cc.AssetManager.RequestItem) => void} onProgress 加载进度\r\n     */\r\n    public static loadRes (\r\n        path: string, \r\n        options: typeof cc.Asset | Record<string, any>, \r\n        onComplete: (err, res) => void, \r\n        bundle?: cc.AssetManager.Bundle | string, \r\n        onProgress?: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void): void {\r\n        // 初始化resloader\r\n        ResLoader.init();\r\n        let curBundle: cc.AssetManager.Bundle = null;\r\n        let tempType = null;\r\n        if (typeof options !== \"object\") {\r\n            tempType = options;\r\n            if (bundle && typeof bundle === \"string\" && bundle !== \"\") {\r\n                curBundle = cc.assetManager.getBundle(bundle);\r\n            } else if (bundle && typeof bundle !== \"string\") {\r\n                curBundle = bundle as cc.AssetManager.Bundle;\r\n            } else {\r\n                curBundle = cc.resources as cc.AssetManager.Bundle;\r\n            }\r\n            if (curBundle) {\r\n                let as = curBundle.get(path, tempType);\r\n                if (as) {\r\n                    ResLoader.__beforeLoadRes(new LoaderObserverParam(path, tempType, curBundle, 0, null));\r\n                    onComplete(null, as);\r\n                    ResLoader.__afterLoadRes(new LoaderObserverParam(path, tempType, curBundle, 0, null));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        let param = new LoaderObserverParam(path, tempType, curBundle, 0, null);\r\n        ResLoader.__beforeLoadRes(param);\r\n        let loader = ResLoader._defaultMap.get(tempType);\r\n        if (!loader) {\r\n            if (typeof options !== \"object\") {\r\n                cc.log(`assets type: ${tempType} is not exists, default loader insteaded!`);\r\n            }\r\n            loader = ResLoader._defaultLoader;\r\n        }\r\n        let startTime = new Date().getTime();\r\n        loader.loadRes(path, options, (_err, _res) => {\r\n            if (onComplete) {\r\n                param.time = new Date().getTime() - startTime; // 计算下载时间\r\n                ResLoader.__afterLoadRes(param);\r\n                onComplete(_err, _res);\r\n            }\r\n        }, curBundle, onProgress);\r\n    }\r\n\r\n    private static __beforeLoadRes (param: LoaderObserverParam): void {\r\n        for (let obs of ResLoader._observerList) {\r\n            obs.beforeLoadRes(param);\r\n        }\r\n    }\r\n\r\n    private static __afterLoadRes (param: LoaderObserverParam): void {\r\n        for (let obs of ResLoader._observerList) {\r\n            obs.afterLoadRes(param);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载目录\r\n     * @param {string} dir 资源目录\r\n     * @param {cc.Asset} type 资源类型\r\n     * @param {(finish: number, total: number, item: cc.AssetManager.RequestItem) => void} onProgress 加载进度回调\r\n     * @param {(error: Error, assets: Array<T>) => void} onComplete 加载完成回调\r\n     * @param {cc.AssetManager.Bundle | string} bundle 资源所属bundle，可选。 \r\n     */\r\n    public static loadDir<T extends cc.Asset> (dir: string, type: typeof cc.Asset, onProgress: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void, onComplete: (error: Error, assets: Array<T>) => void, bundle?: cc.AssetManager.Bundle | string): void {\r\n        let curBundle: cc.AssetManager.Bundle = null;\r\n        if (bundle && typeof bundle === \"string\" && bundle !== \"\") {\r\n            curBundle = cc.assetManager.getBundle(bundle);\r\n        } else if (bundle && typeof bundle !== \"string\") {\r\n            curBundle = bundle as cc.AssetManager.Bundle;\r\n        } else {\r\n            curBundle = cc.resources as cc.AssetManager.Bundle;\r\n        }\r\n        if (!curBundle) {\r\n            onComplete(new Error(`bundle ${bundle} is not exists!`), null);\r\n            return;\r\n        }\r\n        curBundle.loadDir(dir, type, onProgress, onComplete);\r\n    }\r\n\r\n    /**\r\n     * 加载bundle\r\n     * @param {string} nameOrUrl bundle名称或地址\r\n     * @param {Record<string, any>} options 下载bundle的可选参数\r\n     * @param {(err: Error, bundle: cc.AssetManager.Bundle) => void} onComplete 加载完成回调\r\n     */\r\n    public static loadBundle (nameOrUrl: string, options: Record<string, any>, onComplete: (err: Error, bundle: cc.AssetManager.Bundle) => void): void {\r\n        let param = new LoaderObserverParam(nameOrUrl, null, null, 0, null);\r\n        let startTime = new Date().getTime();\r\n        ResLoader.__beforeLoadBundle(param);\r\n        cc.assetManager.loadBundle(nameOrUrl, options, (_err, _bundle) => {\r\n            param.time = new Date().getTime() - startTime; // 加载时间处理\r\n            ResLoader.__afterLoadBundle(param);\r\n            if (onComplete) {\r\n                onComplete(_err, _bundle);\r\n            }\r\n        });\r\n    }\r\n\r\n    private static __beforeLoadBundle (param: LoaderObserverParam): void {\r\n        for (let obs of ResLoader._observerList) {\r\n            obs.beforeLoadBundle(param);\r\n        }\r\n    }\r\n\r\n    private static __afterLoadBundle (param: LoaderObserverParam): void {\r\n        for (let obs of ResLoader._observerList) {\r\n            obs.afterLoadBundle(param);\r\n        }\r\n    }\r\n}","import ResLoader from \"../framework/load/ResLoader\";\nimport LogSystem from \"../system/log/LogSystem\";\n\n/**\n * 资源加载类型， Global 不会被释放bundle\n */\nexport enum ResourceType {\n    default,\n    Global, \n    Normal\n}\n\nclass Asset {\n    public bundle: cc.AssetManager.Bundle;\n    private assetMap: Map<string, cc.Asset>;\n    private resType: ResourceType;\n\n    constructor(resType) {\n        this.assetMap = new Map();\n        this.resType = resType;\n    }\n\n    public loadBundle(bundleName): Promise<any> {\n        return new Promise((reslove, reject) => {\n            ResLoader.loadBundle(bundleName, null, (e, bundle: cc.AssetManager.Bundle) => {\n                if (e) {\n                    reject(e);\n                    return;\n                }\n                this.bundle = bundle;\n                reslove(bundle);\n            })\n        }).catch(e => cc.log(e))\n    }\n\n    public loadRes(path: string, type: typeof cc.Asset, finishCb: (e, asset) => void) {\n        if (this.assetMap.has(path)) {\n            let asset = this.assetMap.get(path);\n            if (finishCb) {\n                finishCb(null, asset);\n            }\n            return;\n        }\n        ResLoader.loadRes(path, type, (e, res: cc.Asset) => {\n            this.assetMap.set(path, res);\n            // res.addRef();\n\n            if (finishCb) {\n                finishCb(null, this.assetMap.get(path));\n                return;\n            }\n        }, this.bundle);\n    }\n\n    public release(releaseComponents?: boolean): string {\n        if (this.bundle.name == 'components' && !releaseComponents) {\n            cc.log('components 不释放');\n            return;\n        }\n        this.assetMap.forEach((res, key) => {\n            // cc.log(`释放${res.name}`);\n            // res.decRef();\n            cc.log(`释放${res.name}`);\n            cc.assetManager.releaseAsset(res)\n            this.bundle.release(key);\n        });\n        this.assetMap.clear();\n        if (this.resType == ResourceType.Global) {\n            return \"\";\n        }\n        cc.log(`释放bundle${this.bundle.name}`);\n        cc.assetManager.removeBundle(this.bundle);\n        return this.bundle.name;\n    }\n\n    public releaseWithOutBundle(releaseComponents?: boolean): string {\n        this.assetMap.forEach((res, key) => {\n            // cc.log(`释放${res.name}`);\n            // res.decRef();\n            cc.log(`释放${res.name}`);\n            cc.assetManager.releaseAsset(res)\n            this.bundle.release(key);\n        });\n        this.assetMap.clear();\n        if (this.resType == ResourceType.Global) {\n            return \"\";\n        }\n        return this.bundle.name;\n    }\n}\n\nexport default class ResourcesManager {\n    private static _instance: ResourcesManager;\n\n    private assetsMap: Map<string, Asset>;\n\n    public static get instance(): ResourcesManager {\n        if (!ResourcesManager._instance) {\n            ResourcesManager._instance = new ResourcesManager();\n        }\n        return ResourcesManager._instance;\n    }\n\n    constructor() {\n        this.assetsMap = new Map();\n    }\n\n    /**\n     * 加载单个资源\n     * @param {string} bundleName\n     * @param {string} resPath \n     * @param {kit.manager.Resources.type} resType 加载类型 \n     * @param {typeof cc.Asset} assetType \n     * @param {(error, res) => void} finishCb  加载完成回调\n     * @returns \n     */\n    public loadRes(bundleName: string, resPath: string, resType: ResourceType, assetType: typeof cc.Asset, finishCb: (error, res) => void): Promise<any> {\n        return new Promise(async (resolve, rej) => {\n            if (bundleName == \"\" || resPath == \"\") {\n                LogSystem.error(`ResourcesManager loadRes bundleName or resPath null`);\n                rej();\n                return;\n            }\n\n            if (this.assetsMap.has(bundleName)) {\n                let asset = this.assetsMap.get(bundleName);\n                asset.loadRes(resPath, assetType, (e, res) => {\n\n                    if (finishCb) {\n                        finishCb(e, res);\n                    }\n                    if (e) {\n                        rej(e);\n                    } else {\n                        resolve(res);\n                    }\n\n                })\n                return;\n            }\n\n            let assetClip = new Asset(resType);\n            await assetClip.loadBundle(bundleName);\n            assetClip.loadRes(resPath, assetType, (e, asset) => {\n                this.assetsMap.set(bundleName, assetClip);\n                if (finishCb) {\n                    finishCb(e, asset);\n                }\n                if (e) {\n                    rej(e);\n                } else {\n                    resolve(asset);\n                }\n\n            });\n\n        }).catch(e => () => {\n            if (finishCb) {\n                finishCb(e, null);\n            }\n        })\n    }\n\n    /**\n     * 加载bundle list\n     * @param nameList \n     * @returns \n     */\n    public loadBundleList (nameList: string[]): Promise<cc.AssetManager.Bundle[] | void> {\n        let list: Promise<any>[] = [];\n        for (let key in nameList) {\n            list.push(\n                this.loadBundle(nameList[key])\n            )\n        }\n        return Promise.all(list).catch((e) => cc.log(e));\n    }\n\n    /** 加载单个bundle */\n    public loadBundle(bundleName: string): Promise<cc.AssetManager.Bundle | void> {\n        return new Promise<cc.AssetManager.Bundle>(async (res, rej) => {\n            if (this.assetsMap.has(bundleName)) {\n                let bundle = this.assetsMap.get(bundleName).bundle;\n                res(bundle);\n                return;\n            }\n            let assetClip = new Asset(ResourceType.Normal);\n            this.assetsMap.set(bundleName, assetClip);\n\n            await assetClip.loadBundle(bundleName);\n            res(assetClip.bundle);\n        }).catch(e => {\n            cc.log(e);\n        })\n    }\n\n    /**\n     * 释放资源\n     * @param {?string | string[]} bundleName 传入null或者“”释放加载过的所有资源， 传入bundleName string 释放对应bundleName以及加载的资源，传入bundleName list释放对应的资源和bundle\n     * @param {?boolean} releaseComponents 释放需要释放Component里的资源 默认不释放， ❗️游戏内禁止释放\n     * @returns \n     */\n    public releaseAsset(bundleName?: string | string[], releaseComponents?: boolean) {\n        cc.log(\"释放资源\", bundleName);\n        if (bundleName && typeof bundleName == \"string\" && bundleName != \"\") {\n            let element = this.assetsMap.get(bundleName);\n            let releaseKey = element.release(releaseComponents);\n            if (releaseKey != '') {\n                this.assetsMap.delete(releaseKey);\n            }\n            return;\n        }\n        // 多个释放\n        if (bundleName && typeof bundleName == \"object\") {\n            bundleName.forEach((item) => {\n                let element = this.assetsMap.get(item);\n                let releaseKey = element.release(releaseComponents);\n                if (releaseKey != '') {\n                    this.assetsMap.delete(releaseKey);\n                }\n            })\n            return;\n        }\n        this.assetsMap.forEach(element => {\n            let releaseKey = element.release(releaseComponents);\n            if (releaseKey != '') {\n                this.assetsMap.delete(releaseKey);\n            }\n        });\n\n    }\n\n    public releaseRes(bundle?: cc.AssetManager.Bundle) {\n        if (bundle) {\n            let element = this.assetsMap.get(bundle.name);\n            if (!element) {\n                cc.assetManager.removeBundle(bundle);\n                return;\n            }\n            let releaseKey = element.releaseWithOutBundle();\n            if (releaseKey != '') {\n                this.assetsMap.delete(releaseKey);\n            }\n            cc.log(this.assetsMap);\n            cc.assetManager.removeBundle(bundle);\n        }\n    }\n\n}\n","\r\nimport BaseLoader from \"./BaseLoader\";\r\n\r\nexport class SpineLoader extends BaseLoader {\r\n\r\n    public loadNetRes(path: string, type: typeof cc.Asset | Record<string, any>, callback: (err: any, res: any) => void): void {\r\n        // 加载网络json资源\r\n        cc.assetManager.loadRemote(path, type, (e, res) => {\r\n            if (e) {\r\n                cc.error(e);\r\n            }\r\n            if (callback) {\r\n                callback(e, res);\r\n            }\r\n        });\r\n    }\r\n\r\n    public loadRemoteRes(path: string, type: any, callback: (err: any, res: any) => void): void {\r\n        // 加载远程待下载图片资源\r\n        cc.log(path, type, callback);\r\n        throw new Error(\"TextLoader loadRemoteRes method not implemented.\");\r\n    }\r\n\r\n    public loadLocalRes(path: string, type: any, onProgress: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void, callback: (err: any, res: any) => void, bundle?: cc.AssetManager.Bundle): void {\r\n        if (bundle) {\r\n            bundle.load(path, type, onProgress, callback);\r\n        } else {\r\n            cc.resources.load(path, type, onProgress, callback);\r\n        }\r\n    }\r\n}\r\n","import PlatformSystem from \"../../framework/platform/PlatformSystem\";\nimport { StringUtils } from \"../../utils/StringUtils\";\nimport ASystem from \"../interface/ASystem\";\nimport HttpSystem from \"../net/http/HttpSystem\";\n\n/**\n * 埋点\n */\nexport default class SpotSystem extends ASystem {\n\n    /** 埋点 */\n    private static readonly LOG_EVENT: string = \"la_logEvent\";\n    /** 初始化埋点sdk */\n    private static readonly LOG_INIT: string = \"la_logInitWithApiKey\";\n    /** 设置用户id */\n    private static readonly LOG_SET_USER_ID: string = \"la_logUserId\";\n    /** app key */\n    private static APP_KEY: string = \"3437b23f038afa01e3c220886da2deda\";\n    /** 埋点url */\n    private static readonly HTTP_HOST: string = \"https://api2.amplitude.com/batch\";\n    /** ios sdk类名 */\n    private static readonly NAME_SPACE_IOS: string = \"LaLogUtli\";\n    /** android sdk类名 */\n    private static readonly NAME_SPACE_ANDROID: string = \"amplitude/LaLogUtli\";\n\n    private static packagePath: string = PlatformSystem.instance.isAndroid ? SpotSystem.NAME_SPACE_ANDROID : SpotSystem.NAME_SPACE_IOS;\n    private static _instance: SpotSystem;\n\n    private baseInfo: any;\n\n    public static get instance(): SpotSystem {\n        if (SpotSystem._instance == null) {\n            SpotSystem._instance = new SpotSystem();\n        }\n        return SpotSystem._instance;\n    }\n\n    /**\n     * @param baseInfo 公参\n     */\n    public init(baseInfo: any, app_key:string): Promise<void> {\n        return new Promise((res, rej) => {\n            SpotSystem.APP_KEY = app_key;\n            this.baseInfo = baseInfo;\n            cc.log(`init spot system, info: ${this.baseInfo}`)\n            res();\n        })\n    }\n\n    /**\n     * 埋点\n     * @param name 名称\n     * @param params 参数\n     */\n    public send(name: string, ...args): void {\n        // if (PlatformSystem.instance.isNative) {\n        //     this.sendSdk(name, ...args);\n        // } else if (PlatformSystem.instance.isBrowser) {\n        //     this.sendHttp(name, ...args);\n        // }\n        this.sendHttp(name, ...args);   // 原生sdk有问题，切换到http埋点\n    }\n\n    /**\n     * 原生sdk埋点\n     * @param name 名称\n     * @param params 参数\n     */\n    public sendSdk(name: string, ...args): void {\n        let str: string = name;\n        if (args) {\n            str = StringUtils.format(name, ...args);\n        }\n        // cc.log(`spot: ${str}`)\n        PlatformSystem.instance.adapter.callFunction(SpotSystem.LOG_EVENT, str, SpotSystem.packagePath);\n    }\n\n    /**\n     * http api 埋点\n     * @param name 名称\n     * @param params 参数\n     * @see https://analytics.amplitude.com/demo/connections/project/168342/sources/setup/HTTP_API?source=connections+page%3A+sources\n     */\n    public sendHttp(name: string, ...args): void {\n        let str: string = name;\n        if (args) {\n            str = StringUtils.format(name, ...args);\n        }\n        let obj: any = {\n            \"api_key\": SpotSystem.APP_KEY,\n            \"events\": [\n                {\n                    \"event_type\": str,\n                    \"time\": Date.now(),\n                    ...this.baseInfo\n                }\n            ]\n        }\n        // cc.log(`spot: ${JSON.stringify(obj)}`)\n        HttpSystem.instance.httpPost(SpotSystem.HTTP_HOST, obj).catch((error) => {\n            cc.error(error);    // 埋点错误不做处理\n        })\n    }\n\n    public release(): void {\n\n    }\n}","import IEntity from \"./entity/IEntity\";\nimport IState from \"./state/IState\";\nimport Telegram from './message/Telegram';\n\n/**\n * 状态机,翻译自游戏编程精粹7，c++版本\n * @class StateMachine\n */\nexport default class StateMachine<T extends IEntity> {\n    private m_pOwner: T;\n    private m_pCurrentState: IState<T>;\n    private m_pPreviousState: IState<T>;\n    private m_pGlobalState: any;\n\n    public constructor(owner: T) {\n        this.m_pOwner = owner;\n        this.m_pCurrentState = null;\n        this.m_pPreviousState = null;\n        this.m_pGlobalState = {};\n    }\n\n    public release(): void {\n        this.m_pCurrentState && this.m_pCurrentState.exit();\n        if (this.m_pGlobalState) {\n            for (let key in this.m_pGlobalState) {\n                this.m_pGlobalState[key].exit();\n                delete this.m_pGlobalState[key]\n            }\n            this.m_pGlobalState = null;\n        }\n    }\n\n    public AddGlobalState(state: any, data?: any): void {\n        let newState: IState<T> = new state()\n        newState.entity = this.m_pOwner;\n        this.m_pGlobalState[state] = newState;\n        // enter 放在后面\n        newState.enter(data);\n    }\n\n    public RemoveGlobalState(state: any): void {\n        if (this.m_pGlobalState[state]) {\n            this.m_pGlobalState[state].exit();\n            delete this.m_pGlobalState[state];\n        }\n    }\n\n    public Update(dt: number): void {\n        if (this.m_pGlobalState !== null) {\n            for (let key in this.m_pGlobalState) {\n                this.m_pGlobalState[key].execute(dt);\n            }\n        }\n        if (this.m_pCurrentState !== null) {\n            this.m_pCurrentState.execute(dt);\n        }\n    }\n\n    /**\n     * 自定义改变状态过程\n     * @param onTransition 自定义过场函数\n     * @example\n     *    this.stateMachine.Transition((currentState: IState<Main>) => {\n     *        let newState: IState<Main> = new stateClass();\n     *        newState.entity = this;\n     *        newState.enter(data).then(() => {\n     *            currentState.exit();\n     *        })\n     *        return newState;\n     *    });\n     */\n    public Transition(onTransition: (currentState: IState<T>) => IState<T>): void {\n        this.m_pPreviousState = this.m_pCurrentState;\n        let newState: IState<T> = onTransition(this.m_pPreviousState);\n        this.m_pCurrentState = newState;\n    }\n\n    public ChangeState(pNewState: any, data?: any): void {\n        this.m_pCurrentState && this.m_pCurrentState.exit(this.m_pOwner);\n        this.m_pPreviousState = this.m_pCurrentState;\n        // this.m_pPreviousState && this.m_pPreviousState.exit(this.m_pOwner);\n        this.m_pCurrentState = new pNewState();\n        this.m_pCurrentState.entity = this.m_pOwner;\n        this.m_pCurrentState.enter(data);\n    }\n\n    public HandleMessage(msg: Telegram): boolean {\n        if (this.m_pCurrentState && this.m_pCurrentState.onMessage(this.m_pOwner, msg)) {\n            return true;\n        }\n        if (this.m_pGlobalState) {\n            this.m_pGlobalState.forEach((element: IState<T>) => {\n                element.onMessage(this.m_pOwner, msg);\n            })\n        }\n        return false;\n    }\n\n    public RevertPreviousState(): void {\n        this.ChangeState(this.m_pPreviousState);\n    }\n\n    public isInState(state: any | IState<T>): boolean {\n        return this.m_pCurrentState instanceof state;\n    }\n\n    public exitCurrentState(data?: any): void {\n        this.CurrentState && this.CurrentState.exit(data);\n        this.m_pCurrentState.entity = null;\n        this.m_pPreviousState = null;\n        this.m_pCurrentState = null;\n    }\n\n    public get CurrentState(): IState<T> {\n        return this.m_pCurrentState;\n    }\n\n    public get GlobalState(): IState<T>[] {\n        return this.m_pGlobalState;\n    }\n\n    public get PreviousState(): IState<T> {\n        return this.m_pPreviousState;\n    }\n}\n","/**\n * 字符串工具\n * @version 1.0\n */\nexport class StringUtils {\n  public static format(sourceStr: string, ...args): string {\n    if (args.length === 0) {\n      return sourceStr;\n    }\n    let str = sourceStr;\n    for (let i = 0; i < args.length; i++) {\n      str = str.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), args[i]);\n    }\n    return str;\n  }\n  /**\n   * 替换字符\n   * @param fromIndex 开始替换的索引，以0开始\n   * @param len 替换的长度\n   * @param sourceStr 源字符串\n   * @param replaceCode 替换成字符串码\n   * @returns string\n   */\n  public static replaceStr(\n    fromIndex: number,\n    len: number,\n    sourceStr: string,\n    replaceCode: string = \"*\"\n  ): string {\n    var tempStr = \"\";\n    var tempLen = sourceStr.length;\n    for (var index = 0; index < tempLen; ++index) {\n      if (index >= fromIndex && index < fromIndex + len) {\n        tempStr += replaceCode;\n      } else {\n        tempStr += sourceStr.charAt(index);\n      }\n    }\n    return tempStr;\n  }\n\n  /**\n   * 字符串长度\n   * @param str 字符串\n   * @returns number\n   */\n  public static strLength(str: string): number {\n    if (str === void 0) {\n      return 0;\n    }\n    var len = 0;\n    for (var i = 0; i < str.length; i++) {\n      if ((str.charCodeAt(i) & 0xff00) != 0) {\n        len++;\n      }\n      len++;\n    }\n    return len;\n  }\n\n  /**\n   * 判断空串\n   */\n  public static isEmpty(obj: any): boolean {\n    if (typeof obj == \"undefined\" || obj == null || obj == \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * 超出部分显示省略号\n   * @param {string} text 原始文本\n   * @param {number} max 最大长度\n   * @param {string} [moreText=\"...\"] 省略号或指定字符\n   */\n  public static moreText(text: string, max: number, moreText: string = \"...\"): string {\n    if (text.length > max) {\n      return text.substring(0, max - 2) + \"...\";\n    } else {\n      return text;\n    }\n  }\n}\n","import { kit } from \"../../../../kit/kit\";\nimport Tigo from \"../Tigo\";\nimport TigoIdleState from \"./TigoIdleState\";\n\n/**\n * tigo pose\n */\nexport default class TigoPoseState implements kit.fsm.State<Tigo>{\n    private static readonly IDLE: string = 'L2_W0_day1_1_tigo_b_daiji';\n    private static readonly TICK_OUT: string = 'L2_W0_day1_1_tigo_b_nachu';\n    private static readonly AIM: string = 'L2_W0_day1_1_tigo_b_yaobai';\n\n    entity: Tigo;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n    enter(data?: any): Promise<any> {\n        this.entity.idleNode.active = true;\n        this.entity.stageWinNode.active = false;\n        this.entity.completeNode.active = false;\n        this.entity.arm.active = false;\n        // 每次进入播放tigo入场动画\n        let sp: sp.Skeleton = this.entity.idleNode.getChildByName(\"L2_W0_day1_1_tigo_b\").getComponent<sp.Skeleton>('sp.Skeleton');\n        kit.manager.Audio.playEffect('SE_zhuashuiguo01_ytz')\n        sp.setAnimation(0, TigoPoseState.TICK_OUT, false);\n        sp.setCompleteListener(() => {\n            this.entity.stateMachine.ChangeState(TigoIdleState);\n        })\n        return Promise.resolve();\n    }\n    execute(data?: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    exit(data?: any): void {\n    }\n\n\n}","/**\n *\n * @author \n */\nexport default class Telegram {\n    /**\n     * these telegrams will be stored in a priority queue. Therefore the >\n     * operator needs to be overloaded so that the PQ can sort the telegrams\n     * by time priority. Note how the times must be smaller than\n     * SmallestDelay apart before two Telegrams are considered unique.\n     */\n    private SmallestDelay: number = 0.25;\n    /**\n     * 发送消息的实体(entity)的id\n     */\n    public Sender: string;\n    /**\n     * 处理消息的实体(entity)的id\n     */\n    public Receiver: string;\n    /**\n     * 一个enum类型的消息类型，实体(entity)根据不同的消息类型进行不同的处理\n     */\n    public Msg: number;\n    /**\n     * 消息可以立即发送或延迟指定的金额时间。\n     * 如果一个延迟是必要的，这个字段是加盖的时间应发送消息。\n     */\n    public DispatchTime: number;\n\n    // 消息附带的额外信息，这个可以根据需求自定义，也可以为null\n    public ExtraInfo: any;\n\n    public time: number;\n\n    public constructor(time: number, sender: string, receiver: string, msg: number, info: any = null) {\n        this.Sender = sender;\n        this.Receiver = receiver;\n        this.Msg = msg;\n        this.DispatchTime = time;\n        this.time = Date.now();\n        this.ExtraInfo = info;\n    }\n\n    public get sortSerial(): number {\n        return this.DispatchTime;\n    }\n}\n","\r\nimport BaseLoader from \"./BaseLoader\";\r\n\r\nexport class TextLoader extends BaseLoader {\r\n\r\n    public loadNetRes(path: string, type: typeof cc.Asset | Record<string, any>, callback: (err: any, res: any) => void): void {\r\n        // 加载网络json资源\r\n        cc.assetManager.loadRemote(path, type, (e, res) => {\r\n            if (e) {\r\n                cc.error(e);\r\n            }\r\n            if (callback) {\r\n                callback(e, res);\r\n            }\r\n        });\r\n    }\r\n\r\n    public loadRemoteRes(path: string, type: any, callback: (err: any, res: any) => void): void {\r\n        // 加载远程待下载图片资源\r\n        cc.log(path, type, callback);\r\n        throw new Error(\"TextLoader loadRemoteRes method not implemented.\");\r\n    }\r\n\r\n    public loadLocalRes(path: string, type: any, onProgress: (finish: number, total: number, item: cc.AssetManager.RequestItem) => void, callback: (err: any, res: any) => void, bundle?: cc.AssetManager.Bundle): void {\r\n        if (bundle) {\r\n            bundle.load(path, type, onProgress, callback);\r\n        } else {\r\n            cc.resources.load(path, type, onProgress, callback);\r\n        }\r\n    }\r\n}\r\n","import { kit } from \"../../../../kit/kit\";\nimport Tigo from \"../Tigo\";\n\n/**\n * 完成游戏\n */\nexport default class TigoCompleteState implements kit.fsm.State<Tigo>{\n    entity: Tigo;\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n    enter(data?: any): Promise<any> {\n        this.entity.idleNode.active = false;\n        this.entity.stageWinNode.active = false;\n        this.entity.completeNode.active = true;\n        this.entity.arm.active = false;\n        kit.manager.Audio.playEffect('SE_zhuashuiguo05_ytz')\n        cc.tween(this.entity.node).to(3, { x: 1200 }).call(() => {\n            this.entity.stateMachine.exitCurrentState();\n        }).start()\n        for (let i = 1; i < 4; i++) {\n            this.entity.node.getChildByName('logo').getChildByName(`box${i}`).active = false;\n        }\n        return Promise.resolve();\n    }\n    execute(data?: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    exit(data?: any): void {\n        // Util.addCoin_midAndMenu(this.entity.node.parent, \"\");\n        window.webframe.Notify.trigger(\"entryMenu\",true);\n    }\n\n\n}","import { kit } from \"../../../../kit/kit\";\nimport Events from \"../Events\";\nimport Tigo from \"../Tigo\";\nimport TigoWinState from \"./TigoWinState\";\n\n/**\n * tigo全局状态\n */\nexport default class TigoGlobalState implements kit.fsm.State<Tigo>{\n    entity: Tigo;\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n    enter(data?: any): Promise<any> {\n        kit.manager.Event.on(Events.GAME_STAGE_COMPLETE, this.onStageComplete, this);\n        return Promise.resolve();\n    }\n    execute(data?: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    exit(data?: any): void {\n        kit.manager.Event.off(Events.GAME_STAGE_COMPLETE, this.onStageComplete, this);\n    }\n\n    private onStageComplete(event: any): void {\n        let level: number = event.data.level;\n        kit.system.timer.doOnce(3000, () => {\n            this.entity.node.getChildByName('logo').getChildByName(`box${level}`).getChildByName('item').active = true\n        })\n        this.entity.stateMachine.ChangeState(TigoWinState, { level: level });\n    }\n\n    private onScore(event: any): void {\n        let level: number = event.data.level;\n    }\n\n}","import { kit } from \"../../../../kit/kit\";\nimport Arm from \"../Arm\";\nimport ArmOutState from \"../arm/ArmOutState\";\nimport Events from \"../Events\";\nimport Tigo from \"../Tigo\";\nimport TigoIdleState from \"./TigoIdleState\";\n\n/**\n * 抓取\n */\nexport default class TigoGrabState implements kit.fsm.State<Tigo>{\n    entity: Tigo;\n    private arm: Arm;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n    enter(data?: any): Promise<any> {\n        this.entity.idleNode.active = true;\n        this.entity.stageWinNode.active = false;\n        this.entity.completeNode.active = false;\n        this.arm = this.entity.arm.getComponent<Arm>(Arm);\n        this.arm.stateMachine.ChangeState(ArmOutState);\n        kit.manager.Event.on(Events.GRAB_ACTION_COMPLETE, this.crabComplete, this);\n        return Promise.resolve();\n    }\n    execute(data?: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    exit(data?: any): void {\n        kit.manager.Event.on(Events.GRAB_ACTION_COMPLETE, this.crabComplete, this);\n    }\n\n    private crabComplete(event: any): void {\n        this.entity.stateMachine.ChangeState(TigoIdleState);\n    }\n\n}","import { kit } from \"../../../../kit/kit\";\nimport Events from \"../Events\";\nimport Tigo from \"../Tigo\";\nimport TigoGrabState from \"./TigoGrabState\";\n\n/**\n * 引导\n */\nexport default class TigoGuideState implements kit.fsm.State<Tigo>{\n    entity: Tigo;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n    enter(data?: any): Promise<any> {\n        kit.system.timer.doOnce(6550, () => {\n            kit.manager.Audio.playEffect('pleaseTap')\n            kit.manager.Event.emit(Events.GAME_STOP);\n            this.entity.guide.active = true;\n            this.entity.guide.on(cc.Node.EventType.TOUCH_START, this.onTouch, this);\n        }, this);\n        return Promise.resolve();\n    }\n    execute(data?: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    exit(data?: any): void {\n        this.entity.guide.active = false;\n        kit.manager.Event.emit(Events.GAME_STAR);\n        this.entity.guide.off(cc.Node.EventType.TOUCH_START, this.onTouch, this);\n    }\n\n    private onTouch(): void {\n        this.entity.stateMachine.RemoveGlobalState(TigoGuideState);\n        this.entity.stateMachine.ChangeState(TigoGrabState);\n        kit.manager.Event.emit(Events.GAME_GUID_COMPLETE)\n    }\n\n}","import { kit } from \"../../../../kit/kit\";\nimport Tigo from \"../Tigo\";\nimport TigoGrabState from \"./TigoGrabState\";\n\n/**\n * tigo待机\n */\nexport default class TigoIdleState implements kit.fsm.State<Tigo>{\n    private static readonly IDLE: string = 'L2_W0_day1_1_tigo_b_daiji';\n    private static readonly TICK_OUT: string = 'L2_W0_day1_1_tigo_b_nachu';\n    private static readonly AIM: string = 'L2_W0_day1_1_tigo_b_yaobai';\n\n    entity: Tigo;\n\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n    enter(data?: any): Promise<any> {\n        this.entity.idleNode.active = true;\n        this.entity.stageWinNode.active = false;\n        this.entity.completeNode.active = false;\n        this.entity.arm.active = false;\n        // 每次进入播放tigo入场动画\n        this.entity.arm.active = true;\n        this.entity.node.on(cc.Node.EventType.TOUCH_START, this.onTouch, this);\n        // Util.addCoin_midAndMenu(this.entity.node.parent,\"\");\n        return Promise.resolve();\n    }\n    execute(data?: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    exit(data?: any): void {\n        this.entity.node.off(cc.Node.EventType.TOUCH_START, this.onTouch, this);\n    }\n\n    private onTouch(event: cc.Event): void {\n        this.entity.stateMachine.ChangeState(TigoGrabState);\n    }\n\n}","/**\n\t * \bTigoManager 原生交互 服务端接口管理\n\t * by lpw  2021/08/18\n*/\n// const GLOBAL = (function () {\n// \tif (typeof self !== 'undefined') {\n// \t\treturn self;\n// \t}\n// \tif (typeof window !== 'undefined') {\n// \t\treturn window;\n// \t}\n// \tif (typeof global !== 'undefined') {\n// \t\treturn global;\n// \t}\n// \tthrow new Error('unable to locate global object');\n// })();\n\nclass TigoManager {\n\tstatic _instance: TigoManager = null;\n\tstatic getInstance() {\n\t\tif (!this._instance) {\n\t\t\tthis._instance = new TigoManager();\n\t\t\tthis._instance.getBaseInfo()\n\t\t}\n\t\tconsole.log(\"TigoManager _instance is success\");\n\t\treturn this._instance;\n\t}\n\n\tuserId = \"\";           //用户ID\n\tclassId = \"\";          //课程ID\n\tmoduleId = \"\";         //模块ID\n\tlessonModuleId = \"\";   //课程模块ID\n\tmanageMentIndex = 1    //打点游戏下标(考虑到如果动这块肯定会动包 对应模块可自行设计)\n\tpackageId = \"\";\t\t\t//课包ID\n\tnextLessonModelId = \"\"\t//下个课程模块ID\n\tnextType = \"\"\t\t\t//下个模块类型\n\n\t//打点类型\n\t//接口文档地址\thttps://pplingo.atlassian.net/wiki/spaces/ED/pages/129598934\n\tManageType = {\n\t\tCocosIn: 1001,      //进入Cocos\n\t\tCocosOut: 1002,     //退出Cocos\n\t\tgameLink: 1003,     //游戏环节对错 \n\t\tgameScore: 1004,    //游戏环节得分(例如语音识别得分)\n\t\tgameEvent: 1005,    //操作事件(没有对错的游戏称为操作事件)\n\t}\n\n\t//打点 result\n\tManageResult = {\n\t\tCocosIn: 0,\n\t\tCocosOut: 0,\n\t\tgameScore: 0,\n\t\tgameLink_Right: 1,   \t//游戏环节正确\n\t\tgameLink_Error: 0,\t\t//游戏环节错误\n\t\tgameEvent: 1,    \t\t//操作事件(没有对错的游戏称为操作事件)\n\t}\n\n\t//上报接口api类型\n\t//上报统计文档地址\thttps://pplingo.atlassian.net/wiki/spaces/ED/pages/129598934\n\t//上报进度文档地址\thttps://pplingo.atlassian.net/wiki/spaces/ED/pages/33785543/APP\n\tReportType = {\n\t\treport_reward: \"api/reward/info\",      \t\t//上报金币\n\t\treport_speed: \"api/course/speed\",    \t\t//上报进度 \n\t\treport_operate: \"api/operate/infoV2\"  \t\t//游戏打点\n\t}\n\n\n\t//cocos 与 native 通信 action \n\t//接口文档地址 https://pplingo.atlassian.net/wiki/spaces/ED/pages/207455354\n\tCocosByNativeAction = {\n\t\tTiGoHttp: \"TiGoHttp\",                        \t\t\t\t//一切请求服务器的行为标志\n\t\tTiGoClose: \"TiGoClose\", \t\t\t\t\t\t\t\t\t\t//cocos 关闭native界面\n\t\treplayOrNext: \"replayOrNext\",\t\t\t\t\t\t\t\t//跳转到重播和下一课程界面\n\t\tTiGoStorage: \"TiGoStorage\",\t\t\t\t\t\t\t\t\t//cocos调用native存储接口\n\t\tTiGoBaseInfo: \"TiGoBaseInfo\",\t\t\t\t\t\t\t\t//获取用户基本信息\n\t\tTiGoLifecycle: \"TiGoLifecycle\",\t\t\t\t\t\t\t\t//通知native cocos加载完成\n\t\tTiGoStopRecord: \"TiGoStopRecord\",\t\t\t\t\t\t\t//通知native录音结束\n\t\tTiGoStartRecord: \"TiGoStartRecord\",\t\t\t\t\t\t\t//通知native录音开始\n\t\tTiGoRecordFinish: \"TiGoRecordFinish\",\t\t\t\t\t\t//native通知cocos录音完成可发起语音测评接口\n\t\tTiGoVoiceEvaluation: \"TiGoVoiceEvaluation\",\t\t\t\t\t//cocos向native发起语音测评 \n\t\tTiGoVoiceEvaluationFinish: \"TiGoVoiceEvaluationFinish\", \t//语音测评结果\n\t\tTiGoAnalyse: \"TiGoAnalyse\"\t\t\t\t\t\t\t\t\t//cocos统计分析记录（新的）\n\t}\n\n\t//设置用户基本信息 new此类时自动调用\n\tsetBaseInfo(userData) {\n\t\tconsole.log(\"setBaseInfo ====== \" + userData);\n\t\tlet json = JSON.parse(userData);\n\t\tif (json) {\n\t\t\tthis.setUserId(json.userId);\n\t\t\tthis.setClassId(json.lessonId);\n\t\t\tthis.setModuleId(json.moduleId);\n\t\t\tthis.setLessonModuleId(json.lessonModuleId);\n\t\t\tthis.setPackageId(json.packageId);\n\t\t\tthis.setNextLessonModelId(json.nextLessonModelId);\n\t\t\tthis.setNextType(json.nextType);\n\t\t}\n\t}\n\n\tsetClassId(cid) {\n\t\tif (!cid) return\n\t\tthis.classId = cid;\n\t}\n\n\tsetUserId(uid) {\n\t\tif (!uid) return\n\t\tthis.userId = uid;\n\t}\n\n\tsetModuleId(mid) {\n\t\tif (!mid) return\n\t\tthis.moduleId = mid;\n\t}\n\n\tsetLessonModuleId(lid) {\n\t\tif (!lid) return\n\t\tthis.lessonModuleId = lid;\n\t}\n\n\tsetPackageId(pid) {\n\t\tif (!pid) return\n\t\tthis.packageId = pid;\n\t}\n\n\tsetNextLessonModelId(pid) {\n\t\tif (!pid) return\n\t\tthis.nextLessonModelId = pid;\n\t}\n\n\tsetNextType(pid) {\n\t\tif (!pid) return\n\t\tthis.nextType = pid;\n\t}\n\n\t//发送close消息给app \n\tcallAppToClose(data, next = false) {\n\n\t\tvar handleData = next ?\n\t\t\t{\n\t\t\t\t\"action\": this.CocosByNativeAction.TiGoClose,\n\t\t\t\t\"param\": {\n\t\t\t\t\t\"closeNext\": data\n\t\t\t\t}\n\t\t\t} :\n\t\t\t{\n\t\t\t\t\"action\": this.CocosByNativeAction.TiGoClose,\n\t\t\t\t\"param\": {\n\n\t\t\t\t}\n\t\t\t}\n\t\tconsole.log(\"callAppToClose ============== \" + JSON.stringify(handleData));\n\t\tthis.getNative(handleData)\n\t}\n\n\t//开启录音\n\tcallAppToRecord(sec, word) {\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": this.CocosByNativeAction.TiGoStartRecord,\n\t\t\t\"param\": {\n\t\t\t\t\"name\": \"record\",\n\t\t\t\t\"time\": sec.toString(),\n\t\t\t\t\"standardText\": word\n\t\t\t}\n\t\t}\n\t\tthis.getNative(handleData)\n\t\tconsole.log(\"callAppToRecord ============== \" + JSON.stringify(handleData));\n\t}\n\n\t//关闭录音\n\tcallAppToStopRecord() {\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": this.CocosByNativeAction.TiGoStopRecord,\n\n\t\t}\n\t\tthis.getNative(handleData)\n\t\tconsole.log(\"callAppToStopRecord ============== \" + JSON.stringify(handleData));\n\t}\n\n\t//语音测评\n\tcallAppToResult(word, path) {\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": this.CocosByNativeAction.TiGoVoiceEvaluation,\n\t\t\t\"param\": {\n\t\t\t\t\"standardText\": word || \"\",\n\t\t\t\t\"path\": path\n\t\t\t}\n\t\t}\n\t\tthis.getNative(handleData)\n\t\tconsole.log(\"callAppToResult ============== \" + JSON.stringify(handleData));\n\t}\n\n\t//存储\n\tcallAppToStorage(method, key, val = 0) {\n\t\tvar value = \"\";\n\t\tswitch (method) {\n\t\t\tcase \"PUT\":\n\t\t\t\tvalue = val.toString()\n\t\t\t\tbreak;\n\t\t}\n\t\tvar handleData = {\n\t\t\t\"action\": this.CocosByNativeAction.TiGoStorage,\n\t\t\t\"param\": {\n\t\t\t\t\"method\": method,// get put clear \n\t\t\t\t\"key\": key,\n\t\t\t\t\"value\": value.toString()\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"callAppToStorage ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\tvar page_num = window.tiGo.callApp(JSON.stringify(handleData));\n\t\t\treturn page_num;\n\t\t}\n\t\tif (window.webkit) {\n\t\t\t// window.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t\tvar page_num = window.prompt(\"callApp\", JSON.stringify(handleData));\n\t\t\tconsole.log(page_num);\n\t\t\treturn page_num;\n\t\t}\n\t}\n\n\t//一切请求服务器的行为 api：接口 ，mehtod：put get post， params：接口所需参数 ，unique：交互app标识\n\tcallAppToHttp(method, coin, speak) {\n\t\tlet u = this.userId;\n\t\tlet l = this.classId;\n\t\tlet lM = this.lessonModuleId;\n\t\tconsole.log(\"userId ====== \" + u + \"   lessonId ====== \" + l + \"    lessonModuleId ===== \" + lM)\n\t\tvar h = {\n\t\t\t\"userId\": u,\n\t\t\t\"lessonId\": l,\n\t\t\t\"lessonModelId\": lM,\n\t\t\t\"redVal\": coin,\n\t\t\t\"openVal\": speak\n\n\t\t}\n\t\tvar handleData = {\n\t\t\t\"action\": this.CocosByNativeAction.TiGoHttp,\n\t\t\t\"param\": {\n\t\t\t\t\"url\": this.ReportType.report_reward,\n\t\t\t\t\"method\": method,\n\t\t\t\t\"params\": h,\n\t\t\t\t\"unique\": this.classId\n\t\t\t}\n\t\t}\n\t\tthis.getNative(handleData)\n\t\tconsole.log(\"callAppToHttp ============== \" + JSON.stringify(handleData));\n\t}\n\n\tcallAppToLoaded() {\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": this.CocosByNativeAction.TiGoLifecycle,\n\t\t\t\"param\": {\n\t\t\t\t\"name\": \"loaded\",\n\t\t\t\t\"param\": \"\"\n\t\t\t}\n\t\t}\n\t\tthis.getNative(handleData)\n\t\tconsole.log(\"callAppToLoaded ============== \" + JSON.stringify(handleData));\n\t}\n\n\t//获取用户信息 返回值 {}\n\tgetBaseInfo(): string {\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": this.CocosByNativeAction.TiGoBaseInfo,\n\t\t}\n\t\tconsole.log(\"getBaseInfo ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\tvar BaseInfo = window.tiGo.callApp(JSON.stringify(handleData));\n\t\t\tthis.setBaseInfo(BaseInfo)\n\t\t\tconsole.log(BaseInfo);\n\t\t\tconsole.log(\"tiGo BaseInfo ==== \" + BaseInfo);\n\t\t\treturn BaseInfo;\n\t\t}\n\t\tif (window.webkit) {\n\t\t\t// window.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t\tvar BaseInfo = window.prompt(\"callApp\", JSON.stringify(handleData));\n\t\t\tthis.setBaseInfo(BaseInfo)\n\t\t\tconsole.log(\"webkit BaseInfo ==== \" + BaseInfo);\n\t\t\treturn BaseInfo;\n\t\t}\n\t}\n\n\tgetAppInfo(): { userId: string, lessonId: string, lessonModuleId: string, moduleId: string, packageId: string, nextLessonModelId: string, nextType: string, gameId: string, propId: string, token: string, moduleName: string, lessonName: string, weekName: string, levelName: string, versionName: string } {\n\t\tlet handleData = { \"action\": this.CocosByNativeAction.TiGoBaseInfo };\n\t\tlet info = null;\n\t\tif (window.tiGo) {\n\t\t\tinfo = window.tiGo.callApp(JSON.stringify(handleData));\n\t\t\treturn JSON.parse(info);\n\t\t} else if (window.webkit) {\n\t\t\tinfo = window.prompt(\"callApp\", JSON.stringify(handleData));\n\t\t\treturn JSON.parse(info);\n\t\t}\n\t\treturn null;\n\t}\n\n\tcallAppToCollect(gameIndex, type, result) {\n\t\tvar h = {\n\t\t\t\"userId\": this.userId,\n\t\t\t\"lessonId\": this.classId,\n\t\t\t\"lessonModelId\": this.lessonModuleId,\n\t\t\t\"gameIndex\": gameIndex,\n\t\t\t\"type\": type,\n\t\t\t\"result\": result,\n\t\t\t\"timestamp\": this.getTime()\n\t\t}\n\t\tvar handleData = {\n\t\t\t\"action\": this.CocosByNativeAction.TiGoHttp,\n\t\t\t\"param\": {\n\t\t\t\t\"url\": this.ReportType.report_operate,\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"params\": h\n\t\t\t}\n\t\t}\n\t\tthis.getNative(handleData)\n\t\tconsole.log(\"callAppToCollect ============== \" + JSON.stringify(handleData));\n\t}\n\n\tgetTime() {\n\t\tvar time = Date.now().toString();//获取到毫秒的时间戳，精确到毫秒\n\t\ttime = time.substr(0, 10);//精确到秒\n\t\treturn time;\n\t}\n\n\t/**\n\t * 埋点\n\t * @param event 事件ID\n\t * @param data 事件信息\n\t */\n\tcallPoint(event: string, data: any) {\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": this.CocosByNativeAction.TiGoAnalyse,\n\t\t\t\"param\": {\n\t\t\t\t\"analyseAction\": \"logEvent\",\n\t\t\t\t\"analyseParam\": {\n\t\t\t\t\t\"analyseId\": event,\n\t\t\t\t\t\"analyseData\": data\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.getNative(handleData)\n\t\tconsole.log(\"callAppToLoaded ============== \" + JSON.stringify(handleData));\n\t}\n\n\n\t//向服务器上报进度\n\tcallAppToSpeed() {\n\t\tlet url = this.ReportType.report_speed\n\t\tlet params = {\n\t\t\t\"userId\": this.userId,\n\t\t\t\"type\": this.moduleId,\n\t\t\t\"speedVal\": 2,\n\t\t\t\"lessonModelId\": this.lessonModuleId,\n\t\t\t\"packageId\": this.packageId,\n\t\t\t\"nextLessonModelId\": this.nextLessonModelId,\n\t\t\t\"nextType\": this.nextType\n\t\t}\n\t\tthis.callAppToHttp(url, \"POST\", params)\n\t}\n\n\tgetNative(handleData) {\n\t\t//ios\n\t\tif (window.tiGo) {\n\t\t\twindow.tiGo.callApp(JSON.stringify(handleData));\n\t\t}\n\t\t//android\n\t\tif (window.webkit) {\n\t\t\twindow.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t}\n\t}\n}\n//注册app访问cocos的全局函数\n//msg1 : 具体内容跟app协商\nwindow.callCocos = function (msg1) {\n\tif (msg1.action == \"TiGoLifecycle\") {\n\t\twindow.webframe.Notify.trigger(\"callCocos_loaded\");\n\t} else {\n\t\twindow.webframe.Notify.trigger(\"callCocos_data\", msg1);\n\t}\n\n\treturn \"callByAndroidParam ok!\";\n};\n\nexport default TigoManager.getInstance();\n// window[\"_TigoManager\"] = TigoManager.getInstance();\n// GLOBAL._TigoManager = TigoManager.getInstance();\n\n","import { kit } from \"../../../../kit/kit\";\nimport Events from \"../Events\";\nimport Tigo from \"../Tigo\";\nimport TigoCompleteState from \"./TigoCompleteState\";\nimport TigoPoseState from \"./TIgoPoseState\";\n\n/**\n * 阶段胜利\n */\nexport default class TigoWinState implements kit.fsm.State<Tigo>{\n    private static readonly IDLE: string = 'L2_W0_day1_1_tigo_z_daiji';\n    private static readonly HAPPY: string = 'L2_W0_day1_1_tigo_z_huanhu';\n    entity: Tigo;\n    onMessage(entity: kit.fsm.Entity, telegram: kit.fsm.Telegrams): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n    enter(data?: any): Promise<any> {\n        this.entity.idleNode.active = false;\n        this.entity.stageWinNode.active = true;\n        this.entity.completeNode.active = false;\n        this.entity.arm.active = false;\n        let sp: sp.Skeleton = this.entity.stageWinNode.getChildByName(\"L2_W0_day1_1_tigo_z\").getComponent<sp.Skeleton>('sp.Skeleton');\n        let sp2: sp.Skeleton = this.entity.stageWinNode.getChildByName(\"L2_W0_day1_1_hopper_z\").getComponent<sp.Skeleton>('sp.Skeleton');\n        if ((!data) || (data.level < 3)) {\n            sp.setAnimation(0, TigoWinState.IDLE, true);\n            sp2.setAnimation(0, 'L2_W0_day1_1_hopper_z_daiji', true);\n            kit.system.timer.doOnce(1000, () => {\n                sp.setAnimation(0, TigoWinState.HAPPY, true);\n                sp2.setAnimation(0, 'L2_W0_day1_1_hopper_z_huahu', true);\n                kit.system.timer.doOnce(3000, () => {\n                    this.entity.stateMachine.ChangeState(TigoPoseState);\n                })\n            })\n        } else {\n            sp.setAnimation(0, TigoWinState.IDLE, true);\n            sp2.setAnimation(0, 'L2_W0_day1_1_hopper_z_daiji', true);\n            kit.system.timer.doOnce(1000, () => {\n                sp.setAnimation(0, TigoWinState.HAPPY, true);\n                sp2.setAnimation(0, 'L2_W0_day1_1_hopper_z_huahu', true);\n            })\n        }\n        kit.manager.Event.on(Events.GAME_COMPLETE, this.onLearnComplete, this);\n        return Promise.resolve();\n    }\n    execute(data?: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    exit(data?: any): void {\n        kit.manager.Event.off(Events.GAME_COMPLETE, this.onLearnComplete, this);\n    }\n\n    private onLearnComplete(): void {\n        cc.tween(this).delay(2.6).call(() => {\n            this.entity.stateMachine.ChangeState(TigoCompleteState);\n        }).start()\n    }\n\n}","import { kit } from \"../../../kit/kit\";\nimport TigoGlobalState from \"./tigo/TigoGloabelState\";\nimport TigoGuideState from \"./tigo/TigoGuideState\";\nimport TigoWinState from \"./tigo/TigoWinState\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Tigo extends cc.Component implements kit.fsm.Entity {\n\n    @property(cc.Prefab)\n    armPrefab: cc.Prefab = null;\n\n    @property(cc.Node)\n    idleNode: cc.Node = null;\n\n    @property(cc.Node)\n    stageWinNode: cc.Node = null;\n\n    @property(cc.Node)\n    completeNode: cc.Node = null;\n\n    @property(cc.Node)\n    guide: cc.Node = null;\n\n    public stateMachine: kit.fsm.StateManager<Tigo>;\n    public arm: cc.Node;\n    public sid: string = \"tigo\";\n\n    onLoad() {\n        this.stateMachine = new kit.fsm.StateManager<Tigo>(this);\n        this.guide.active = false;\n        this.idleNode.active = true;\n        this.stageWinNode.active = false;\n        this.completeNode.active = false;\n    }\n\n    public init(): void {\n        this.arm = cc.instantiate(this.armPrefab);\n        this.arm.x = 60;\n        this.arm.y = 128;\n        this.node.getChildByName('logo').addChild(this.arm, -1);\n        this.stateMachine.AddGlobalState(TigoGlobalState);\n        this.stateMachine.AddGlobalState(TigoGuideState);\n        this.stateMachine.ChangeState(TigoWinState);\n    }\n\n}\n","import { NumberUtils } from \"./NumberUtils\";\n\n/**\n * 时间工具\n * @version 1.0\n */\nexport class TimeUtils {\n  /**\n   * 根据指定格式格式化时间\n   * dateToFormate(new Date(), \"yyyy-MM-dd hh:mm:ss\");\n   * @param Date data对象\n   * @param fmt 时间格式，如 yyyy-MM-dd hh:mm:ss\n   * @returns {string}\n   */\n  public static dateToFormate(date: Date, fmt: string): string {\n    let o: any = {\n      \"M+\": date.getMonth() + 1, // 月份\n      \"d+\": date.getDate(), // 日\n      \"h+\": date.getHours(), // 小时\n      \"m+\": date.getMinutes(), // 分\n      \"s+\": date.getSeconds(), // 秒\n      \"q+\": Math.floor((date.getMonth() + 3) / 3), // 季度\n      S: date.getMilliseconds() // 毫秒\n    };\n    if (/(y+)/.test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    for (let k in o) {\n      if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n        fmt = fmt.replace(\n          RegExp.$1,\n          RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n        );\n      }\n    }\n    return fmt;\n  }\n\n  /**\n   * 将一个秒数转换为：小时:分钟:秒,譬如：12：23：45\n   * @param number time 时间戳\n   * @returns {string}\n   */\n  public static toDate(time: number): string {\n    let result: string = \"\";\n    if (time <= 0) { return \"00:00:00\"; }\n    let hour = 0;\n    if (time >= 3600) {\n      hour = Math.floor(NumberUtils.floatDiv(time, 3600));\n      time %= 3600;\n    }\n    let minute = 0;\n    if (time >= 60) {\n      minute = Math.floor(NumberUtils.floatDiv(time, 60));\n      time %= 60;\n    }\n    let second = Math.floor(time);\n    if (hour < 10) { result += \"0\" + hour; }\n    else { result += hour.toFixed(); }\n    result += \":\";\n    if (minute < 10) { result += \"0\" + minute; }\n    else { result += minute.toFixed(); }\n    result += \":\";\n    if (second < 10) { result += \"0\" + second; }\n    else { result += second.toFixed(); }\n    return result;\n  }\n\n}\n","\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n\t@property(cc.Label)\n\tTime: cc.Label = null;\n\n\tstamp = 0;\n\tcurTime = 0;\n\tmainCom = null;\n\n\tupdateTimer(dt) {\n\t\tthis.stamp += dt;\n\t\tif (this.stamp >= 1) {\n\t\t\tthis.stamp -= 1;\n\t\t\tthis.curTime--;\n\t\t\tthis.Time.string = (this.curTime > 9 ? '' : '0') + this.curTime;\n\t\t\tif (this.curTime <= 0) {\n\t\t\t\tthis.timeUp();\n\t\t\t}\n\t\t}\n\t}\n\n\ttimeUp() {\n\t\t// this.unschedule(this.updateTimer);\n\t\tthis.scheduleOnce(() => this.close(), 0.5);\n\t\tthis.mainCom.whenTimeup();\n\t}\n\n\tshowTimer(time, mc) {\n\t\tthis.close();\n\t\tthis.node.active = true;\n\t\tthis.Time.string = (time > 9 ? '' : '0') + time;\n\t\tthis.curTime = time;\n\t\tthis.mainCom = mc;\n\t\tthis.stamp = 0;\n\t\tthis.schedule(this.updateTimer, 0.1);\n\t}\n\n\tstopTimer() {\n\t\tcc.log('into time stop-----')\n\t\tthis.unschedule(this.updateTimer);\n\t}\n\n\tresumeTimer() {\n\t\tcc.log('into time resume-----')\n\t\tthis.schedule(this.updateTimer, 0.1);\n\t}\n\n\tclose() {\n\t\tthis.unschedule(this.updateTimer);\n\t\tthis.node.active = false;\n\t}\n\n}\n","import ASystem from \"../interface/ASystem\";\n\n/**\n * 时间系统\n */\nexport default class TimerSystem extends ASystem {\n\n    private static _instance: TimerSystem;\n    private static INTERVAL: number = 1 / 60;\n\n    private _pool: TimerHandler[] = new Array<TimerHandler>();\n    private _handlers: any = {};\n    private _currTimer: number = 0;\n    private _currFrame: number = 0;\n    private _count: number = 0;\n    private _index: number = 0;\n    private _startTime: number = 0;\n\n    public static get instance(): TimerSystem {\n        if (TimerSystem._instance == null) {\n            TimerSystem._instance = new TimerSystem();\n        }\n        return TimerSystem._instance;\n    }\n\n    public init(): Promise<void> {\n        return new Promise((res, rej) => {\n            this._startTime = Date.now();\n            this._currTimer = Date.now();\n            cc.director.getScheduler().enableForTarget(this)\n            cc.director.getScheduler().schedule(this.onEnterFrame, this, TimerSystem.INTERVAL);\n            res();\n        })\n    }\n\n\n    public onEnterFrame(elapsed?: any): void {\n        this._currFrame++;\n        this._currTimer = Date.now();\n        let k: any;\n        for (k in this._handlers) {\n            if (k !== \"undefined\") {\n                let handler: TimerHandler = this._handlers[k];\n                let t: number = handler.userFrame ? this._currFrame : this._currTimer;\n                if (t >= handler.exeTime) {\n                    let method: Function = handler.method;\n                    let args: any[] = handler.args || [elapsed];\n                    if (handler.repeat) {\n                        while (t >= handler.exeTime && k in this._handlers) {\n                            handler.exeTime += handler.delay;\n                            method.apply(handler.thisObj, args);\n\n                        }\n                    } else {\n                        method.apply(handler.thisObj, args);\n                        this.clearTimer(k);\n                    }\n                }\n            } else {\n                console.log(k);\n            }\n        }\n    }\n\n    private create(useFrame: boolean, repeat: boolean, delay: number, method: Function, thisObj: any = null, args: any[] = null, cover: boolean = true): any {\n        let key: any;\n        if (cover) {\n            // 先删除相同函数的计时\n            this.clearTimer(method);\n            key = method;\n        } else {\n            key = this._index++;\n        }\n\n        // 如果执行时间小于1，直接执行\n        if (delay < 1) {\n            method.apply(null, args)\n            return -1;\n        }\n        let handler: TimerHandler = this._pool.length > 0 ? this._pool.pop() : new TimerHandler();\n        handler.userFrame = useFrame;\n        handler.repeat = repeat;\n        handler.delay = delay;\n        handler.method = method;\n        handler.thisObj = thisObj;\n\n        handler.args = args;\n        handler.exeTime = delay + (useFrame ? this._currFrame : this._currTimer);\n        this._handlers[key] = handler;\n        this._count++;\n        return key;\n    }\n\n    /**定时执行一次\n     * @params    delay  延迟时间(单位毫秒)\n     * @params    method 结束时的回调方法\n     * @params    args   回调参数\n     * @params    cover  是否覆盖(true:同方法多次计时，后者覆盖前者。false:同方法多次计时，不相互覆盖)\n     * @return  cover=true时返回回调函数本身，cover=false时，返回唯一ID，均用来作为clearTimer的参数\n     */\n    public doOnce(delay: number, method: Function, thisObj: any = null, args: any[] = null, cover: boolean = true): any {\n        return this.create(false, false, delay, method, thisObj, args, cover);\n    }\n\n    /**定时重复执行\n     * @params    delay  延迟时间(单位毫秒)\n     * @params    method 结束时的回调方法\n     * @params    args   回调参数\n     * @params    cover  是否覆盖(true:同方法多次计时，后者覆盖前者。false:同方法多次计时，不相互覆盖)\n     * @return  cover=true时返回回调函数本身，cover=false时，返回唯一ID，均用来作为clearTimer的参数\n     */\n    public doLoop(delay: number, method: Function, thisObj: any = null, args: any[] = null, cover: boolean = true): any {\n        return this.create(false, true, delay, method, thisObj, args, cover);\n    }\n\n    /**定时执行一次(基于帧率)\n     * @params    delay  延迟时间(单位为帧)\n     * @params    method 结束时的回调方法\n     * @params    args   回调参数\n     * @params    cover  是否覆盖(true:同方法多次计时，后者覆盖前者。false:同方法多次计时，不相互覆盖)\n     * @return  cover=true时返回回调函数本身，cover=false时，返回唯一ID，均用来作为clearTimer的参数\n     */\n    public doFrameOnce(delay: number, method: Function, thisObj: any = null, args: any[] = null, cover: boolean = true): any {\n        return this.create(true, false, delay, method, thisObj, args, cover);\n    }\n\n    /**定时重复执行(基于帧率)\n     * @params    delay  延迟时间(单位为帧)\n     * @params    method 结束时的回调方法\n     * @params    args   回调参数\n     * @params    cover  是否覆盖(true:同方法多次计时，后者覆盖前者。false:同方法多次计时，不相互覆盖)\n     * @return  cover=true时返回回调函数本身，否则返回唯一ID，均用来作为clearTimer的参数\n     */\n    public doFrameLoop(delay: number, method: Function, thisObj: any = null, args: any[] = null, cover: boolean = true): any {\n        return this.create(true, true, delay, method, thisObj, args, cover);\n    }\n\n    /** 定时器执行数量 */\n    public get count(): number {\n        return this._count;\n    }\n\n    /**清理定时器\n     * @params    method 创建时的cover=true时method为回调函数本身，否则method为返回的唯一ID\n     */\n    public clearTimer(method: any): void {\n        let handler: TimerHandler = this._handlers[method];\n        if (handler != null) {\n            delete this._handlers[method];\n            handler.clear();\n            this._pool.push(handler);\n            this._count--;\n        }\n    }\n\n    /**\n     * 方法是否在定时器的队列中\n     */\n    public running(method: any): boolean {\n        if (this._handlers[method] != null) {\n            return true;\n        }\n        return false;\n    }\n\n    public release(): void {\n        for (let handler in this._handlers) {\n            this.clearTimer(this._handlers[handler]);\n        }\n    }\n\n}\n\nclass TimerHandler {\n    /** 执行间隔 */\n    public delay: number = 0;\n    /** 是否重复执行 */\n    public repeat: boolean;\n    /** 是否用帧率 */\n    public userFrame: boolean;\n    /** 执行时间 */\n    public exeTime: number = 0;\n    /** 处理方法 */\n    public method: Function;\n    /** 参数 */\n    public args: any[];\n    /** this对象 */\n    public thisObj: any;\n\n    /** 清理 */\n    public clear(): void {\n        this.method = null;\n        this.args = null;\n        this.thisObj = null;\n    }\n}","import ResLoader from \"../framework/load/ResLoader\";\nimport { kit } from \"../kit\";\nimport LogSystem from \"../system/log/LogSystem\";\n\n/**\n * 解析UI节点工具\n */\nexport default class UIUtils {\n\n    /***\n     * 生成子节点的唯一标识快捷访问\n     * @param node\n     * @param map\n     */\n    public static createSubNodeMap(node: cc.Node, map: Map<string, cc.Node>) {\n        let children = node.children;\n        if (!children) {\n            return;\n        }\n        for (let t = 0, len = children.length; t < len; ++t) {\n            let subChild = children[t];\n            map.set(subChild.name, subChild);\n            UIUtils.createSubNodeMap(subChild, map);\n        }\n    }\n\n    /**\n     * 返回当前节点所有节点,一唯一标识存在\n     * @param node 父节点\n     * @return {Object} 所有子节点的映射map\n     */\n    public static seekAllSubView(node: cc.Node): UIContainer {\n        let map = new Map<string, cc.Node>();\n        UIUtils.createSubNodeMap(node, map);\n        return new UIContainer(map);\n    }\n}\n\nexport class UIContainer {\n    /** 所有节点集合 */\n    private _uiNodesMap: Map<string, cc.Node>;\n\n    // 点击音效\n    private _clickSound = \"commonRes/sound/btn_click\";\n    // 默认bundle\n    private _bundleName = 'components';\n\n    public constructor(nodesMap: Map<string, cc.Node>) {\n        this._uiNodesMap = nodesMap;\n        this.preloadClickEffect();\n    }\n    /**\n     * 根据节点名字获取节点\n     * @param {string}name 节点名字\n     * @return {cc.Node}\n     */\n    public getNode(name: string): cc.Node {\n        return this._uiNodesMap.get(name);\n    }\n\n    /**\n     * 根据节点名字和组件类型获取组件对象\n     * @param {string}name 节点名字\n     * @param {{prototype: cc.Component}}com 组建类型\n     * @return {cc.Component}\n     */\n    public getComponent<T extends cc.Component>(name: string, com: { prototype: T }): T {\n        let node = this._uiNodesMap.get(name);\n        if (node) {\n            return node.getComponent(com);\n        }\n        return null;\n    }\n\n    /**\n     * 注册或发送点击事件，默认带点击音效\n     * @param {cc.Node | string} node 事件节点  \n     * @param {string | (event: any) => void} handler 事件名称 | 事件回调函数 \n     * @param {any} target 目标 \n     * @param {any} param 参数 \n     * @param {string} sound 声音，有默认 \n     * @param {string} bundleName bundle名称 默认components\n     */\n    public onClick<T extends (event: any) => void>(node: cc.Node | string, handler: T, target?: any, param?: any, sound?: string, bundleName?: string | cc.AssetManager.Bundle): void {\n        if (!node) {\n            LogSystem.warn(`onClick参数node不能为空：${node}`);\n            return;\n        }\n        let tempNode: cc.Node = null;\n        if (typeof node === \"string\") {\n            tempNode = this.getNode(node);\n        } else {\n            tempNode = node;\n        }\n        tempNode.on(cc.Node.EventType.TOUCH_START, (event) => {\n            let soundName = (typeof sound == \"string\") ? sound : this._clickSound;\n            let bundle = (typeof bundleName == \"string\") ? bundleName : this._bundleName;\n            kit.manager.Audio.playEffect(bundle, soundName);\n            if (handler) { handler.call(target, param); }\n\n        }, target);\n    }\n\n    /**\n     * 移除节点的点击事件\n     * @param {cc.Node | string} node 事件节点 \n     */\n    public offClick(node: cc.Node | string): void {\n        if (!node) {\n            LogSystem.warn(`offClick参数node不能为空：${node}`);\n            return;\n        }\n        let tempNode: cc.Node = null;\n        if (typeof node === \"string\") {\n            tempNode = this.getNode(node);\n        } else {\n            tempNode = node;\n        }\n        tempNode.off(cc.Node.EventType.TOUCH_START);\n    }\n\n    preloadClickEffect() {\n        ResLoader.loadRes(this._clickSound, cc.AudioClip, () => { }, this._bundleName);\n    }\n\n}\n","export default class UrlUtils {\n    /**\n     * 获取当前url页面后面的参数\n     * @param key:要获取参数键值\n     * @return 返回获取对应键的值，如果没有获取到键就返回一个''空字符串\n     */\n    static getQueryString(key: string): string {\n        let reg = new RegExp(key + '=([^&]*)(?:&)?');\n        let rs = window.location.search.substr(1).match(reg);\n        if (rs != null) return rs[1];\n        return null;\n    }\n\n    /**\n     * 获取json中的url\n     * @param {*} jsonObj\n     * @param {string[]} type\n     * @returns {string[]}\n     * @memberof UrlUtils\n     */\n    static getUrlArrayByFileType(jsonObj, type: string): string[] {\n        console.log(`getUrlArrayByFileType`)\n        if (!jsonObj) {\n            console.log('jsonObj is null , please check your json!!!')\n            return\n        }\n        let urls: string[] = []\n        let len = type.length\n        function traverseJson(obj) {\n            for (let o in obj) {\n                if (typeof (obj[o]) === 'object') {\n                    traverseJson(obj[o])\n                } else if (typeof (obj[o]) === 'string') {\n                    if (obj[o].slice(-len, obj[o].length) === type) {\n                        urls.push(obj[o])\n                    }\n                }\n            }\n        }\n        traverseJson(jsonObj)\n        if (urls.length > 1) {/** 去重 */\n            let list = [urls[0]]\n            urls.sort()\n            for (let i = 0; i < urls.length; i++) {\n                if (urls[i] !== list[list.length - 1]) {\n                    list.push(urls[i])\n                }\n            }\n            return list\n        }\n        return urls\n    }\n\n    static parseUrl(url: string): any {\n        let m = url.match(/^(([^:\\/?#]+:)?(?:\\/\\/((?:([^\\/?#:]*):([^\\/?#:]*)@)?([^\\/?#:]*)(?::([^\\/?#:]*))?)))?([^?#]*)(\\?[^#]*)?(#.*)?$/),\n            r = {\n                hash: m[10] || \"\",                   // #asd\n                host: m[3] || \"\",                    // localhost:257\n                hostname: m[6] || \"\",                // localhost\n                href: m[0] || \"\",                    // http://username:password@localhost:257/deploy/?asd=asd#asd\n                origin: m[1] || \"\",                  // http://username:password@localhost:257\n                pathname: m[8] || (m[1] ? \"/\" : \"\"), // /deploy/\n                port: m[7] || \"\",                    // 257\n                protocol: m[2] || \"\",                // http:\n                search: m[9] || \"\",                  // ?asd=asd\n                username: m[4] || \"\",                // username\n                password: m[5] || \"\"                 // password\n            };\n        if (r.protocol.length == 2) {\n            r.protocol = \"file:///\" + r.protocol.toUpperCase();\n            r.origin = r.protocol + \"//\" + r.host;\n        }\n        r.href = r.origin + r.pathname + r.search + r.hash;\n        return m && r;\n    }\n    // parseUrl(\"http://username:password@localhost:257/deploy/?asd=asd#asd\");\n\n    static getUrlPathName(url: string): string {\n        let ret: any = this.parseUrl(url);\n        if (ret && ret.pathname) {\n            return ret.pathname;\n        }\n        return \"\"\n    }\n\n}","import AudioManager from \"./AudioManager\"\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nclass Util extends cc.Component {\n\n    @property(cc.Prefab)\n    coin_small: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    coin_mid: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    coin_large: cc.Prefab = null;\n\n\n    private static instance: Util;\n    public static getInstance(): Util {\n        if (this.instance == null) {\n            this.instance = new Util();\n        }\n        return this.instance;\n    }\n    PrefabNode: cc.Node = null\n\n    voiceNode: cc.Node = null;\n    voice_name = \"prefab_common/voice\";\n\n    node_name = \"prefab_common/startLayer\";\n    coin_name_1 = \"prefab_common/coin_small\";\n    coin_name_2 = \"prefab_common/coin_mid\";\n    coin_name_3 = \"prefab_common/coin_large\";\n    exitbutton = \"prefab_common/exitbutton\";\n\n    onLoad() {\n        cc.log(this.coin_small);\n    }\n\n    addVocie(node: cc.Node, callBack: Function, that: any) {\n        cc.loader.loadRes(this.voice_name, cc.Prefab, (err, Prefab) => {\n            if (err) {\n                console.log(err, \"Voice 加载失败===============>>\")\n            } else {\n                let voice = cc.instantiate(Prefab)\n                let clickBack = ()=>{\n                    callBack && callBack.bind(that)()\n                }\n                voice.on('click', clickBack, that);\n                node.addChild(voice,996)\n                voice.name = \"voices\"\n                this.voiceNode = voice\n            }\n        });\n    }\n\n    addExitbutton(node: cc.Node, callBack: Function, that: any) {\n        cc.loader.loadRes(this.exitbutton, cc.Prefab, (err, Prefab) => {\n            if (err) {\n                console.log(err, \"exitbutton 加载失败===============>>\")\n            } else {\n                let exitbutton:cc.Node = cc.instantiate(Prefab)\n                let clickBack = ()=>{\n                    // TigoManager.callAppToCollect(1,1002,1);\n                    callBack && callBack.bind(that)()\n                }\n                let but = exitbutton.getChildByName('exbt');\n                but.on('click', clickBack, that);\n                node.addChild(exitbutton,996)\n            }\n        });\n    }\n    \n    // stopVoiceAni(){\n    //     this.voiceNode.getComponent(cc.Animation).play(\"voice_end\")\n    // }\n\n    // playVoiceAni(){\n    //     this.voiceNode.getComponent(cc.Animation).play(\"voice\")\n    // }\n\n    stopVoiceAni(){\n        if(this.voiceNode)\n        {\n            this.voiceNode.getComponent(cc.Animation).play(\"voice_end\")\n        }\n    }\n\n    playVoiceAni(){\n        if(this.voiceNode)\n        {\n            this.voiceNode.getComponent(cc.Animation).play(\"voice\")\n        }\n    }\n\n    addStartLayer(node: cc.Node, callBack: Function, that: any) {\n        cc.loader.loadRes(this.node_name, cc.Prefab, (err, Prefab) => {\n            if (err) {\n                console.log(err, \"startNode 加载失败===============>>\")\n            } else {\n                this.PrefabNode = cc.instantiate(Prefab)\n                this.setStartBtnBack(callBack, that)\n                node.addChild(this.PrefabNode,999)\n            }\n        });\n    }\n\n    setStartBtnBack(callBck: Function, that: any) {\n        let btn = this.PrefabNode.getChildByName(\"start\")\n        let clickBack = () => {\n            this.PrefabNode.active = false\n            callBck && callBck.bind(that)()\n        }\n        btn.on('click', clickBack, that);\n    }\n\n    addCoin_small(node: cc.Node, index: number) {\n\n        cc.loader.loadRes(this.coin_name_1, cc.Prefab, (err, Prefab) => {\n            if (err) {\n                console.log(err, \"prefab 加载失败===============>>\")\n            } else {\n                let coin = cc.instantiate(Prefab)\n                node.addChild(coin,999)\n                let spine = coin.getChildByName(\"spineNode\").getComponent(sp.Skeleton);\n                let sc = coin.getComponent(\"coins\");\n                sc.initNum(index);\n                spine.clearTracks();\n                spine.setAnimation(0, \"animation\", false)\n                spine.setCompleteListener(() => {\n                    coin.destroy();\n                })\n            }\n        });\n\n    }\n\n    // addCoin_mid(node: cc.Node) {\n    //     cc.loader.loadRes(this.coin_name_2, cc.Prefab, (err, Prefab) => {\n    //         if (err) {\n    //             console.log(err, \"prefab 加载失败===============>>\")\n    //         } else {\n    //             let coin = cc.instantiate(Prefab)\n    //             node.parent.addChild(coin,999)\n    //             coin.name = \"coin\"\n    //             let spine = coin.getChildByName(\"spineNode\").getComponent(sp.Skeleton);\n    //             spine.clearTracks();\n    //             spine.setAnimation(0, \"Animation\", true)\n    //             Kit.manager.Audio.playMusic(AudioManager.GAME_COIN_LARGE,()=>{\n    //                 webframe.Notify.trigger(\"chagePage\");\n    //                 cc.log(Date.now());\n    //             })\n    //         }\n    //     });\n\n    // }\n\n    // addCoin_large(node: cc.Node) {\n    //     cc.loader.loadRes(this.coin_name_3, cc.Prefab, (err, Prefab) => {\n    //         if (err) {\n    //             console.log(err, \"prefab 加载失败===============>>\")\n    //         } else {\n    //             let coin = cc.instantiate(Prefab)\n    //             node.parent.addChild(coin,999)\n    //             coin.name = \"coin\"\n    //             let spine = coin.getChildByName(\"spineNode\").getComponent(sp.Skeleton);\n    //             let sc = coin.getComponent(\"coins\");\n    //             sc.initNum(GameData.totalStar_num);\n    //             spine.clearTracks();\n    //             spine.setAnimation(0, \"animation\", false)\n    //             Kit.manager.Audio.playMusic(AudioManager.GAME_END,()=>{\n    //                 webframe.Notify.trigger(\"chagePage\");\n    //             })\n    //         }\n    //     });\n\n    // }\n\n    //一个新的游戏结束流程 通知回到game menu\n    addCoin_midAndMenu(node: cc.Node,et) {\n        cc.loader.loadRes(this.coin_name_2, cc.Prefab, (err, Prefab) => {\n            if (err) {\n                console.log(err, \"prefab 加载失败===============>>\")\n            } else {\n                let coin = cc.instantiate(Prefab)\n                node.parent.addChild(coin,999)\n                coin.name = \"coin\"\n                let spine = coin.getChildByName(\"spineNode\").getComponent(sp.Skeleton);\n                spine.clearTracks();\n                spine.setAnimation(0, \"Animation\", true)\n                kit.manager.Audio.playEffect(AudioManager.GAME_COIN_LARGE,()=>{\n                    coin.destroy();\n                    window.webframe.Notify.trigger(\"entryMenu\",et);\n                    cc.log(Date.now());\n                })\n            }\n        });\n    }\n}\nexport default Util.getInstance()","import IPlatform from \"./IPlatform\";\n\nexport default class WebAdapter implements IPlatform {\n    public packageName: string = '';\n    public isPrintLog: boolean = true;\n    public onGameExit(): void {\n        // console.log(`onGameExit`)\n    }\n    public onGameReady(): void {\n        // console.log('onGameReady')\n        // GameInfo.instance.hasCalledOnGameReady = true;\n    }\n    public toast(message: string): void {\n        // console.error(message);\n    }\n\n    callFunction(funcName: string, parm: string): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    callFunctionResult(funcName: string, parm: string, moduleName: string) {\n        return {};\n    }\n}\n","const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class WordTool extends cc.Component {\n\n    @property({ type: cc.Sprite, displayName: 'word' }) sfWord: cc.Sprite = null;\n\n    @property({ type: cc.SpriteFrame, displayName: 'banana' }) banana: cc.SpriteFrame = null;\n    @property({ type: cc.SpriteFrame, displayName: 'bananas' }) bananas: cc.SpriteFrame = null;\n    @property({ type: cc.SpriteFrame, displayName: 'coconut' }) coconut: cc.SpriteFrame = null;\n    @property({ type: cc.SpriteFrame, displayName: 'coconuts' }) coconuts: cc.SpriteFrame = null;\n    @property({ type: cc.SpriteFrame, displayName: 'mango' }) mango: cc.SpriteFrame = null;\n    @property({ type: cc.SpriteFrame, displayName: 'mangoes' }) mangoes: cc.SpriteFrame = null;\n\n    Init(img: cc.SpriteFrame,targetPos:cc.Vec2 = cc.v2(0,-150),callback:Function = null) {\n        this.sfWord.node.opacity = 0;\n        this.sfWord.node.setPosition(cc.v2(0,100));\n        this.sfWord.node.active = true;\n        this.sfWord.spriteFrame = img;\n        this.unscheduleAllCallbacks();\n       \n        this.sfWord.node.stopAllActions();\n        cc.tween(this.sfWord.node)\n        .to(0.3,{position:cc.v3(targetPos.x,targetPos.y,0),opacity:255})\n        .delay(2.4)\n        .to(0.3,{opacity:0})\n        .call(()=>{\n            callback && callback();\n        })\n        .start();\n    }\n\n    \n}\n","import ResLoader from \"../framework/load/ResLoader\";\nimport { kit } from \"../kit\";\nimport LogSystem from \"../system/log/LogSystem\";\n\n/** 音频类型枚举 */\nexport enum MusicType {\n    SOUND,  // 音效\n    MUSIC,  // 音乐\n    LOOP_SOUND     // 循环音效\n}\n\n/** 音频工具类 */\nexport default class AudioUtil {\n    /** 背景音乐缓存池 */\n    private static _musicPool: Map<string, __AudioSource> = new Map<string, __AudioSource>();\n    /** 音效缓存池 */\n    private static _soundPool: Map<string, __AudioSource[]> = new Map<string, __AudioSource[]>();\n    /** 循环音效 */\n    private static _loopSoundPool: Map<string, __AudioSource> = new Map<string, __AudioSource>();\n    /** 当前背景音乐 */\n    private static _curMusic: __AudioSource;\n    /** 当前音效 */\n    private static _curSound: string = \"\";\n    /** 上次播放音效时间 */\n    private static _lastSoundTime: number = 0;\n    /** 是否暂停所有音效 */\n    private static _pauseFlag: boolean = false;\n    /** 当前音频状态级别，数字越大越高 配合_pauseFlag判断 */\n    private static _level: number = 0;\n\n    private static getFixedPath(bundleName: string | cc.AssetManager.Bundle, path: string) {\n        let cachePath = '';\n        if (bundleName instanceof cc.AssetManager.Bundle) {\n            cachePath = bundleName.name\n        } else {\n            cachePath = bundleName\n        }\n        return `${cachePath}/${path}`\n    }\n    /**\n     * 播放音效\n     * @param {string} path 音效资源\n     */\n    public static playEffect(bundleName: string | cc.AssetManager.Bundle, path: string, finishCb?: () => void): void {\n        if (AudioUtil._pauseFlag) { return; }\n        let curTime = new Date().getTime();\n        if (path === AudioUtil._curSound) {\n            let tempTime = curTime - AudioUtil._lastSoundTime;\n            if (tempTime < 50) {\n                return;\n            }\n        }\n        AudioUtil._curSound = path;\n        AudioUtil._lastSoundTime = curTime;\n        let fixedPath = AudioUtil.getFixedPath(bundleName, path);\n        let source = AudioUtil.getEffectFromPool(fixedPath);\n        if (source) {\n            source.play(false, finishCb);\n        } else {\n            source = new __AudioSource(bundleName, path, MusicType.SOUND);\n            AudioUtil.addEffectToPool(fixedPath, source);\n            source.play(false, finishCb);\n        }\n    }\n\n    /** 暂停音效 */\n    public static stopEffect(): void {\n        AudioUtil._soundPool.forEach((value: __AudioSource[], key: string, map) => {\n            if (value) {\n                for (let source of value) {\n                    source.stop();\n                }\n            }\n        });\n    }\n\n    /** 播放循环音效 */\n    public static playLoopEffect(bundleName: string | cc.AssetManager.Bundle, path: string): void {\n        if (AudioUtil._pauseFlag) { return; }\n        let fixedPath = AudioUtil.getFixedPath(bundleName, path); \n        let source = AudioUtil._loopSoundPool.get(fixedPath);\n        if (!source) {\n            source = new __AudioSource(bundleName, path, MusicType.LOOP_SOUND);\n            AudioUtil._loopSoundPool.set(fixedPath, source);\n        }\n        source.play(true);\n    }\n\n    /** 暂停循环音效 */\n    public static stopLoopEffect(bundleName: string | cc.AssetManager.Bundle, path: string): void {\n        let fixedPath = AudioUtil.getFixedPath(bundleName, path); \n        let source = AudioUtil._loopSoundPool.get(fixedPath);\n        if (source) {\n            source.stop()\n        }\n    }\n\n    /**\n     * 播放音效\n     * @param {string} path 播放背景音乐\n     */\n    public static playMusic(bundleName: string | cc.AssetManager.Bundle, path: string): void {\n        if (AudioUtil._pauseFlag) { return; }\n        if (AudioUtil._curMusic) {\n            AudioUtil._curMusic.stop();\n        }\n        let fixedPath = AudioUtil.getFixedPath(bundleName, path);\n        let source = AudioUtil._musicPool.get(fixedPath);\n        if (source) {\n            source.play(true);\n        } else {\n            source = new __AudioSource(bundleName, path, MusicType.MUSIC);\n            AudioUtil._musicPool.set(fixedPath, source);\n            source.play(true);\n        }\n        AudioUtil._curMusic = source;\n    }\n\n    /** 暂停音效 */\n    public static stopMusic(): void {\n        if (AudioUtil._curMusic) {\n            AudioUtil._curMusic.stop();\n        }\n    }\n\n    public static passMusic(): void {\n        if (AudioUtil._curMusic) {\n            AudioUtil._curMusic.pause();\n        }\n    }\n\n    public static resumeMusic(): void {\n        if (AudioUtil._curMusic) {\n            AudioUtil._curMusic.resume();\n        }\n    }\n\n    /** 从音效对象池获取对象 */\n    public static getEffectFromPool(path: string): __AudioSource {\n        let list = AudioUtil._soundPool.get(path);\n        if (list) {\n            for (let source of list) {\n                if (!source.isPlaying()) {\n                    return source;\n                }\n            }\n        }\n        return null;\n    }\n\n    /** 像音效对象池添加对象 */\n    public static addEffectToPool(path: string, source: __AudioSource): void {\n        let list = AudioUtil._soundPool.get(path);\n        if (list) {\n            list.push(source);\n        } else {\n            list = [];\n            list.push(source);\n            AudioUtil._soundPool.set(path, list);\n        }\n    }\n\n    /**\n     * 设置暂停所有音效标志\n     * @param {boolean} flag 标志 true-暂停  false-恢复\n     * @param {number} level 设置状态级别，数字越大级别越高，高级别逻辑覆盖低级别，低级别不能覆盖高级别。\n     */\n    public static setPauseFlag(flag: boolean, level: number = 0): void {\n        AudioUtil._level = level;\n        AudioUtil._pauseFlag = flag;\n        if (flag) {\n            if (AudioUtil._curMusic) { AudioUtil._curMusic.pause(); }\n            AudioUtil.pauseLoopEffects();\n        } else {\n            if (AudioUtil._curMusic) { AudioUtil._curMusic.resume(); }\n            AudioUtil.resumeLoopEffects();\n        }\n    }\n\n    /** 暂停所有循环音效 */\n    public static pauseLoopEffects(): void {\n        AudioUtil._loopSoundPool.forEach((v: __AudioSource, key: string) => {\n            v.pause();\n        });\n    }\n\n    /** 恢复所有循环音效 */\n    public static resumeLoopEffects(): void {\n        AudioUtil._loopSoundPool.forEach((v: __AudioSource, key: string) => {\n            v.resume();\n        });\n    }\n\n    public static stopEffectByName(path: string) {\n        let list = AudioUtil._soundPool.get(path)\n        if (list) {\n            list.forEach((value) => {\n                value.stop()\n            })\n        }\n    }\n\n    /**\n     * 新版播放音效\n     * @param bundleName \n     * @param path \n     * @param isSingle 是否唯一\n     * @param isLoop 是否循环\n     * @returns \n     */\n    static async playEffectByName(bundleName: string | cc.AssetManager.Bundle, path: string, isSingle: boolean = true, isLoop: boolean = false) {\n        return new Promise<void>(resolve => {\n            if (AudioUtil._pauseFlag) {\n                resolve()\n                return\n            }\n\n            let curTime = new Date().getTime()\n            if (path === AudioUtil._curSound) {\n                let tempTime = curTime - AudioUtil._lastSoundTime\n                if (tempTime < 50) {\n                    resolve()\n                    return\n                }\n            }\n\n            let fixedPath = AudioUtil.getFixedPath(bundleName, path)\n\n            if (isSingle) {\n                AudioUtil.stopEffectByName(fixedPath)\n            }\n\n            AudioUtil._curSound = path;\n            AudioUtil._lastSoundTime = curTime;\n            \n            let source = null\n            if (isLoop) {\n                source = AudioUtil._loopSoundPool.get(fixedPath)\n            } else {\n                source = AudioUtil.getEffectFromPool(fixedPath)\n            }\n\n            if (source) {\n                source.play(isLoop, () => {\n                    resolve()\n                })\n            } else {\n                source = new __AudioSource(bundleName, path, MusicType.SOUND)\n                if (isLoop) {\n                    AudioUtil._loopSoundPool.set(fixedPath, source)\n                } else {\n                    AudioUtil.addEffectToPool(fixedPath, source)\n                }\n                source.play(isLoop, () => {\n                    resolve()\n                })\n            }\n        })\n    }\n\n    static destroyAudio(bundleName: string, path: string) {\n        let fixedPath = AudioUtil.getFixedPath(bundleName, path)\n        if (AudioUtil._soundPool.has(fixedPath)) {\n            AudioUtil.stopEffectByName(fixedPath)\n            let list = AudioUtil._soundPool.get(fixedPath)\n            list.forEach((element) => {\n                element.destroy()\n            })\n            AudioUtil._soundPool.delete(fixedPath)\n        }\n        if (AudioUtil._musicPool.has(fixedPath)) {\n            AudioUtil.stopMusic()\n            let clip = AudioUtil._musicPool.get(fixedPath)\n            clip.destroy()\n            AudioUtil._musicPool.delete(fixedPath)\n        }\n        if (AudioUtil._loopSoundPool.has(fixedPath)) {\n            AudioUtil.stopLoopEffect(bundleName, path)\n            let clip = AudioUtil._loopSoundPool.get(fixedPath)\n            clip.destroy()\n            AudioUtil._loopSoundPool.delete(fixedPath)\n        }\n    }\n}\n\nclass __AudioSource {\n    // 是否加载完成\n    private _loaded: boolean = false;\n    // 音频资源\n    private _audioSource: cc.AudioClip = null;\n    // bundle名称\n    private _bundleName: string | cc.AssetManager.Bundle;\n    // 音频路径\n    private _path: string = \"\";\n    // 音频类型\n    private _musicType: MusicType;\n    // 是否已被暂停\n    private _isStop: boolean;\n\n    private state = {} as any\n\n    public constructor(bundleName: string | cc.AssetManager.Bundle, path: string, type: MusicType) {\n        this._bundleName = bundleName;\n        this._path = path;\n        this._musicType = type;\n    }\n\n    /**\n     * 音频加载接口\n     * @param {() => void} cb 加载完成回调\n     */\n    private loadRes(cb: () => void): void {\n        if (!this._loaded) {\n            ResLoader.loadRes(this._path, cc.AudioClip, (err: any, res: cc.AudioClip) => {\n                if (err) {\n                    LogSystem.warn(`音频资源加载出错:${this._path}`);\n                } else {\n                    this._audioSource = res;\n                    this._loaded = true;\n                    if (cb) { cb(); }\n                }\n            }, this._bundleName);\n        }\n    }\n\n    public play(isLoop?: boolean, cb?: () => void): void {\n        this._isStop = false;\n        if (this._loaded) {\n            this.stop();\n            // this._audioSource.loop = isLoop;\n            // this._audioSource.play();\n            if (!isLoop) {\n                isLoop = false\n            }\n            this.state.isLoop = isLoop;\n            this.state.isPlaying = true;\n            if (this._musicType == MusicType.MUSIC) {\n                this.state.id = cc.audioEngine.playMusic(this._audioSource, isLoop);\n            } else {\n                this.state.id = cc.audioEngine.playEffect(this._audioSource, isLoop);\n            }\n            if (cb) {\n                let duration = this._audioSource.duration;\n                kit.system.timer.doOnce(duration * 1000, () => {\n                    cb();\n                }, this, null, false)\n            }\n        } else {\n            this.loadRes(() => {\n                if (!this._isStop) {\n                    this.play(isLoop, cb);\n                }\n            });\n        }\n    }\n\n    async playEffect(isLoop?: boolean) {\n        return new Promise<void>(resolve => {\n            this.play(isLoop, () => {\n                resolve()\n            })\n        })\n    }\n\n    public isPlaying(): boolean {\n        return this.state.isPlaying;\n    }\n\n    public stop(): void {\n        this._isStop = true;\n        if (this._loaded) {\n            // this._audioSource.stop();\n            if (this.state.id != null && this.state.id != undefined) {\n                if (this._musicType == MusicType.MUSIC) {\n                    cc.audioEngine.stopMusic();\n                } else {\n                    cc.audioEngine.stopEffect(this.state.id);\n                }\n            }\n        }\n    }\n\n    public pause(): void {\n        if (this._loaded) {\n            // this._audioSource.pause();\n            if (this.state.id) {\n                if (this._musicType == MusicType.MUSIC) {\n                    cc.audioEngine.pauseMusic();\n                } else {\n                    cc.audioEngine.pauseEffect(this.state.id);\n                }\n            }\n        }\n    }\n\n    public resume(): void {\n        if (this._loaded) {\n            // this._audioSource.resume();\n            if (this.state.id) {\n                if (this._musicType == MusicType.MUSIC) {\n                    cc.audioEngine.resumeMusic();\n                } else {\n                    cc.audioEngine.resumeEffect(this.state.id);\n                }\n            }\n        }\n    }\n\n    public destroy(): void {\n        this.stop();\n        if (this._audioSource) {\n            // console.log('release audio:' + this._audioSource.name)\n            cc.assetManager.releaseAsset(this._audioSource)\n            this._audioSource.destroy()\n            this._audioSource = null;\n        }\n    }\n}","const { ccclass, property } = cc._decorator;\n@ccclass\nexport default class touchSingle extends cc.Component {\n    private _touchID: number = null;\n\n    private _touchStart(event) {\n        if (this._touchID !== null) {\n            event.stopPropagation();\n        } else {\n            this._touchID = event.getID();\n        }\n    }\n\n    private _touchMove(event) {\n        if (this._touchID !== event.getID()) {\n            event.stopPropagation();\n        }\n    }\n\n    private _touchEnd(event) {\n        if (this._touchID !== event.getID()) {\n            event.stopPropagation();\n        } else if (!event.simulate) {\n            this._touchID = null;\n        }\n    }\n\n    onEnable() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this._touchStart, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._touchMove, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_END, this._touchEnd, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._touchEnd, this, true);\n    }\n\n    onDisable() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this._touchStart, this, true);\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this._touchMove, this, true);\n        this.node.off(cc.Node.EventType.TOUCH_END, this._touchEnd, this, true);\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._touchEnd, this, true);\n    }\n}\n","import { kit } from \"../kit\";\n\n/**\n * 加载bundle\n * @param bundleName\n * @returns\n */\nexport function loadBundle(bundleName: string): Promise<any> {\n    return new Promise((res, rej) => {\n        console.time(bundleName);\n        cc.assetManager.loadBundle(bundleName, (error: Error, bundle: cc.AssetManager.Bundle) => {\n            console.timeEnd(bundleName);\n            if (error) {\n                rej(error);\n                return;\n            }\n            res(bundle);\n        })\n    })\n    kit.manager.resources.loadRes\n}\n\n/**\n * 加载bundle,并返回其中的scene\n * @param bundleName\n * @param sceneName\n * @returns scene\n */\nexport function loadBundleScene(bundleName: string, sceneName: string): Promise<any> {\n    return new Promise((res, rej) => {\n        loadBundle(bundleName).then(bundle => {\n            bundle.loadScene(sceneName, (error: Error, scene: any) => {\n                if (error) {\n                    rej(error);\n                    return;\n                }\n                res(scene)\n            })\n        }).catch(error => {\n            rej(error);\n        })\n    })\n}\n\n/**\n * 加载bundle\n * @param nameList \n * @returns bundle列表\n */\nexport function loadBundles(nameList: string[]): Promise<any> {\n    let list: Promise<any>[] = [];\n    for (let key in nameList) {\n        list.push(\n            loadBundle(nameList[key])\n        )\n    }\n    return Promise.all(list);\n}","export default class BundleUtil {\n    /**\n     * 加载bundle\n     * @param bundleName\n     * @returns\n     */\n    public static loadBundle(bundleName: string): Promise<any> {\n        return new Promise((res, rej) => {\n            // tslint:disable-next-line: no-console\n            console.time(bundleName);\n            cc.assetManager.loadBundle(bundleName, (error: Error, bundle: cc.AssetManager.Bundle) => {\n                // tslint:disable-next-line: no-console\n                console.timeEnd(bundleName);\n                if (error) {\n                    rej(error);\n                    return;\n                }\n                res(bundle);\n            })\n        })\n    }\n\n    /**\n     * 加载bundle,并返回其中的scene\n     * @param bundleName\n     * @param sceneName\n     * @returns scene\n     */\n    public static loadBundleScene(bundleName: string, sceneName: string): Promise<any> {\n        return new Promise((res, rej) => {\n            BundleUtil.loadBundle(bundleName).then(bundle => {\n                bundle.loadScene(sceneName, (error: Error, scene: any) => {\n                    if (error) {\n                        rej(error);\n                        return;\n                    }\n                    res(scene)\n                })\n            }).catch(error => {\n                rej(error);\n            })\n        })\n    }\n\n    /**\n     * 加载bundle\n     * @param nameList\n     * @returns bundle列表\n     */\n    public static loadBundles(nameList: string[]): Promise<any> {\n        let list: Promise<any>[] = [];\n        for (let key in nameList) {\n            list.push(\n                BundleUtil.loadBundle(nameList[key])\n            )\n        }\n        return Promise.all(list);\n    }\n}\n","\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        screenshotsprint: {\n            type: cc.Sprite,\n            default: null,\n        },\n        camera: cc.Camera,\n    },\n\n    screenshots(callback) { //截图函数\n        let picData = this.initImage();\n        let spriteFrame = this.showSprite(picData);\n        if (callback) callback(spriteFrame);\n    },\n    screenshotsInti() {//截图初始化\n        this._width = 0;\n        this._height = 0;\n        let texture = new cc.RenderTexture();\n        let gl = cc.game._renderContext;\n        texture.initWithSize(cc.visibleRect.width, cc.visibleRect.height, gl.STENCIL_INDEX8);\n        this.camera.targetTexture = texture;\n        this.texture = texture;\n    },\n    initImage() {\n        let data = this.texture.readPixels();\n        this._width = this.texture.width;\n        this._height = this.texture.height;\n        let picData = this.filpYImage(data, this._width, this._height);\n        return picData;\n    },\n\n    showSprite(picData) {\n        let texture = new cc.Texture2D();\n        console.log('canvas', this._width, this._height);\n        //cc.Texture2D.RGBA8888是一个cc.Texture2D中的枚举，可以自行查阅官网API\n        texture.initWithData(picData, cc.Texture2D.RGBA8888, this._width, this._height);\n        let spriteFrame = new cc.SpriteFrame();\n        spriteFrame.setTexture(texture);\n        return spriteFrame;\n    },\n    filpYImage(data, width, height) {\n        // create the data array\n        let picData = new Uint8Array(width * height * 4);\n        let rowBytes = width * 4;\n        for (let row = 0; row < height; row++) {\n            let srow = height - 1 - row;\n            let start = srow * width * 4;\n            let reStart = row * width * 4;\n            // save the piexls data\n            for (let i = 0; i < rowBytes; i++) {\n                picData[reStart + i] = data[start + i];\n            }\n        }\n        return picData;\n    },\n\n    captureAction(capture) {\n        let width = cc.winSize.width;\n        let height = cc.winSize.height;\n        let scaleAction = cc.scaleTo(1, 0.5);\n        let targetPos = cc.v2(width / 2 - 200, height / 2 - 200);\n        let moveAction = cc.moveTo(1, targetPos);\n        let spawn = cc.spawn(scaleAction, moveAction);\n\n        let finished = cc.callFunc(() => {\n            // capture.destroy();\n            capture.getComponent(cc.Sprite).spriteFrame = null;\n            console.log('动画结束');\n        })\n        let action = cc.sequence(spawn, finished);\n        capture.runAction(action);\n    },\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    testToCapture(){\n        this.camera.node.active = true;\n        // this.node.position = cc.v2(549, 211);\n        this.screenshotsInti();//首先进行初始化\n        this.scheduleOnce(() => {\n                //spriteFrame可以用于替换精灵中的spriteFrame属性来显示截图\n                this.screenshots((spriteFrame)=>{ \n                this.screenshotsprint.spriteFrame=spriteFrame\n                // this.captureAction(this.screenshotsprint.node);\n                this.camera.node.active = false;\n                });\n            }\n            , 0);//等到下一帧再进行截图的操作\n    },\n\n    testIoCapture(){\n        \n    },\n\n    // update (dt) {},\n});","\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node)\n    coin: cc.Node[] = [];\n\n    setCoinAni(num) {\n        for (let i = 0; i < this.coin.length; i++) {\n            if (i < num) {\n                this.coin[i].active = true;\n            } else {\n                this.coin[i].active = false;\n            }\n\n        }\n        this.node.getComponent(cc.Animation).play();\n        this.playCoinEffect(num);\n        this.scheduleOnce(() => {\n            for (let i = 0; i < this.coin.length; i++) {\n                this.coin[i].active = false;\n            }\n        }, 2);\n    }\n\n    playCoinEffect(num) {\n        let url = ''\n        url = `jinbi${num}`\n        cc.loader.loadRes(\"audio_common/\" + url, cc.AudioClip, (err, audio) => {\n            if (err) {\n                console.log(err, \"金币音效加载失败===============>>\")\n            } else {\n                cc.audioEngine.play(audio, false, 1);\n            }\n        });\n    }\n\n}\n","const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Coins extends cc.Component {\n\n    @property(cc.SpriteFrame)\n    m_frames = [];\n\n    @property(cc.Sprite)\n    num_1: cc.Sprite = null;\n\n    @property(cc.Sprite)\n    num_2: cc.Sprite = null;\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n\n\n    }\n\n    start() {\n        //this.initNum(18);\n    }\n\n    initNum(index: number) {\n        if (index < 10) {\n            cc.log(\"initNum ===\" + index);\n            this.num_2.node.active = false;\n            this.num_1.spriteFrame = this.m_frames[index];\n            cc.log(this.num_1.spriteFrame);\n        }\n        else {\n            var n1 = Math.floor(index / 10);\n            var n2 = Math.floor(index % 10);\n            cc.log(n1 + \"    \" + n2);\n            this.num_1.spriteFrame = this.m_frames[n1];\n            this.num_2.spriteFrame = this.m_frames[n2];\n        }\n    }\n\n    // update (dt) {}\n}\n","export default class Config {\n    // 关卡数量\n    public static readonly LEVEN_NUMBER: number = 3;\n    // 屏幕宽度\n    public static readonly SCENE_WIDTH: number = 1334;\n    // 过关水果数量\n    public static readonly LEVEL_TARGET_FRUIT_NUMBER: number = 3;\n\n    public static readonly COMPLETE_STAGE_POINTS: any[] = [{ x: -280, y: - 510 }, { x: -395, y: - 485 }, { x: -512, y: - 510 }];\n\n}","/**\n * 生命周期-创建完毕\n * @deprecated 废弃，推荐使用Events.LIFE_CYCLE_CREATED代替\n */\nexport const LIFE_CYCLE_CREATED: string = \"lifeCycleCreated\";\n/**\n * 生命周期-就绪\n * @deprecated 废弃，推荐使用Events.LIFE_CYCLE_READY\n */\nexport const LIFE_CYCLE_READY: string = \"lifeCycleReady\";\n/**\n * 生命周期-完成\n * @deprecated 废弃，推荐使用Events.LIFE_CYCLE_COMPLETE\n */\nexport const LIFE_CYCLE_COMPLETE: string = \"lifeCycleComplete\";\n/**\n * 生命周期-阻塞事件\n * @deprecated 废弃，推荐使用Events.LIFE_CYCLE_BLOCK\n */\nexport const LIFE_CYCLE_BLOCK: string = \"lifeCycleBlock\";\n/**\n * 生命周期-取消阻塞事件\n * @deprecated 废弃，推荐使用Events.LIFE_CYCLE_UNBLOCK\n */\nexport const LIFE_CYCLE_UNBLOCK: string = \"lifeCycleUnblock\";\n/**\n * 生命周期-给子模块传参\n * @deprecated 废弃，推荐使用Events.LIFE_CYCLE_PARAMS\n */\nexport const LIFE_CYCLE_PARAMS: string = \"lifeCycleParams\";\n/**\n * 生命周期-返回(不弹出确认框直接退出，用于有失败概念的游戏使用)\n * @deprecated 废弃，推荐使用Events.LIFE_CYCLE_BACK\n */\nexport const LIFE_CYCLE_BACK: string = \"lifeCycleBack\";\n/**\n * 跟读模块-子游戏TO跟读模块事件\n * @deprecated 废弃，推荐使用Events.FOLLOW_CLIENT_TO_MODULE\n */\nexport const FOLLOW_CLIENT_TO_MODULE: string = 'followClientToModule';\n/**\n * 跟读模块-子游戏TO跟读模块事件\n * @deprecated 废弃，推荐使用Events.FOLLOW_MODULE_TO_CLIENT\n */\nexport const FOLLOW_MODULE_TO_CLIENT: string = 'followModuleToClient';\n/**\n * 视频 框架-子游戏\n * @deprecated 废弃，推荐使用Events.VIDEO_CLIENT_TO_MODULE\n */\nexport const VIDEO_CLIENT_TO_MODULE: string = 'voidClient2Module';\n/**\n *  视频 子游戏-框架\n * @deprecated 废弃，推荐使用Events.VIDEO_MODULE_TO_CLIENT\n */\nexport const VIDEO_MODULE_TO_CLIENT: string = 'voidModule2Client';\n/**\n * 控制容器顶部按钮 (用于有自身有二级返回的游戏使用)\n * @deprecated 废弃，推荐使用Events.SET_TOP_BAR_ACTIVE\n */\nexport const SET_TOP_BAR_ACTIVE: string = \"setTopBarActive\";\n\n\nexport default class Events {\n    // 生命周期-创建完毕\n    public static readonly LIFE_CYCLE_CREATED: string = \"lifeCycleCreated\";\n    // 生命周期-就绪\n    public static readonly LIFE_CYCLE_READY: string = \"lifeCycleReady\";\n    // 生命周期-完成\n    public static readonly LIFE_CYCLE_COMPLETE: string = \"lifeCycleComplete\";\n    // 生命周期-阻塞事件\n    public static readonly LIFE_CYCLE_BLOCK: string = \"lifeCycleBlock\";\n    // 生命周期-取消阻塞事件\n    public static readonly LIFE_CYCLE_UNBLOCK: string = \"lifeCycleUnblock\";\n    // 给子模块传参\n    public static readonly LIFE_CYCLE_PARAMS: string = \"lifeCycleParams\";\n    // 生命周期-返回(不弹出确认框直接退出，用于有失败概念的游戏使用)\n    public static readonly LIFE_CYCLE_BACK: string = \"lifeCycleBack\";\n\n    // 跟读模块-子游戏TO跟读模块事件\n    public static readonly FOLLOW_CLIENT_TO_MODULE: string = 'followClientToModule';\n    // 跟读模块-子游戏TO跟读模块事件\n    public static readonly FOLLOW_MODULE_TO_CLIENT: string = 'followModuleToClient';\n\n    // 视频 框架-子游戏\n    public static readonly VIDEO_CLIENT_TO_MODULE: string = 'voidClient2Module';\n    // 视频 子游戏-框架(暂停、播放、卡顿、拖拽进度等) 枚举参考：VideoEventTransType\n    public static readonly VIDEO_MODULE_TO_CLIENT: string = 'voidModule2Client';\n\n    // 控制容器顶部按钮 (用于有自身有二级返回的游戏使用)\n    public static readonly SET_TOP_BAR_ACTIVE: string = \"setTopBarActive\";\n\n    // 展示通用弹窗\n    public static readonly SHOW_COMMON_TIPS_POP: string = \"showCommonTipsPop\";\n}","import GameMenu from \"./gameMenu\"\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GameGate extends cc.Component {\n\n    @property(cc.Label)\n    quizLabel: cc.Label = null;\n\n    @property(cc.Node)\n    selecNode:cc.Node = null;\n\n    @property(cc.Sprite)\n    showSpr:cc.Sprite = null;\n\n    @property(cc.Sprite)\n    btnbg:cc.Sprite = null;\n\n    @property(cc.Node)\n    veilNode:cc.Node = null;\n\n    @property(cc.Node)\n    popenNdoe:cc.Node = null;\n\n    @property(cc.Button)\n    clickBut:cc.Button = null;\n\n    @property(cc.Animation)\n    udAni:cc.Animation = null;\n\n    gameid = 0;\n    curGid = 0;\n    gMenu:GameMenu = null;\n    isSec = 0;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        \n    }\n\n    initInfo(gid,cid,isSec,gm){\n        this.gameid = gid;\n        this.curGid = cid;\n        this.isSec = isSec;\n        this.gMenu = gm;\n        console.log('game gate id ='+gid);\n        console.log('game isSec ='+this.isSec);\n        if (this.gameid == this.curGid) {\n            this.selecNode.active = true;\n            this.veilNode.active = false;\n            this.popenNdoe.active = true;\n            this.udAni.play();\n        }else if (this.gameid < this.curGid && this.isSec == 0) {\n            this.veilNode.active = false;\n            this.popenNdoe.active = true;\n            this.clickBut.interactable = false;\n\n            // let newMaterial = cc.Material.createWithBuiltin(<any>cc.Material.BUILTIN_NAME.GRAY_SPRITE,0)\n            // this.showSpr.setMaterial(0, newMaterial);\n            // this.btnbg.setMaterial(0, newMaterial);\n            // this.quizLabel.setMaterial(0, newMaterial);\n            this.showSpr.node.opacity = 190;\n            this.btnbg.node.opacity = 190;\n            this.quizLabel.node.opacity = 190;\n\n        }else if (this.gameid > this.curGid) {\n            this.clickBut.interactable = false;\n        }\n\n        if (this.isSec == 1) {\n            this.veilNode.active = false;\n            this.popenNdoe.active = true;\n            this.clickBut.interactable = true;\n        }\n\n        this.setShowImage();\n    }\n\n    setShowImage(){//动态加载 游戏的展示图 按照游戏顺序命名图片sg1-4\n        let url = ''; \n        if (this.gameid == 0) {\n            url = 'gameshow/sg1';\n            this.quizLabel.string  = 'Game 1';\n        }else if(this.gameid == 1) {\n            url = 'gameshow/sg2';\n            this.quizLabel.string  = 'Game 2';\n        }else if(this.gameid == 2) {\n            url = 'gameshow/sg3';\n            this.quizLabel.string  = 'Game 3';\n        }else if(this.gameid == 3) {\n            url = 'gameshow/sg4';\n            this.quizLabel.string  = 'Game 4';\n        }\n        let self = this;\n        cc.loader.loadRes(url,cc.SpriteFrame,function(err,spriteFrame) {\n            self.showSpr.spriteFrame = spriteFrame;\n            });\n    }\n\n    start () {\n\n    }\n\n    onClickBut(){\n        this.gMenu.gateClick(this.gameid);\n    }\n\n    // update (dt) {}\n}\n","import GameData from \"./GameData\";\nimport MainScene from \"./Main\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GameMenu extends cc.Component {\n\n    @property(cc.Node)\n    gpList: cc.Node[] = [];\n\n    @property(cc.Prefab)\n    gatePre:cc.Prefab = null;\n\n    curgameId = 0;\n    isSecgame = 0;\n    mainS:MainScene = null;\n    canClick = true;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {\n    // }\n\n    initMenu(cid,issg,isGoon,ms){\n        cc.log('game menu curid(page_num) == '+cid);\n        this.curgameId = cid;//这个是先前就有的page_num;用它判断游戏进度\n        this.isSecgame = issg;\n        this.mainS = ms;\n\n        let copygpList:cc.Node[];\n        let gameNum = GameData.node_path.length;\n        if (gameNum == 2) { //根据gamedata中配置的游戏数量显示\n            copygpList = [this.gpList[1],this.gpList[2]]\n        }else if(gameNum == 4){\n            copygpList = [...this.gpList];\n        }else if(gameNum == 3){\n            copygpList = [this.gpList[0],this.gpList[1],this.gpList[2]]\n            for (let i = 0; i < copygpList.length; i++) {\n                copygpList[i].x += 200;\n            }\n            copygpList[0].y += 50;\n            copygpList[1].y -= 30;\n            copygpList[2].y -= 40;\n        }\n\n        for (let i = 0; i < copygpList.length; i++) {\n            let gateitem = cc.instantiate(this.gatePre);\n            copygpList[i].addChild(gateitem);\n            let dtgCom = gateitem.getComponent('gameGate');\n            dtgCom.initInfo(i,this.curgameId,this.isSecgame,this);//由0开始给 游戏赋值ID 对应 gamedate的node_path\n        }\n\n        if (isGoon && issg == 0) {\n            this.scheduleOnce(()=>this.autoGame(),2);\n        }\n    }\n\n    start () {\n        \n    }\n\n    autoGame(){\n        cc.log('自动进入 gameid = '+this.curgameId);\n        this.mainS.openGame(this.curgameId);\n    }\n\n    gateClick(gid){\n        cc.log('点击进入 gameid = '+gid);\n        this.mainS.openGame(gid);\n        \n        \n    }\n\n    // update (dt) {}\n}\n","import ClickCmpt from \"./component/ClickCmpt\";\nimport Events from \"./events/events\";\nimport ResLoader from \"./framework/load/ResLoader\";\nimport PlatformSystem from \"./framework/platform/PlatformSystem\";\nimport PopupManager from \"./manager/popupManager.ts/PopupManager\";\nimport ResourcesManager, { ResourceType } from \"./manager/ResourcesManager\";\nimport { VideoEventTransType } from \"./structure/ClientModuleEnum\";\nimport { VideoClient2Module, VideoModule2Client } from \"./structure/ClientModuleInterface\";\nimport LinkedList from \"./structure/LinkedNode\";\nimport AudioManager2 from \"./system/audio/AudioManager2\";\nimport ErrorSystem from \"./system/error/ErrorSystem\";\nimport EventSystem from \"./system/event/EventSystem\";\nimport IEntity from \"./system/fsm/entity/IEntity\";\nimport Telegram from \"./system/fsm/message/Telegram\";\nimport IState from \"./system/fsm/state/IState\";\nimport StateMachine from \"./system/fsm/StateMachine\";\nimport LogSystem from \"./system/log/LogSystem\";\nimport HttpSystem from \"./system/net/http/HttpSystem\";\nimport TimerSystem from \"./system/timer/TimerSystem\";\nimport { LocalStorageUtils } from \"./utils/LocalStorageUtils\";\nimport { TimeUtils } from \"./utils/TimeUtils\";\nimport UIUtils, { UIContainer } from \"./utils/UIUtils\";\nimport ModelManager from \"./model/ModelManager\";\nimport ModelBase from \"./model/ModelBase\";\nimport { MessageBase } from \"./model/MessageBase\";\nimport NativeInfo, { NetworkType } from \"./model/NativeInfo\";\nimport SpotSystem from \"./system/log/SpotSystem\";\nimport { TIPS_TYPE } from \"./structure/ClientTipsEnum\";\n\n/**\n * cocos-kit\n * ```\n * 版本1：统一命名空间，兼容老版本\n * 版本2：可动态替换kit，大厅可以本地调试子bundle项目\n * ```\n */\nexport namespace kit {\n    export namespace util {\n        export const Time = TimeUtils;\n        export const Ui = UIUtils;\n        export const UiContainer = UIContainer;\n        export const LocalStorage = LocalStorageUtils;\n    }\n    export namespace system {\n        export const log: LogSystem = LogSystem.instance;\n        export const error: ErrorSystem = ErrorSystem.instance;\n        export const timer: TimerSystem = TimerSystem.instance;\n        export const platform: PlatformSystem = PlatformSystem.instance;\n        export const spot: SpotSystem = SpotSystem.instance;\n    }\n    export namespace manager {\n        export const resources: ResourcesManager = ResourcesManager.instance;\n        export namespace Resources {\n            export const Type = ResourceType;\n        }\n        export const Audio: AudioManager2 = AudioManager2.instance;\n        export const Event = EventSystem;\n        export const Http = HttpSystem;\n        export const Popup = PopupManager;\n    }\n\n    export namespace consts {\n        export const Event = Events;\n    }\n\n    export namespace structure {\n        export const LinkList = LinkedList;\n        export namespace Tips {\n            export const Type = TIPS_TYPE;\n        }\n\n    }\n\n    export namespace video {\n        export const videoTransType = VideoEventTransType;\n        export interface Module2Client extends VideoModule2Client { };\n        export interface Client2Module extends VideoClient2Module { };\n    }\n\n    export namespace component {\n        export const Click = ClickCmpt;\n    }\n\n    export class Loader extends ResLoader { };\n\n    export namespace fsm {\n        export interface Entity extends IEntity { };\n        export interface State<T extends Entity> extends IState<T> { };\n        export const StateManager = StateMachine;\n        export interface Telegrams extends Telegram { };\n    }\n\n    export namespace model {\n        export const modelManager: ModelManager = ModelManager.instance;\n        export class modelBase extends ModelBase { }\n        export class messageBase extends MessageBase { }\n        export class nativeInfo extends NativeInfo { }\n        export namespace netWork {\n            export const networkType = NetworkType;\n        }\n    }\n}","export * from \"./DefaultLoader\";\r\nexport * from \"./ImageLoader\";\r\nexport * from \"./JsonLoader\";\r\nexport * from \"./AudioLoader\";\r\nexport * from \"./AtlasLoader\";\r\nexport * from \"./TextLoader\";\r\nexport * from \"./PrefabLoader\";\r\nexport * from \"./SpineLoader\";","/**\n * 消息中心\n * 网络消息和客户端消息都从这里注册\n * @class\n * @extends cc.Class\n */\nlet LogFilterArray = ['EVENT_TIME_ONE_SECOND', 'EVENT_FRIEND_OFFLINE_TIME_CHANGE'];\nclass NotifierCenter {\n    constructor() {\n        let key = arguments[0];\n        this._TAG = '[' + key + '/NotifierCenter]';\n        this.events = {};\n        this.launch();\n    }\n\n    getScopeName(scope) {\n        try {\n            if (scope) {\n                return (scope._TAG ? scope._TAG : (scope.name ? scope.name : \"unknow\")).toString();\n            } else {\n                return \"unknow\";\n            }\n        } catch (e) {\n            return \"unknow\";\n        }\n    }\n\n    listen(eventName, handler, scope, isOnce) {\n        if (typeof eventName != 'string' || typeof handler !== 'function') {\n            cc.log(this._TAG, ' listen err: eName :' + eventName + 'handler:' + handler);\n            return;\n        }\n        var observer = { handler: handler, scope: scope, isOnce: isOnce };\n        var observers = this.events[eventName] || [];\n        for (var i = 0; i < observers.length; i++) {\n            var obs = observers[i];\n            //func.toString() 判断匿名函数的情况\n            if (obs.scope == scope && (obs.handler == handler || obs.handler.toString() == handler.toString())) {\n                cc.log(this._TAG, '消息重复注册:' + eventName + ' function:' + handler.name);\n                return;\n            }\n        }\n        observers.push(observer);\n        this.events[eventName] = observers;\n    }\n\n    ignore(eventName, handler, scope) {\n        if (typeof eventName != 'string') {\n            cc.log(\"-----eventName----\" + eventName);\n            this.ignoreScope(arguments[0]);\n            return;\n        }\n        if (typeof eventName != 'string' || typeof handler != 'function') {\n            cc.log(this._TAG, 'NotifierCenter remove err: eName :' + eventName + 'scope:' + scope._TAG);\n            return;\n        }\n\n        var observers = this.events[eventName];\n        if (!observers || observers.length === 0) {\n            return;\n        }\n        scope = scope || this;\n        var idx = -1; //同一个消息可能有多个节点注册\n        for(var i =0; i < observers.length;++i){\n            var observer = observers[i];\n            if (observer.scope == scope && (observer.handler == handler || observer.handler.toString() == handler.toString())) {\n                idx = i;\n            }\n        }\n        if(idx > -1){\n            this.events[eventName].splice(idx,1);\n        }\n        // var self = this;\n        // this.events[eventName] = observers.filter(function (obs) {\n        //     if (typeof obs != 'undefined') {\n        //         return obs.scope != scope || obs.handler != handler;\n        //     }\n        // });\n    }\n\n    trigger(eventName, params) {\n        if (!this.isRunning) { return; }\n        if (typeof eventName != 'string') {\n            cc.log(this._TAG, ' trigger err: eventName :' + eventName);\n            return;\n        }\n        var keys = Object.keys(this.events);\n        var obs = this.events[eventName];\n        if (!obs) {\n            return;\n        }\n        // if(CC_DEBUG && -1 == LogFilterArray.indexOf(eventName)){\n        //     cc.log(this._TAG,'trigger '+eventName+', observers: '+obs.length);\n        // }\n        var args = Array.prototype.slice.call(arguments, 1);\n        var self = this;\n        //发送\n        for (let i = 0; i < obs.length; i++) {\n            let ob = obs[i];\n            if (ob.scope && ob.scope instanceof cc.Component && !cc.isValid(ob.scope.node)) {\n                continue;\n            }\n            ob.handler.apply(ob.scope, args);\n            if (ob.isOnce) {\n                cc.log(self._TAG, 'trigger and remove once listener', eventName);\n            }\n        }\n        //移除 once和不合法的\n        obs = this.events[eventName];\n        if (!obs) {\n            return;\n        }\n        this.events[eventName] = obs.filter(function (ob) {\n            if (ob.scope && ob.scope instanceof cc.Component && !cc.isValid(ob.scope.node)) {\n                return false;\n            }\n            return !ob.isOnce;\n        });\n    }\n\n    ignoreScope(scope) {\n        let ignoreMsgs = \":\";\n        for (var msg in this.events) {\n            var obs = this.events[msg];\n            if (obs) {\n                this.events[msg] = obs.filter(function (ob) {\n                    if (ob.scope != scope) {\n                        return true;\n                    } else {\n                        ignoreMsgs = ignoreMsgs + msg + ',';\n                        return false;\n                    }\n                });\n            }\n        }\n    }\n    destroy() {\n        cc.log(this._TAG, 'destroy');\n        this.events = {};\n    }\n    shut() {\n        cc.log(this._TAG, '--------shut');\n        this.isRunning = false;\n    }\n    launch() {\n        cc.log(this._TAG, '--------launch');\n        this.isRunning = true;\n    }\n}\nmodule.exports = NotifierCenter;\n\n","\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node)\n    centerNode: cc.Node = null;\n\n    @property({ type: [cc.Node], displayName: \"右边动画组\" })\n    rightNode: cc.Node[] = [];\n\n    @property({ type: [cc.Node], displayName: \"右边动画组\" })\n    leftNode: cc.Node[] = [];\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n     onLoad () {\n        //  this,this.initeAniFun(3);\n     }\n\n    initeAniFun(sec) {\n        cc.log('录音 sec == '+sec);\n        let anim = this.centerNode.getComponent(cc.Animation);\n        let clip = anim.currentClip || anim.defaultClip;\n        if (clip) {\n            clip.speed = sec * 0.1;\n            anim.play();\n        }\n        let n = 0;\n        this.schedule(() => {\n            this.rightNode[n].getComponent(cc.Animation).play()\n            this.leftNode[n].getComponent(cc.Animation).play()\n            n += 1;\n        }, 0.2, 4, 0.2);\n\n    }\n\n    start() {\n\n    }\n\n    // update (dt) {}\n}\n","\nconst {ccclass, property} = cc._decorator;\nenum Mtype {\n    VERTICAL_P,\n    VERTICAL_N, \n    HORIZONTAL_P,\n    HORIZONTAL_N,\n  }\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property({type:cc.Node,tooltip:\"当前屏的背景节点\"})\n    lubg1:cc.Node = null;\n\n    @property({type:cc.Node,tooltip:\"下一屏的背景节点\"})\n    lubg2:cc.Node = null;\n\n    @property({\n        type:cc.Integer,\n        tooltip:\"循环速度\",\n        min:0,\n        max:1000,\n        step:50,\n        slide:true,\n    })\n    speed = 200;\n\n    @property({ type: cc.Enum(Mtype),tooltip:\"VERTICAL_P:垂直向下滚动  VERTICAL_N:垂直向上滚动 HORIZONTAL_P:水平向左滚动 HORIZONTAL_N:水平向右滚动\" })\n    mtype: Mtype = Mtype.VERTICAL_P;\n\n    isRunmap = false;//滚动开关\n    cur_lubg:cc.Node = null;\n    luOffset = 0;\n    // onLoad () {}\n\n    start () {\n        this.cur_lubg = this.lubg1;\n        this.setbgfix();\n        // this.isRunmap = true;\n    }\n\n    // fixBg() {\n    //     let frameSize: cc.Size = cc.winSize // 屏幕尺寸\n    //     let designResolution: cc.Size = cc.Canvas.instance.designResolution\n    //     // console.log(\" ====frameSize: \", frameSize);\n    //     // console.log(\" ====designResolution: \", designResolution);\n        \n    //     let designSize: cc.Size = cc.size(designResolution.width, designResolution.height)  // cc.Canvas.instance.designResolution\n    //     let frameAspectRatio: number = frameSize.width / frameSize.height\n    //     let screenSize: cc.Size = { ...designSize } as cc.Size\n        \n    //     // console.log(\" ====screenSize: \", screenSize);\n\n    //     let ratio: number = this.bg.width / this.bg.height\n    //     // console.log(\" ====ratio: \", ratio, \"   ===frameAspectRatio: \", frameAspectRatio);\n    //     if (ratio > frameAspectRatio) {\n    //         let width = this.bg.width * screenSize.height / this.bg.height\n    //         this.bg.width = width\n    //         this.bg.height = screenSize.height\n    //     } else {\n    //         let scale = frameSize.width / designSize.width;\n    //         this.bg.width = designSize.width * scale;\n    //         this.bg.height = designSize.height * scale;\n\n    //     }\n    //     // console.log(\" ====: \", this.bg.width, \"   ===frameAspectRatio: \", this.bg.height);\n\n    //     this.bg.x = 0\n    //     this.bg.y = 0\n    // }\n\n    setbgfix(){\n        let frameSize: cc.Size = cc.winSize;\n        cc.log(\"frameSize\",frameSize)\n        let designResolution: cc.Size = cc.Canvas.instance.designResolution\n        let designSize: cc.Size = cc.size(designResolution.width, designResolution.height)\n        let frameAspectRatio: number = frameSize.width / frameSize.height\n        let screenSize: cc.Size = { ...frameSize } as cc.Size\n\n        let ratio: number = this.node.width / this.node.height\n        if (ratio > frameAspectRatio) {\n            let width = this.node.width * screenSize.height / this.node.height\n            this.lubg1.width = width\n            this.lubg1.height = screenSize.height\n            this.lubg2.width = width\n            this.lubg2.height = screenSize.height\n            switch (this.mtype) {\n                case Mtype.VERTICAL_P:\n                    this.lubg2.y = screenSize.height;\n                    this.luOffset = screenSize.height;\n                    break;\n                case Mtype.VERTICAL_N:\n                    this.lubg2.y = -screenSize.height;\n                    this.luOffset = screenSize.height;\n                    break;\n                case Mtype.HORIZONTAL_P:\n                    this.lubg2.x = width;\n                    this.luOffset = width;\n                    break;\n                case Mtype.HORIZONTAL_N:\n                    this.lubg2.x = -width;\n                    this.luOffset = width;\n                    break;\n                default:\n                    break;\n            }\n        } else {\n            let height = this.node.height * screenSize.width / this.node.width\n            this.lubg1.width = screenSize.width\n            this.lubg1.height = height\n            this.lubg2.width = screenSize.width\n            this.lubg2.height = height\n            switch (this.mtype) {\n                case Mtype.VERTICAL_P:\n                    this.lubg2.y = height;\n                    this.luOffset = height;\n                    break;\n                case Mtype.VERTICAL_N:\n                    this.lubg2.y = -height;\n                    this.luOffset = height;\n                    break;\n                case Mtype.HORIZONTAL_P:\n                    this.lubg2.x = screenSize.width;\n                    this.luOffset = screenSize.width;\n                    break;\n                case Mtype.HORIZONTAL_N:\n                    this.lubg2.x = -screenSize.width;\n                    this.luOffset = screenSize.width;\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    runlubg(dt){\n        var s = dt * this.speed;\n        \n        switch (this.mtype) {\n            case Mtype.VERTICAL_P:\n                this.lubg1.y -= s;\n                this.lubg2.y -= s;\n                if (this.cur_lubg.y <= -this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.y = this.lubg1.y + this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.y = this.lubg2.y + this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            case Mtype.VERTICAL_N:\n                this.lubg1.y += s;\n                this.lubg2.y += s;\n                if (this.cur_lubg.y >= this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.y = this.lubg1.y - this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.y = this.lubg2.y - this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            case Mtype.HORIZONTAL_P:\n                this.lubg1.x -= s;\n                this.lubg2.x -= s;\n                if (this.cur_lubg.x <= -this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.x = this.lubg1.x + this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.x = this.lubg2.x + this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            case Mtype.HORIZONTAL_N:\n                this.lubg1.x += s;\n                this.lubg2.x += s;\n                if (this.cur_lubg.x >= this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.x = this.lubg1.x - this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.x = this.lubg2.x - this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n        \n    }\n    \n    update (dt) {\n        if (this.isRunmap) {\n            this.runlubg(dt);\n        }\n    }\n}\n","/*\n * This script is automatically generated by Cocos Creator and is only used for projects compatible with v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 versions.\n * You do not need to manually add this script in any other project.\n * If you don't use cc.Action in your project, you can delete this script directly.\n * If your project is hosted in VCS such as git, submit this script together.\n *\n * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 版本的工程，\n * 你无需在任何其它项目中手动添加此脚本。\n * 如果你的项目中没用到 Action，可直接删除该脚本。\n * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。\n */\n\ncc.RotateBy._reverse = true;\n","const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    start () {\n        this.scheduleOnce(()=>this.showControl(),5)\n        this.node.on(\"touchend\",this.showControl,this);\n    }\n\n    showControl(){\n        if(this.node.opacity == 255)\n        {\n            this.node.opacity = 0\n        }else\n        {\n            this.node.opacity = 255\n        }\n        this.unscheduleAllCallbacks()\n        this.scheduleOnce(()=>this.hide(),6)\n    }\n\n    hide(){\n        if(this.node.opacity == 255)\n        this.node.opacity = 0\n    }\n}\n","cc.macro.ENABLE_TRANSPARENT_CANVAS = true;\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.VideoPlayer)\n    video: cc.VideoPlayer = null;\n\n    @property(cc.Prefab)\n    gameNodes: cc.Prefab[] = [];\n\n    @property(cc.Node)\n    bg: cc.Node = null;\n\n    @property(cc.Node)\n    play_btn: cc.Node = null;\n\n    @property(cc.Node)\n    controlNode: cc.Node = null;\n\n    @property(cc.Node)\n    controlBtn: cc.Node = null;\n\n    @property(cc.Node)\n    pauseNode: cc.Node = null;\n\n    @property(cc.Node)\n    playNode: cc.Node = null;\n\n    @property(cc.Node)\n    PRe: cc.Node = null;\n\n    @property(cc.Slider)\n    videoProgress: cc.Slider = null;\n\n    @property(cc.Label)\n    videoTime: cc.Label = null;\n\n    @property(cc.Label)\n    maxTime: cc.Label = null;\n\n    // @property(Number)\n    progressMax = 0\n\n    current = 0\n    gameIndex = 0\n    timeScript = []\n    timeOutScript = []\n    showGameIndex = -1           //透明度原因需要隐藏video的游戏\n    isPlaying = true\n    isControl = false\n    isUpSpeed = true\n\n    onLoad() {\n        this.timeScript = [];\n        this.timeOutScript = [];\n        this.isPlaying = true;\n        this.current = 0;\n    }\n\n    start() {\n        // this.regisEvent()\n        this.video.node.active = true;\n        console.log(\"video showout\")\n    }\n\n    regisEvent() {\n        this.video.node.on(\"ready-to-play\", this.vedioReady, this);\n        this.video.node.on(\"meta-loaded\", this.vedioLoaded, this);\n        this.video.node.on(\"playing\", this.vedioPlaying, this);\n        this.video.node.on(\"paused\", this.vedioPaused, this);\n        this.video.node.on(\"completed\", this.vedioCompleted, this);\n        this.videoProgress.node.on(\"slide\", this.changeProgress, this);\n        this.controlBtn.on(\"touchstart\", this.control_btn_start, this);\n        this.controlBtn.on(\"touchend\", this.control_btn_end, this);\n        this.controlBtn.on(\"touchcancel\", this.control_btn_end, this);\n    }\n\n    vedioCompleted() {\n        console.log(\"open_vedio_Completed\");\n        window.webframe.Notify.trigger(  //这里是英文 等app 消息 ，中文不需要 去掉直接走游戏初始化逻辑\n            \"open_vedio_Completed\"\n        );\n    }\n\n    vedioReady() {\n        console.log(\"vedioReady\");\n        // this.play_btn.active = true;\n        // this.bg.getChildByName(\"load\").active = false\n        this.node.active=false;\n        window.webframe.Notify.trigger(  //这里是英文 等app 消息 ，中文不需要 去掉直接走游戏初始化逻辑\n            \"open_vedio_Completed\"\n        );\n    }\n\n    vedioPlaying() {\n        console.log(\"vedioPlaying\");\n    }\n\n    vedioPaused() {\n        console.log(\"vedioPaused\");\n    }\n\n    vedioLoaded() {\n        console.log(\"vedioLoaded\");\n        console.log(\"video totaltime ==== \" + this.video.getDuration());\n        this.progressMax = this.video.getDuration();\n        this.maxTime.string = \"/\" + this.secondToDate(this.progressMax);\n    }\n\n    secondToDate(result) {\n        var m = Math.floor((result / 60 % 60)) < 10 ? '0' + Math.floor((result / 60 % 60)) : Math.floor((result / 60 % 60));\n        var s = Math.floor((result % 60)) < 10 ? '0' + Math.floor((result % 60)) : Math.floor((result % 60));\n        return result = m + \":\" + s;\n    }\n\n    vedioPause(event, data) {\n        console.log(\"vedioPaused!!!!!!!!!!\");\n        this.video.pause();\n        this.pauseNode.active = false;\n        this.playNode.active = true;\n    }\n\n    vedioPlay(event, data) {\n        this.video.play();\n        this.pauseNode.active = true;\n        this.playNode.active = false;\n    }\n\n    play() {\n        console.log(\"play video url ==== \" + this.video.remoteURL);\n        //  AudioManager.playMusic(AudioManager.JINGYIN)\n        this.video.play();\n        this.bg.active = false;\n        this.scheduleOnce(() => this.setProgress(), 0.2)\n        this.controlNode.active = true\n    }\n\n    setProgress() {\n        this.video.currentTime += 0.01\n        this.videoProgress.progress = this.video.currentTime / this.progressMax\n        // this.videoProgress.getComponent(cc.ProgressBar).progress = this.videoProgress.progress;\n        this.PRe.getComponent(cc.ProgressBar).progress = this.videoProgress.progress;\n        this.videoTime.string = this.secondToDate(this.video.currentTime);\n    }\n\n    showVideoActive() {\n        this.video.node.active = true\n        this.video.currentTime += 0.1;\n    }\n\n    setVideotime() {\n        this.video.node.active = true\n        this.video.currentTime = this.timeOutScript[this.gameIndex]\n    }\n\n    game_right() {\n        if (this.node.getChildByName(\"game\")) {\n            this.node.getChildByName(\"game\").destroy();\n        }\n        this.gameIndex++;\n        console.log(\"game_right === \" + this.gameIndex);\n        //  TigoManager.callAppToCollect(this.gameIndex, 1005, 0);\n        // this.video.currentTime += 0.05;\n        this.video.play();\n        this.isPlaying = true;\n        this.controlNode.active = true;\n    }\n\n    addGame(index) {\n        if (index == this.showGameIndex) {\n            this.video.node.active = false\n        }\n        //   GameData.SetddManageMentIndex(index)\n        var game = cc.instantiate(this.gameNodes[index]);\n        this.node.addChild(game);\n        game.name = \"game\";\n    }\n\n    UpSpeed() {\n        //   TigoManager.callAppToSpeed()\n    }\n\n    changeProgress() {\n        this.PRe.getComponent(cc.ProgressBar).progress = this.videoProgress.progress;\n        // this.videoProgress.getComponent(cc.ProgressBar).progress = this.videoProgress.progress;\n        this.video.currentTime = this.videoProgress.progress * this.progressMax;\n        this.game_check();\n        this.checkSpeed()\n    }\n\n    checkSpeed() {\n        if (this.isUpSpeed) {\n            let able = this.video.currentTime / this.progressMax\n            if (able >= 0.7) {\n                console.log(\"进度已经达到== changeProgress====》\")\n                this.UpSpeed()\n                this.isUpSpeed = false\n            }\n        }\n    }\n\n    game_check() {\n        let vt = this.video.currentTime;\n        let ts = this.timeScript;\n        if (vt < ts[0]) {\n            this.gameIndex = 0;\n        }\n        else if (vt > ts[0] && vt < ts[1]) {\n            this.gameIndex = 1;\n        }\n        else if (vt > ts[1] && vt < ts[2]) {\n            this.gameIndex = 2;\n        } else if (vt > ts[2] && vt < ts[3]) {\n            this.gameIndex = 3;\n        } else if (vt > ts[3] && vt < ts[4]) {\n            this.gameIndex = 4;\n        }\n        cc.log(\"gameIndex ====== \" + this.gameIndex);\n    }\n\n    rec_btn_call(event, data) {\n        //   TigoManager.callAppToRecord();\n    }\n\n    stop_btn_call(event, data) {\n        //   TigoManager.callAppToStopRecord();\n    }\n\n    control_btn_start(event, data) {\n        this.isControl = true;\n    }\n\n    control_btn_end(event, data) {\n        this.game_check();\n        cc.log(\"gameIndex === \" + this.gameIndex);\n        this.isControl = false;\n    }\n\n    update(dt) {\n        if (this.isControl == false) {\n            this.videoProgress.progress = this.video.currentTime / this.progressMax;\n            // this.videoProgress.getComponent(cc.ProgressBar).progress = this.videoProgress.progress;\n            this.PRe.getComponent(cc.ProgressBar).progress = this.videoProgress.progress;\n            this.videoTime.string = this.secondToDate(this.video.currentTime);\n        }\n        this.checkSpeed()\n        if (this.isPlaying && this.isControl == false) {\n\n            this.current = this.video.currentTime;\n\n            if (this.current >= this.timeScript[this.gameIndex] && this.current < this.timeScript[this.gameIndex] + 0.05) {\n                cc.log(\"add game!!!!  \" + this.gameIndex);\n                this.isPlaying = false;\n                this.video.pause();\n                this.addGame(this.gameIndex);\n                this.controlNode.active = false;\n            }\n        }\n        else {\n            return;\n        }\n\n    }\n\n    onDisable() {\n        //   EventMsg.off(\"setVideotime\", this.setVideotime, this,);\n        //  EventMsg.off(\"game_right\", this.game_right, this);\n    }\n}","/**\n * createby liuhuifang\n * time     2020-05-08\n * use      全局变量的声明\n */\nwindow.webframe = new cc.Class({});\nvar NotifierCenter = require('notifier_center');\nwebframe.Notify = new NotifierCenter('http');\n\n\n"],"file":"index.js"}